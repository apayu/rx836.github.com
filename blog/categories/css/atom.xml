<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: CSS | apa]]></title>
  <link href="http://blog.rx836.tw/blog/categories/css/atom.xml" rel="self"/>
  <link href="http://blog.rx836.tw/"/>
  <updated>2012-12-27T17:51:19+08:00</updated>
  <id>http://blog.rx836.tw/</id>
  <author>
    <name><![CDATA[阿帕]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[[CSS] 關於CSS Cursor]]></title>
    <link href="http://blog.rx836.tw/blog/css-cursor-rule/"/>
    <updated>2012-12-27T15:09:00+08:00</updated>
    <id>http://blog.rx836.tw/blog/css-cursor-rule</id>
    <content type="html"><![CDATA[<p><img src="https://lh5.googleusercontent.com/-OVdRqH4Q_sA/UNwXOft01eI/AAAAAAAACH4/Kg-eysHdgc8/s461/2012-12-27_152249.jpg" /></p>

<p>在提到CSS Cursor之前，要先說一下我跟CSS Cursor的第一次的認識，在我剛出社會時，做活動網站，常常會使用&lt;div&gt;來當作button來使用，有一天，PM跑過來跟我說，要把那個按鈕的鼠標從箭頭改成指頭，我才了解到鼠標對User的影響</p>

<!--more-->


<h2>Cursor</h2>

<p>先來簡單的介紹鼠標的作用，鼠標其實就是輔助你讓你知道現在可以做些甚麼事情，例如當你將滑鼠移到視窗邊緣時，會出現可以<strong>縮放的標誌</strong>，又或是將鼠標移到文字框時，會出現類似「工」型的圖案，意思是你可以在這邊輸入文字</p>

<p><img src="https://lh5.googleusercontent.com/-RdOW3VCBij4/UNwXOavbpLI/AAAAAAAACH8/JaDJMEYNyzM/s600/cursor_inputs.png" /></p>

<p>這在不管是系統的應用程式上，或是網頁瀏覽時，都是很常看到的輔助標誌，但我們今天主要講的是網頁瀏覽時的鼠標應用，在CSS裡面，如果要更改預設的鼠標，語法會是這樣寫</p>

<pre><code>div{
    cursor:move;
}
</code></pre>

<p><strong>cursor</strong> 是屬性名稱，而 <strong>move</strong> 是屬性值，當然，屬性值不只有move可以使用，更多的屬性值可以參考下面那個網站，也是我本人相當推薦的參考網站</p>

<p><a href="http://webdesigntutsplus.s3.amazonaws.com/tuts/405_cursors/table/table.html" target="_blank">CSS Cursor Values Across Browsers and Platforms</a></p>

<p>看過上面那個網站，會發現到，除了瀏覽器的不同以外，就連User所使用的系統不同，也會有不同的結果</p>

<p>那假如不想使用上面那些預設的圖案呢？我有沒有辦法使用自訂的鼠標？答案是有的，語法如下</p>

<pre><code>div{
    cursor: url('cursor.png'), default;
}
</code></pre>

<p>它跟 <strong>font-family</strong> 一樣，都需要有備用的鼠標，假如第一個鼠標不存在或不支援時，還能使用其它鼠標</p>

<p>也可以加上自訂圖案的位移座標</p>

<pre><code>cursor: url('cursor.png') 10 5, default;
</code></pre>

<p>分別代表x和y，用原始鼠標為起點(0,0)，往左位移10px，往上位移5px</p>

<h2>Cross Browser Cursor Rule</h2>

<p>不過要做到跨瀏覽器有幾點要特別注意的是，IE7、8只支援 <strong>.CUR</strong> 的檔案，所以一般我們都會這樣寫</p>

<pre><code>div{
    cursor: url('/cursors/cursor.png'),
                url('/cursors/cursor.cur'),
                default;
}       
</code></pre>

<p>讓非IE的瀏覽器使用第一個.png圖檔，假如是IE就使用.cur圖檔，都無法讀取時就使用default</p>

<p>特別注意的是，假如你的cursor圖檔與css檔是放在不同資料夾的話，IE的CSS Cursor<strong>並不支援相對路徑</strong>，只支援<strong>相對根路徑</strong>或是<strong>絕對路徑</strong>，所以像下面的寫法IE是不支援的</p>

<pre><code>cursor: url(../cursors/cursor.cur);
</code></pre>

<h2>結論</h2>

<p>現在利用移動設備瀏覽網頁的使用程度上越來越高，觸控式的螢幕輸入占了絕大多數，可能會覺得鼠標的影響已經越來越不重要，但不管如何，除非傳統的web網頁消失，不然建議大家還是要照著Progressive Enhancement(漸進式增強)的原則來設計網頁，達到良好的互動式設計</p>

<h3>參考資料:</h3>

<p><a href="http://webdesign.tutsplus.com/tutorials/htmlcss-tutorials/everything-you-need-to-know-about-the-css-cursor-rule/?utm_source=CSS+Weekly&utm_campaign=CSS_Weekly_Issue_34&utm_medium=web" target="_blank">Everything You Need to Know About the CSS Cursor Rule</a></p>

<p><a href="http://abgne.tw/css/css-mouse-cursor.html" target="_blank">男丁格爾-自訂網頁中的滑鼠游標</a></p>

<p><a href="http://hi.baidu.com/guohuihot/item/c88f6af387dcaec2a835a223" target="_blank">IE不支持CSS相对路径的自定义cursor</a></p>

<p>內容如有錯誤，歡迎指正</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[CSS] CSS position 觀念筆記心得]]></title>
    <link href="http://blog.rx836.tw/blog/css-positioning/"/>
    <updated>2012-12-22T11:30:00+08:00</updated>
    <id>http://blog.rx836.tw/blog/css-positioning</id>
    <content type="html"><![CDATA[<p><strong>css position</strong> 對於初學者來說觀念很容易混淆，我在剛學習時也很常搞不清楚relative和absolute之間的關係，但只要抓到幾個訣竅重點，其實可以很輕鬆的掌握它，這篇是紀錄我自己學習css position的心得，搭配幾個簡單易懂的範例，讓大家一起成長</p>

<!--more-->


<h2>Start</h2>

<p>首先，css position 屬性共有四個值，分別為 <strong>static</strong>、<strong>relative</strong>、<strong>absolute</strong>、<strong>fixed</strong>，其中，當你沒有設定position時，預設為static，下面就來介紹這四個值的差別</p>

<h3>static</h3>

<p>就如剛剛所提到的，static是預設值，意思是說，就算你沒宣告position這個屬性，默認還是為static，而通常這時候會影響到元素的位置，就是看它本身是 <strong>block</strong> 或是 <strong>inline</strong>，例如兩個&lt;div&gt;因為是block的關係，所以會上下各占據一行，那如果是兩個&lt;span&gt;，因為是inline，所以會在同一行裡面呈現</p>

<p>css</p>

<pre><code>#d1{
    width: 100px;
    height: 100px;
    background: blue;
}
#d2{
    width: 100px;
    height: 100px;
    background: red;
}
#s1{
        background: blue;
    }
#s2{
        background: red;
    }   
</code></pre>

<p>html</p>

<pre><code>&lt;div id="d1"&gt;
div1
&lt;/div&gt;
&lt;div id="d2"&gt;
div2
&lt;/div&gt;
&lt;span id="s1"&gt;span1&lt;/span&gt;&lt;span id="s2"&gt;span2&lt;/span&gt;
</code></pre>

<p><img src="https://lh6.googleusercontent.com/-k8UTysRkMoQ/UNVYRo_fstI/AAAAAAAACGc/4eVneQSvhDg/s214/2012-12-22_120559.jpg" /></p>

<p><img src="https://lh6.googleusercontent.com/-h58i2I7P0Fg/UNVYRt_asJI/AAAAAAAACGk/BkPXYijQpG0/s99/2012-12-22_120617.jpg" /></p>

<p>特別注意的是，static並不會受 <strong>top</strong>、<strong>bottom</strong>、<strong>left</strong> 和 <strong>right</strong> 這些屬性值影響</p>

<h3>relative</h3>

<p>假如元素的position屬性值設為relative，就會受到 <strong>top</strong>、<strong>bottom</strong>、<strong>left</strong> 和 <strong>right</strong> 這些值影響所在位置，利用剛剛的範例，我們增加position屬性值和一些位移看看結果</p>

<p>css</p>

<pre><code>#d1{
    width: 100px;
    height: 100px;
    background: blue;
    position: relative;
    top: 20px;
    left: 20px;
}
#d2{
    width: 100px;
    height: 100px;
    background: red;
}
</code></pre>

<p>我們在id為d1的&lt;div&gt;裡面加上了 <strong>position: relative</strong> 和 <strong>top:20px</strong> 還有 <strong>left:20px</strong>，會看到下面如圖的結果</p>

<p><img src="https://lh5.googleusercontent.com/-brly4x9g8ck/UNVYRm2M0kI/AAAAAAAACGg/MZagmsZ8e4U/s201/2012-12-22_121717.jpg" /></p>

<p>藍色的div從<strong>原本的位置</strong>往右下角位移了，從原始位置的左上角為起點，遠離左邊(left)20px的差距，遠離上面(top)也是20px的差距，但還是保留<strong>原本位置的空間</strong>，並且覆蓋到d2，注意我這邊特別註明是原本的位置，因為這會跟等下介紹的 <strong>absolute</strong> 有所不同，那有些人或許會有疑問，可以用 <strong>margin</strong> 取代嗎？我們來實驗一下</p>

<pre><code>#d1{
    width: 100px;
    height: 100px;
    background: blue;
    margin-top: 20px;
    margin-left: 20px;
}
#d2{
    width: 100px;
    height: 100px;
    background: red;
}
</code></pre>

<p><img src="https://lh5.googleusercontent.com/-mWSgkOP_EZ4/UNVYSFL7X9I/AAAAAAAACGs/jU3lCto1jGM/s217/2012-12-22_122152.jpg" /></p>

<p>有明顯的發現，利用屬性margin做位移，元素並沒有覆蓋堆疊的問題，但會<strong>影響到其它的元素位置</strong>，這是要特別注意小心的地方，不可不慎</p>

<h3>absolute</h3>

<p><strong>absolute</strong> 跟relative很像，差別在於位移時是從哪個起始點開始算起，剛剛的relative是從原本的位置開始算，而<STRIKE>absolute是從<strong>整個頁面的視窗</strong>開始算起</STRIKE>(感謝網友底下留言補充，這邊應該講從最近一個有 "position: relative" 的 parent node 開始算)，並且並不會保留它原本的<strong>空間</strong>，範例如下</p>

<pre><code>#d1{
    width: 100px;
    height: 100px;
    background: blue;
    position: absolute;;
    top: 20px;
    left: 20px;
}
#d2{
    width: 100px;
    height: 100px;
    background: red;
}
</code></pre>

<p><img src="https://lh5.googleusercontent.com/-gGhHTnjvx2M/UNVYSRKJwcI/AAAAAAAACGo/bqLVeZYOBok/s128/2012-12-22_123254.jpg" /></p>

<p>有發現藍色的&lt;div&gt;完全無視其它的元素存在，也不會干擾到其它的元素，因為它的原始空間也消失了，自己獨立起來自成一格，看起來還蠻容易了解的，不過有一個地方是初學者很容易混淆的，就是當relative和absolute一起使用時，那情形就會跟我們設想的不太一樣，範例如下</p>

<p>css</p>

<pre><code>#d1{
    width: 100px;
    height: 100px;
    background: blue;
    position: absolute;;
    top: 20px;
    left: 20px;
}
#d2{
    width: 100px;
    height: 100px;
    background: red;
}

#d3{
    position: relative;
    width: 300px;
    height: 300px;
    border: solid 1px orange;
}
</code></pre>

<p>html</p>

<pre><code>&lt;div id="d3"&gt;
    &lt;div id="d1"&gt;
    div1
    &lt;/div&gt;
    &lt;div id="d2"&gt;
    div2
    &lt;/div&gt;
&lt;/div&gt;
</code></pre>

<p>這裡多用一個id為d3的&lt;div&gt;包住兩個&lt;div&gt;，d3的position屬性值為relative，此時會看到藍色的&lt;div&gt;屬性值position雖然一樣是absolute，但會看到位移不太一樣了</p>

<p><img src="https://lh6.googleusercontent.com/-pxPW5Q1Kocc/UNVYSScFsqI/AAAAAAAACGw/quewGWodrDc/s330/2012-12-22_124729.jpg" /></p>

<p>會發現藍色的&lt;div&gt;是<strong>從id為d3的&lt;div&gt;左上角開始定位</strong>，這代表是說，如果屬性值為absolute的&lt;div&gt;，上面還有被其它元素包住，就要注意位移計算的起始值會有所不同，那如果將relative移除的話呢?</p>

<p><img src="https://lh5.googleusercontent.com/-L0jg9uoCRoI/UNVYS-iDosI/AAAAAAAACG8/_2MhBfq6cA0/s326/2012-12-22_124746.jpg" /></p>

<p>嗯！定位又從頁面視窗的左上角當作起始點囉，如果覺得範例感覺不到效果，可以將top和left的值加大，會更明顯</p>

<h3>fixed</h3>

<p>最後講到的是fixed，它常被用於在Menu bar，位置也是受到 <strong>top</strong>、<strong>bottom</strong>、<strong>left</strong> 和 <strong>right</strong> 這些值影響，跟absolute類似，但有兩個不一樣的地方</p>

<p>1.它的位移起始的依據永遠都是<strong>視窗頁面</strong>，也就是說就算它有relative的父元素，並不會受到影響</p>

<p>2.它會跟著scroll移動，也就是說當畫面被往下拉時，該元素會跟隨著移到相對的位置</p>

<p>基於以上兩點的特色，我們就可以做出永遠固定在視窗某個地方的元素</p>

<p><img src="https://lh3.googleusercontent.com/-S6zIGb8HXio/UNVYTBy6PLI/AAAAAAAACHA/y94BoXH5TO8/s1075/2012-12-22_143751.jpg" /></p>

<p>像是 <a href="http://pinterest.com/" target="_blank">pinterest</a> 就有用到類似的效果，不過記得要搭配 <strong> z-index</strong> 來做元素堆疊</p>

<h2>結論</h2>

<p>其實網路上有很多很好的文章在討論關於css position的用法和觀念，也有很多很漂亮的排版，但只要掌握好基本觀念，我相信對於那些複雜的layout也可以輕鬆的理解</p>

<p>另外除了上面討論的四個屬性值以外，CSS3其實還有新增另外兩個，分別叫做 <a href="http://www.w3.org/TR/css3-positioning/#center-positioning" target="_blank">position: center</a> 和 <a href="http://www.w3.org/TR/css3-positioning/#page-positioning" target="_blank">position: page</a>，不過因為非主流且各瀏覽器支援程度很低，有興趣的人在自行研究即可</p>

<h3>參考資料:</h3>

<p><a href="http://blog.teamtreehouse.com/css-positioning?utm_source=CSS+Weekly&utm_campaign=CSS_Weekly_Issue_34&utm_medium=web" target="_blank">CSS Positioning: A Comprehensive Look</a></p>

<p><a href="http://www.barelyfitz.com/screencast/html-training/css/positioning/" target="_blank">Learn CSS Positioning in Ten Steps(10個步驟學習CSS Position)</a></p>

<p><a href="http://css.1keydata.com/tw/position.php" target="_blank">CSS Position 位置</a></p>

<p>內容如有錯誤，歡迎指正</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[CSS] 利用CSS3做scrolling effect]]></title>
    <link href="http://blog.rx836.tw/blog/css3-scrolling-effect/"/>
    <updated>2012-12-11T07:05:00+08:00</updated>
    <id>http://blog.rx836.tw/blog/css3-scrolling-effect</id>
    <content type="html"><![CDATA[<p><img src="https://lh6.googleusercontent.com/-URpPFCw8GZY/UMZ5NsXYJuI/AAAAAAAACC4/Bjab2PYz86w/s1077/2012-12-11_071208.jpg" /></p>

<p>今天看到一篇文章介紹美國 <a href="http://www.ebay.com/new" target="_blank">ebay</a> 網站的scrolling effect，觀念其實蠻簡單的，重點是我原本以為需要用到js才能達到，但後來發現根本連一行js都不用寫，只需要用到CSS3即可，這邊就來筆記一下過程</p>

<!--more-->


<h2>Start</h2>

<p>一開始先準備三張可以延伸到整個螢幕大小的照片，如果手邊沒有，可以直接使用文章裡面的<a href="pepsized.com/wp-content/uploads/2012/11/lavender.zip" target="_blank">Demo</a>，就有現成的圖片可以練習，另外下面都是用Demo裡面的檔案做講解</p>

<p>HTML部份</p>

<pre><code>&lt;!DOCTYPE html&gt;
&lt;html class="no-js" lang="en"&gt;
&lt;head&gt;
&lt;meta charset="utf-8"&gt;
&lt;title&gt;From love for lavender&lt;/title&gt;
&lt;!-- 略... --&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;header class=" content"&gt;
        &lt;div class="wrapper"&gt;
                &lt;h1&gt;From love for lavender&lt;/h1&gt;
                &lt;p&gt;&lt;span&gt;Lavender&lt;/span&gt; (botanic name Lavandula) is a ....
                &lt;/p&gt;
        &lt;/div&gt;
&lt;/header&gt;

&lt;section class="content" id="oil"&gt;
        &lt;div class="wrapper"&gt;
                &lt;p&gt;&lt;span&gt;Lavender oil&lt;/span&gt; is an ... &lt;/p&gt;
        &lt;/div&gt;
&lt;/section&gt;
&lt;!-- 略... --&gt;
&lt;footer&gt;
        &lt;div class=wrapper&gt;
                 "From love for lavender" has been built ...
        &lt;/div&gt;
&lt;/footer&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>HTML部份就是常見的HTML5的架構，有&lt;header&gt;、&lt;section&gt;和&lt;footer&gt;，每個裡面都包含有一個class為 "wrapper" 的&lt;div&gt;</p>

<p>再來是基本的CSS部份</p>

<pre><code>.wrapper {
    width: 100%;
    margin: 0 auto;
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box; 
}
</code></pre>

<p>會看到有一個比較少見的屬性叫 <strong>box-sizing</strong>，他是CSS3的屬性，如果我們設box-sizing為 <strong>border-box</strong>，意思就是指width和height的部份都包含了 <strong>padding</strong> 和 <strong>border</strong>，詳細的屬性說明可以參考 <a href="http://www.w3cplus.com/content/css3-box-sizing" target="_blank">這篇</a></p>

<p>接著是scrolling effect部份</p>

<pre><code>section:after, header:after {
    content: "";
    display: block;
    height: 400px;
    width: 100%;
    background-size: cover;
    background-position: center center;
    background-repeat: no-repeat;
    background-attachment: fixed;
    box-shadow: inset 0 0 10px rgba(0, 0, 0, 0.6); 
}

header:after {
  background-image: url(../images/lavenderbg1.jpg); }
#oil:after {
  background-image: url(../images/lavenderbg2.jpg); }
#culinary:after {
  background-image: url(../images/lavenderbg3.jpg); }
#dried:after {
  background-image: url(../images/lavenderbg4.jpg); }
</code></pre>

<p>因為沒有用到js的關係，但我們又想在HTML上新增元素，所以我們可以利用CSS的pseudo-elements <strong>:after</strong>，他會幫我們在元素後面加上新的元素上去，並且擁有 <strong>background</strong>，另外，我們將屬性 <strong>background-attachment</strong> 設定為fixed，這也是scrolling effect的重點所在，意思就是指<strong>當頁面滾動時，背景圖並不會跟著移動</strong></p>

<p>這樣就大功告成囉，有沒有覺得效果很不錯呢？</p>

<h3>參考資料:</h3>

<p><a href="http://pepsized.com/how-to-recreate-the-new-e-bay-site-scrolling-effect/?utm_source=CSS+Weekly&utm_campaign=CSS_Weekly_Issue_33&utm_medium=web" target="_blank">How to recreate the new e-bay site scrolling effect</a></p>

<p><a href="http://www.w3cplus.com/content/css3-box-sizing" target="_blank">CSS3 Box-sizing </a></p>

<p><a href="http://www.w3school.com.cn/css/pr_background-attachment.asp" target="_blank">CSS background-attachment 属性</a></p>

<p>內容如有錯誤，歡迎指正</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[CSS] 5個對設計師有幫助的CSS屬性]]></title>
    <link href="http://blog.rx836.tw/blog/5-css-properties/"/>
    <updated>2012-12-05T14:50:00+08:00</updated>
    <id>http://blog.rx836.tw/blog/5-css-properties</id>
    <content type="html"><![CDATA[<p>如果要寫一個網頁，基本上就是利用HTML+CSS互相搭配(廢話)，網路上的教學也非常的多，除非是剛踏入這一行的新手，不然大部分的人對這都不陌生，不過雖然CSS整體來說並不難，但有幾個特別的屬性他並不是這麼直覺好懂，但卻很適合設計師來學習，所以這篇就來筆記幾個CSS，來幫助釐清觀念</p>

<!--more-->


<h2>Clear</h2>

<p>首先來看一個基本的網站架構</p>

<p>HTML</p>

<pre><code>&lt;div id="container"&gt;
    &lt;h1&gt;網站標題&lt;/h1&gt;
    &lt;div id="content"&gt;
        &lt;h2&gt;文章標題&lt;/h2&gt;
        &lt;p&gt;文章內容文章內容文章內容文章內容文章內容文章內容文章內容文章內容文章內容文章內容&lt;/p&gt;
    &lt;/div&gt;
    &lt;div id="sidebar"&gt;
        &lt;h2&gt;側邊欄位1&lt;/h2&gt;
    &lt;/div&gt;
    &lt;div id="sidebar2"&gt;
        &lt;h2&gt;側邊欄位2&lt;/h2&gt;
    &lt;/div&gt;
    &lt;div id="footer"&gt;我是footer&lt;/div&gt;
&lt;/div&gt;
</code></pre>

<p>CSS</p>

<pre><code>#container{
    background:#0CF;
    width:450px;
}
#content{
    background:#FC3;
    width:250px;
    float:left;
}
#sidebar{
    float:left;
    background:#360;
    width:100px;
}
#sidebar2{
    float:left;
    background:#F0F;
    width:100px;
}
#footer{

}
</code></pre>

<p>看起來就長的像這樣</p>

<p><img src="https://lh6.googleusercontent.com/-hrlyAdCFVM4/UL9zdLc_WSI/AAAAAAAACBY/obrq-cebCvY/s470/2012-12-05_225116.jpg" /></p>

<p>HTML部份就是利用一個div做為最外層的container，裡面包有content、sidebar和footer，利用CSS的屬性 <strong>float</strong>，將content和sidebar排成水平一直線，這是排版常使用的技巧，可是會發現，footer卻不是心中所想的那樣置底，反而受到float影響而圍繞在其他的div周圍</p>

<h3>如何讓單一的div消除float的影響</h3>

<p>就是 <strong>Clear</strong> 的功效，所以為了讓footer排在應該有的位置，我們可以這樣添加CSS屬性</p>

<pre><code>#footer{
    clear:both;
}
</code></pre>

<p>結果</p>

<p><img src="https://lh6.googleusercontent.com/-j2gYazTo_HE/UL9zdAr8LVI/AAAAAAAACBg/EN-h4zoISdQ/s466/2012-12-05_230147.jpg" /></p>

<p>有發現了嗎？只要簡單的加上clear這個屬性，div就會乖乖地恢復他本來的特性，讓你水平或垂直排列可以隨心所欲</p>

<h2>Box Shadows</h2>

<p>box-shadow這個新的CSS3屬性之前有在<a href="http://blog.rx836.tw/blog/css3-real-beauty-box-shadows/" target="_blank">文章</a>介紹過，其實他就是利用CSS很方便的做出陰影效果，例如像這樣加上CSS</p>

<pre><code>#content{
    background:#ccc;
    width:250px;
    float:left;
    padding:5px;
    -webkit-box-shadow: inset 0px 0px 2px 2px #f00;
    box-shadow: inset 0px 0px 2px 2px #f00;
}
</code></pre>

<p>我們這邊利用box-shadow做出有內嵌效果的div，並且加上5px的內距，會發現整個網站會長成這樣</p>

<p><img src="https://lh5.googleusercontent.com/-dxl0B5r8Ksk/UL9zdMMiRLI/AAAAAAAACBc/lGKF0VdvFo8/s469/2012-12-05_231526.jpg" /></p>

<p>這也是寫CSS常會發生的事情，一個沒注意就破版了，原因是之前設container寬度為450px，content為250px，兩個sidebar分別為100px，這樣加起來是剛好的，但加上了padding的5px以後(有左右兩邊，所以實際是10px)，兩個sidebar必須調整為95，這樣才不會擠壓到</p>

<pre><code>#sidebar{
    float:left;
    background:#360;
    width:95px;
}
#sidebar2{
    float:left;
    background:#F0F;
    width:95px;
}
</code></pre>

<p><img src="https://lh5.googleusercontent.com/-S0FvavMd3Lo/UL9zdySksMI/AAAAAAAACBk/DnzWTwuLljo/s468/2012-12-05_232026.jpg" /></p>

<p>這樣就正常了，回到剛剛的box-shadow，可以看到為了跨瀏覽器的關係，我們在使用box-shadow會搭配每個瀏覽器的前綴</p>

<pre><code>-webkit-box-shadow: inset 0px 0px 2px 2px #f00;
</code></pre>

<p>另外box-shadow屬性寫法如下</p>

<pre><code>box-shadow: inset x-offset y-offset blur spread color
</code></pre>

<p>每個值所代表的意義為</p>

<p><strong>x-offset</strong>: 水平位移植，必須要指定</p>

<p><strong>y-offset</strong>: 垂直位移植，必須要指定</p>

<p><strong>blur</strong>: 模糊效果，不能為負值，預設為0</p>

<p><strong>spread</strong>: 擴散強度，可以為負值(縮小)，預設為0</p>

<p><strong>color</strong>: 顏色，有些網站可能會寫預設值為黑色，<strong>但一般建議還是要給予顏色，因為有些瀏覽器預設值並不一定為黑色(例如手機)</strong></p>

<p><strong>inset</strong>: 這個值有些人是放在<strong>最前面</strong>，有些是放在<strong>最後面</strong>，兩者皆可，如果有給予這個值box就會在陰影裡面，反之則在外面</p>

<p>而除了box-shadow以外，CSS3其實還有針對文字的text-shadow，範例如下</p>

<pre><code>h2{
    Font-family:"Palatino Linotype", "Book Antiqua", Palatino, serif;
    color:#fff;
    text-shadow: -2px 0px 3px #003366;
}
</code></pre>

<p>差別在於text-shadow沒有spread，而效果看起來就像這樣</p>

<p><img src="https://lh5.googleusercontent.com/-2vCt4XwlUoY/UL9zeNS-J5I/AAAAAAAACBo/TMv2Oo5TPAg/s469/2012-12-05_233015.jpg" /></p>

<p>明顯可以看出文字擁有立體的感覺</p>

<h2>CSS Gradients</h2>

<p>用CSS3來表達漸層，用法其實不難，難的是要做到跨瀏覽器不是一件很容易的事情，以下是範例語法</p>

<pre><code>#container{
    background: #a8e7ff; /* Old browsers */
    background: -moz-linear-gradient(top,  #a8e7ff 0%, #4096ee 100%); /* FF3.6+ */
    background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,#a8e7ff), color-stop(100%,#4096ee)); /* Chrome,Safari4+ */
    background: -webkit-linear-gradient(top,  #a8e7ff 0%,#4096ee 100%); /* Chrome10+,Safari5.1+ */
    background: -o-linear-gradient(top,  #a8e7ff 0%,#4096ee 100%); /* Opera 11.10+ */
    background: -ms-linear-gradient(top,  #a8e7ff 0%,#4096ee 100%); /* IE10+ */
    background: linear-gradient(to bottom,  #a8e7ff 0%,#4096ee 100%); /* W3C */
    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#a8e7ff', endColorstr='#4096ee',GradientType=0 ); /* IE6-9 */
}
</code></pre>

<p><img src="https://lh4.googleusercontent.com/-HaSJlf5Trxc/UL9zec5QzcI/AAAAAAAACBs/ewEGX4ImfBc/s605/2012-12-05_233546.jpg" /></p>

<p>可以看到頁面從淡藍變成深藍，而且是用CSS而不是圖片來達成，但為了配合到每個瀏覽器這裡使用了8行的CSS，每一行的CSS都長的不太一樣，這也是比較令人煩惱的地方，基本的語法如下</p>

<pre><code>(top,  #a8e7ff 0%,#4096ee 100%)
</code></pre>

<p>這意思就是指漸層的效果是從最上方開始變化到最下方，如果是50%，就是指從中間開始</p>

<h2>Dropdown Menus</h2>

<p>下拉選單是網站常見的元素，可以利用HTML加上CSS來呈現這樣的效果，關鍵點在於 <strong>hover</strong> 和 <strong>display:none</strong>，範例如下</p>

<p>HTML</p>

<pre><code>&lt;div class="menubar"&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href="#" &gt;Home&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="#" id="current"&gt;Products&lt;/a&gt;
        &lt;ul&gt; &lt;li&gt;&lt;a href="#"&gt;Sliders&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href="#"&gt;Galleries&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href="#"&gt;Apps&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href="#"&gt;Extensions&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href="http://blog.rx836.tw/about.html"&gt;About&lt;/a&gt; &lt;/li&gt;
    &lt;li&gt;&lt;a href="#"&gt;Company History&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="#"&gt;Address&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="#"&gt;Customer Service&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="#"&gt;Contact&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</code></pre>

<p>CSS</p>

<pre><code>.menubar{
    border:none;
    border:0px;
    margin:0px;
    padding:0px;
    font: 67.5% "Lucida Sans Unicode", "Bitstream Vera Sans", "Trebuchet Unicode MS", "Lucida Grande", Verdana, Helvetica, sans-serif;
    font-size:14px;
    font-weight:bold;
}
.menubar ul{
    background: rgb(109,109,109);
    height:50px;
    list-style:none;
    margin:0;
    padding:0;
}
.menubar li{
    float:left;
    padding:0px;
}
.menubar li a{
    background: rgb(109,109,109);
    color:#cccccc;
    display:block;
    font-weight:normal;
    line-height:50px;
    margin:0px;
    padding:0px 25px;
    text-align:center;
    text-decoration:none;
}
.menubar li a:hover, .menubar ul li:hover a{
    background: rgb(71,71,71);
    color:#FFFFFF;
    text-decoration:none;
}
.menubar li ul{
    background: rgb(109,109,109);
    display:none;
    height:auto;
    padding:0px;
    margin:0px;
    border:0px;
    position:absolute;
    width:200px;
    z-index:200;
    /*top:1em;
    /*left:0;*/
}
.menubar li:hover ul{
    display:block;
}
.menubar li li {
    background: rgb(109,109,109);
    display:block;
    float:none;
    margin:0px;
    padding:0px;
    width:200px;
}
.menubar li:hover li a{
    background:none;
}
.menubar li ul a{
    display:block;
    height:50px;
    font-size:12px;
    font-style:normal;
    margin:0px;
    padding:0px 10px 0px 15px;
    text-align:left;
}
.menubar li ul a:hover, .menubar li ul li:hover a{
    background: rgb(71,71,71);
    border:0px;
    color:#ffffff;
    text-decoration:none;
}
.menubar p{
    clear:left;
}
</code></pre>

<p>看起來的效果就像這樣</p>

<p><img src="https://lh4.googleusercontent.com/-bnIvT8x3nww/UL9ze-1MTWI/AAAAAAAACB8/c4k6lL2dy_k/s896/2012-12-05_235741.jpg" /></p>

<p>不用任何一行js就可以做出下拉的選單，而剛剛提到的關鍵點屬性display</p>

<pre><code>.menubar li:hover ul{
    display:block;
}
</code></pre>

<p>利用這個屬性就可以做到將滑鼠移過去的時候，子選單就會呈現出來</p>

<h2>Border Radius</h2>

<p><strong>圓角</strong>也是做網站設計很常用到的元素，利用CSS3的屬性border-radius也可以輕鬆做到，但有些人或許不知道圓角還可以針對四個角做不同的設置，範例如下</p>

<p>CSS</p>

<pre><code>#container{
    background: #a8e7ff; /* Old browsers */
    width:600px;
    -webkit-border-radius: 20px 5px 115px 35px;
    border-radius: 20px 5px 115px 35px;
}
</code></pre>

<p>我們一樣拿剛剛最前面那個範例來說明，效果如下</p>

<p><img src="https://lh3.googleusercontent.com/-xzuDA1ptHRo/UL9zfIUb32I/AAAAAAAACB4/cKv2qf7ahQM/s619/2012-12-06_001054.jpg" /></p>

<p>可以看到四個角給的值不同，圓角的效果也都不同，但特別注意的是，在使用圓角效果時，要注意會不會有破版的情形發生，就如同圖的左下角圓角，跟剛剛提到的padding意思一樣</p>

<p>以上是幾個對設計師來說好用的CSS屬性，希望對大家有幫助</p>

<h3>參考資料:</h3>

<p><a href="http://designfestival.com/5-css-properties-that-give-designers-fits/" target="_blank">5 CSS Properties That Give Designers Fits</a></p>

<p>內容如有錯誤，歡迎指正</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[jQuery] 自製擁有Responsive的Tooltip]]></title>
    <link href="http://blog.rx836.tw/blog/friendly-tooltip-responsive/"/>
    <updated>2012-11-27T11:53:00+08:00</updated>
    <id>http://blog.rx836.tw/blog/friendly-tooltip-responsive</id>
    <content type="html"><![CDATA[<p><img src="https://lh6.googleusercontent.com/-KiD_TaOPzFA/ULRxljbyVVI/AAAAAAAAB-M/nHY1WuJDaGE/s373/q1.jpg" /></p>

<p>之前做Tooltip，都是上網找plugin比較多，但這次看到一篇文章，是自己寫一個Tooltip，就來記錄一下，而且還有Responsive的效果，可以依照載具大小做縮放和位置的改變，code不多，也很簡單明瞭</p>

<!--more-->


<p>先稍微介紹一下什麼是Tooltip，就如上面的圖所示，他可以提供良好的 <strong>user experience</strong>，可以在某個功能或選單，又或是某段文字上，在滑鼠移過去時(有時候是在點擊情況下，但少數)，出現一個小框，裡面有少許的說明文字，讓用戶知道，這個功能或是按鈕是在幹嘛</p>

<p>首先，是CSS的部分</p>

<pre><code>#tooltip
{
    text-align: center;
    color: #fff;
    background: #111;
    position: absolute;
    z-index: 100;
    padding: 15px;
}

    #tooltip:after /* triangle decoration */
    {
        width: 0;
        height: 0;
        border-left: 10px solid transparent;
        border-right: 10px solid transparent;
        border-top: 10px solid #111;
        content: '';
        position: absolute;
        left: 50%;
        bottom: -10px;
        margin-left: -10px;
    }

        #tooltip.top:after
        {
            border-top-color: transparent;
            border-bottom: 10px solid #111;
            top: -20px;
            bottom: auto;
        }

        #tooltip.left:after
        {
            left: 10px;
            margin: 0;
        }

        #tooltip.right:after
        {
            right: 10px;
            left: auto;
            margin: 0;
        }
</code></pre>

<p>這段CSS是建立一個tooltip，包括在不同載具時，呈現tooltip在不同的適當位置(bottom、top、left、right)，不過這邊有個小技巧要特別拿出來說明一下</p>

<p>就是Tooltip上面那個小箭頭其實是用CSS畫出來的</p>

<p><img src="https://lh4.googleusercontent.com/-jhfjv_hv-hY/ULRzfM9ycJI/AAAAAAAAB-w/oOohCQO9N6w/s373/q6.jpg" /></p>

<p>不同的CSS畫法，可以參考下面範例，HTML部分就只要一個div</p>

<h3>用CSS畫出三角型</h3>

<p><img src="https://lh3.googleusercontent.com/-kNDtVnCgUzE/ULRxloJG7qI/AAAAAAAAB-U/Jkfm3E0DC6k/s112/q2.jpg" /></p>

<pre><code>div {
    width: 0;
    height: 0;
    border-left: 50px solid #fff;
    border-right: 50px solid #fff;
    border-bottom: 100px solid black;
}
</code></pre>

<p><img src="https://lh5.googleusercontent.com/-siEgv7d8AJM/ULRxmDlFMeI/AAAAAAAAB-Q/BFmufqFJ3VU/s115/q4.jpg" /></p>

<pre><code>div {
    width: 0;
    height: 0;
    border-top: 50px solid #fff;
    border-right: 100px solid black;
    border-bottom: 50px solid #fff;
}
</code></pre>

<p><img src="https://lh6.googleusercontent.com/-VWF99ZiXIo8/ULRxlgGjbuI/AAAAAAAAB-I/ASZmQTUURI4/s110/q3.jpg" /></p>

<pre><code>div {
    width: 0;
    height: 0;
    border-left: 50px solid #fff;
    border-right: 50px solid #fff;
    border-top: 100px solid black;
}
</code></pre>

<p><img src="https://lh4.googleusercontent.com/-bjaIIy9c9Ow/ULRxmXa20iI/AAAAAAAAB-Y/ZvF6cRBvc1I/s107/q5.jpg" /></p>

<pre><code>div {
    width: 0;
    height: 0;
    border-top: 50px solid #fff;
    border-right: 100px solid black;
    border-bottom: 50px solid #fff;
}
</code></pre>

<p>當然如果希望是別的底色可以自己再做修改，接下來是JS部分</p>

<pre><code>$( document ).ready( function()
{
    var targets = $( '[rel~=tooltip]' ),
        target  = false,
        tooltip = false,
        title   = false;

    targets.bind( 'mouseenter', function()
    {
        target  = $( this );
        tip     = target.attr( 'title' );
        tooltip = $( '&lt;div id="tooltip"&gt;&lt;/div&gt;' );

        if( !tip || tip == '' )
            return false;

        target.removeAttr( 'title' );
        tooltip.css( 'opacity', 0 )
               .html( tip )
               .appendTo( 'body' );

        var init_tooltip = function()
        {
            if( $( window ).width() &lt; tooltip.outerWidth() * 1.5 )
                tooltip.css( 'max-width', $( window ).width() / 2 );
            else
                tooltip.css( 'max-width', 340 );

            var pos_left = target.offset().left + ( target.outerWidth() / 2 ) - ( tooltip.outerWidth() / 2 ),
                pos_top  = target.offset().top - tooltip.outerHeight() - 20;

            if( pos_left &lt; 0 )
            {
                pos_left = target.offset().left + target.outerWidth() / 2 - 20;
                tooltip.addClass( 'left' );
            }
            else
                tooltip.removeClass( 'left' );

            if( pos_left + tooltip.outerWidth() &gt; $( window ).width() )
            {
                pos_left = target.offset().left - tooltip.outerWidth() + target.outerWidth() / 2 + 20;
                tooltip.addClass( 'right' );
            }
            else
                tooltip.removeClass( 'right' );

            if( pos_top &lt; 0 )
            {
                var pos_top  = target.offset().top + target.outerHeight();
                tooltip.addClass( 'top' );
            }
            else
                tooltip.removeClass( 'top' );

            tooltip.css( { left: pos_left, top: pos_top } )
                   .animate( { top: '+=10', opacity: 1 }, 50 );
        };

        init_tooltip();
        $( window ).resize( init_tooltip );

        var remove_tooltip = function()
        {
            tooltip.animate( { top: '-=10', opacity: 0 }, 50, function()
            {
                $( this ).remove();
            });

            target.attr( 'title', tip );
        };

        target.bind( 'mouseleave', remove_tooltip );
        tooltip.bind( 'click', remove_tooltip );
    });
});
</code></pre>

<p>JS部分，就是當「mouseenter」的事件發生時，加上id為tooltip的div，「mouseleave」時就把div也就是tooltip移除</p>

<p>「init_tooltip」主要是計算載具視窗的大小，來給予tooltip相對的位置和添加類別，其中說明一下 <strong>.outerWidth()</strong> 這個方法</p>

<br/>


<br/>


<h3>width()、innerWidth()、outerWidth()的三者差別</h3>

<p><strong>width()</strong>: 一般我們取得一個元素的寬都會用，取出來的值只有<span style="color:red">宽度</span></p>

<p><strong>innerWidth()</strong>: <span style="color:red">宽度</span>+<span style="color:red">內距(padding)</span></p>

<p><strong>outerWidth()</strong>: <span style="color:red">宽度</span>+<span style="color:red">內距(padding)</span>+<span style="color:red">邊框(boder)</span></p>

<p><strong>outerWidth(true)</strong>: 如果給true的話(預設是false)，<span style="color:red">宽度</span>+<span style="color:red">內距(padding)</span>+<span style="color:red">邊框(boder)</span>+<span style="color:red">邊界(margin)</span></p>

<br/>


<br/>


<p>這樣，搭配幾個小技巧，一個簡單又好用的Tooltip就可以自己製作，而不用再去找相關的plugin</p>

<p>參考資料:</p>

<p><a href="http://osvaldas.info/elegant-css-and-jquery-tooltip-responsive-mobile-friendly" target="_blank">Responsive and Mobile-Friendly Tooltip</a></p>

<p><a href="http://osvaldas.info/examples/elegant-css-and-jquery-tooltip-responsive-mobile-friendly/" target="_blank">Demo</a></p>

<p><a href="http://wyz.67ge.com/css-triangle/" target="_blank">使用纯CSS实现的各种三角，全浏览器兼容</a></p>

<p><a href="http://www.dearoom.com/blog/jquery%E4%B8%AD-heightwidth-innerheightinnerwidth-outerheightouterwidth%E7%9A%84%E5%8C%BA%E5%88%AB/" target="_blank">jQuery中 height(width) innerHeight(innerWidth) outerHeight(outerWidth)的区别</a></p>

<p>內容如有錯誤，歡迎指正</p>
]]></content>
  </entry>
  
</feed>
