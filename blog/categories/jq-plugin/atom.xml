<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: jQ-Plugin | apa]]></title>
  <link href="http://blog.rx836.tw/blog/categories/jq-plugin/atom.xml" rel="self"/>
  <link href="http://blog.rx836.tw/"/>
  <updated>2013-01-29T14:32:27+08:00</updated>
  <id>http://blog.rx836.tw/</id>
  <author>
    <name><![CDATA[阿帕]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[[jQ-Plugin] 在網站中加入星星評分效果]]></title>
    <link href="http://blog.rx836.tw/blog/jquery-star-box/"/>
    <updated>2013-01-29T11:46:00+08:00</updated>
    <id>http://blog.rx836.tw/blog/jquery-star-box</id>
    <content type="html"><![CDATA[<p><img src="https://lh4.googleusercontent.com/-p5vCtEt386M/UQdsNizReKI/AAAAAAAACQs/tylpU5zwd60/s188/2013-01-29_114734.jpg" /></p>

<p>評分功能常出現在一些商品陳列網站，像這種透過選幾顆星星來做評價，在許多網站都看的到，例如像是 <a href="http://tw.movie.yahoo.com/" target="_blank">YAHOO! 奇摩電影</a> 就有類似的功能，而這篇就是來介紹如何用 jQuery plugin- jStarbox 來實現這項應用</p>

<!--more-->


<h2>Start</h2>

<p>jStarbox檔案不到6k，算是相檔的輕巧，css樣式也不多，不會有那種讓人不知道如何修改起的煩惱，source code 可以直接去 github 下載回來</p>

<p><a href="https://github.com/sabberworm/jStarbox#getvalue" target="_blank">DOWNLOAD SOURCE</a></p>

<p>裡面有兩個資料夾分別是 images 和 css，還有一個 jstarbox.js 檔案，直接載入 css 和 js 檔到專案裡面，當然 jQuery 也不要忘了</p>

<pre><code>&lt;link href="css/jstarbox.css" rel="stylesheet"&gt;&lt;/link&gt;
&lt;script type="text/javascript" src="http://code.jquery.com/jquery-1.8.2.js"&gt;&lt;/script&gt;
&lt;script src="jstarbox.js"&gt;&lt;/script&gt;
</code></pre>

<p>接下來是 html 部份</p>

<pre><code>&lt;div class="starbox"&gt;
&lt;/div&gt;
</code></pre>

<p>沒看錯，只要放個空元素在 html 上即可，並且給他一個 class 名稱方便等下操作，最後是 js 部份</p>

<pre><code>$('.starbox').starbox({
    average: 0.5,
    changeable: 'once',
    autoUpdateAverage: true,                
    ghosting: true
});
</code></pre>

<p>這樣就大功告成囉</p>

<h3>參數設定</h3>

<p>以下是一些參數的講解，但有些不太懂他的意思就不誤導大家，再請有興趣的各位去 github 上面看</p>

<p>average:可以預設一開始顯示幾顆星星，也可以使用小數點，例如0.4，預設值則是0.5</p>

<p>stars:設定有幾顆星星可以選擇，預設值是5</p>

<p>buttons:設定星星可以切割成多少區塊可以選擇，假設有5顆星星，buttons設10，每顆星星就可以選擇半顆或整顆</p>

<p>changeable:設定選擇以後是否還可以改變</p>

<p>也有一些方法可以呼叫，例如如果要得知 User 選了幾顆星星，就可以這樣寫</p>

<pre><code>$('.btn').click(function(){
    alert($('.starbox').starbox("getValue"));
});
</code></pre>

<p>可以把事件寫在某個按鈕裡面，當按下按鈕就秀出值是多少，關鍵在這句 $('.starbox').starbox("getValue")</p>

<h2>小小總結</h2>

<p>如果用 firebug 看套用效果後的 html 結構，不難發現只是在空元素裡面增加幾個&lt;div&gt;，並且設定背景圖做為星星，所以要修改的話只要改範例裡面的圖，和 css 裡面的樣式</p>

<pre><code>.starbox .stars .star_holder .star {
    background-image: url('../images/5-large.png');
    width: 33px;
    height: 33px;
}
</code></pre>

<p>記得如果星星的大小有改變，width和 height 也要跟著調整</p>

<h2>參考資料:</h2>

<p><a href="https://github.com/sabberworm/jStarbox#getvalue" target="_blank">jStarbox</a></p>

<p><a href="http://sabberworm.github.com/jStarbox/" target="_blank">Examples</a></p>

<p>內容如有錯誤，歡迎指正</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[jQ-Plugin] 用jQuery打造alert、confirm和prompt dialogs]]></title>
    <link href="http://blog.rx836.tw/blog/alert-confirm-prompt/"/>
    <updated>2013-01-24T11:21:00+08:00</updated>
    <id>http://blog.rx836.tw/blog/alert-confirm-prompt</id>
    <content type="html"><![CDATA[<p><img src="https://lh3.googleusercontent.com/-Zmc0Ts3xud4/UQDnKqQMtiI/AAAAAAAACPg/x2E0ljNmpOM/s387/2013-01-24_115500.jpg" /></p>

<p>知名的網路趨勢觀察 Inside 有一篇文章 <a href="http://www.inside.com.tw/2013/01/23/app-dialog-button-design-should-yes-be-right-or-left" target="_blank">App 的 「確定」按鈕應該放在左邊還是右邊？</a>，裡面寫到關於使用者設計，iOS與 Android 的不同，我對這方面不是研究者，所以就不針對文章內容做討論，但同樣的事情回到 Web 部分，如果能將我們常看到的 alert 視窗做客製化，引導 User 做點擊，或許可以減少使用者誤按的情形發生</p>

<!--more-->


<h2>原生的彈跳視窗</h2>

<p>一般我們常見的內建 confirm 和 alert，因為是原生的視窗元素，有時候難免會跟網站整體的視覺設計很不搭嘎，按鈕文字也無法修改，跟使用者間的互動就不是那麼的直覺，例如下面的範例圖</p>

<p><img src="https://lh6.googleusercontent.com/-iYqFTOzua-4/UQDnKscNRXI/AAAAAAAACPc/lRsW6cDln3Q/s389/2013-01-24_121937.jpg" /></p>

<p>在填寫完表單以後，跳出了一個提醒視窗告知『獎品將在三天後寄出』，但當你按下『確定』時，心中難免會覺得<strong>要確定的是甚麼</strong>？但如果像下面這張圖一樣，做客製化文字</p>

<p><img src="https://lh6.googleusercontent.com/-ygbraRujwkg/UQDnKjkwBnI/AAAAAAAACPk/mggASJ-uJxM/s582/2013-01-24_122158.jpg" /></p>

<p>User在使用時就不會有那些疑惑存在，整個視窗還可以搭配網站做設計，至於要怎麼客製化呢？下面是我的使用筆記</p>

<h2>Start</h2>

<p>這裡我使用的是 Alertify 這款jQuery plugin ，可以到 github 下載source code</p>

<p><a href="https://github.com/fabien-d/alertify.js/" target="_blank">DOWNLOAD SOURCE</a></p>

<p>接著在 lib 資料夾裡面有兩個檔案，分別是 alertify.js 和 alertify.min.js，因為我們要做範例，所以使用方便 Debug 的 alertify.js</p>

<pre><code>&lt;script type="text/javascript" src="http://code.jquery.com/jquery-1.8.2.js"&gt;&lt;/script&gt;
&lt;script type="text/javascript" src="lib/alertify.js"&gt;&lt;/script&gt;
</code></pre>

<p>接著是css部份</p>

<pre><code>&lt;link rel="stylesheet" href="themes/alertify.core.css" /&gt;   
&lt;link rel="stylesheet" href="themes/alertify.default.css" /&gt;
</code></pre>

<p>如果要符合自己網站的設計，就修改 alertify.default.css 這支檔案即可</p>

<p>最後是js部份</p>

<pre><code>alertify.alert("獎品將在三天後寄出");
</code></pre>

<p>結果圖</p>

<p><img src="https://lh6.googleusercontent.com/-NhnuNSV7ipE/UQDnLpYsIlI/AAAAAAAACPo/ZmiAC0GeGAA/s582/2013-01-24_153113.jpg" /></p>

<p>如果要修改文字的話，在前面加上 alertify.set() 的設定</p>

<pre><code>alertify.set({ labels : { ok: "了解", cancel: "取消" } });
alertify.alert("獎品將在三天後寄出");
</code></pre>

<p>要做 confirm 視窗的話</p>

<pre><code>alertify.confirm("確定儲存嗎?", function (e) {
    if (e) {
        // user clicked "ok"
    } else {
        // user clicked "cancel"
    }
});
</code></pre>

<p>結果圖</p>

<p><img src="https://lh3.googleusercontent.com/-pQSeUPBhHZs/UQDnLnRK3yI/AAAAAAAACPs/mR20IrnuxJ4/s589/2013-01-24_153412.jpg" /></p>

<p>比較特別是還可以設置notifications</p>

<pre><code>alertify.success("Success notification");
</code></pre>

<p>在瀏覽器視窗的右下角就會出現notifications，並且會在幾秒後自動消失</p>

<p><img src="https://lh3.googleusercontent.com/-x42wvO7nDIg/UQDnL_RqoFI/AAAAAAAACPw/N26mQw_xs5w/s607/2013-01-24_153713.jpg" /></p>

<h2>結論</h2>

<p>這支 plugin 在使用上相當容易，而且還會在按鈕上加上光暈，引導使用者按下按鈕，樣式不喜歡的話，直接修改css檔案即可，有興趣的朋友可以下載回來試試</p>

<h2>參考資料:</h2>

<p><a href="http://fabien-d.github.com/alertify.js/" target="_blank">alertify.js</a></p>

<p>內容如有錯誤，歡迎指正</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[jQ-Plugin] 用jQuery客製化下拉選單]]></title>
    <link href="http://blog.rx836.tw/blog/jquery-drop-down-lists/"/>
    <updated>2013-01-23T17:16:00+08:00</updated>
    <id>http://blog.rx836.tw/blog/jquery-drop-down-lists</id>
    <content type="html"><![CDATA[<p>下拉式選單(DropDownList)在表單填寫裡面，是很常用到的網頁元素，但原生的下拉式選單看久了，難免會覺得太過單調，有時為了配合整體網站的設計，會有客製化的需求，而這篇文章主要是介紹如何用 jQuery plugin 客製化下拉選單</p>

<!--more-->


<p>另外對客製化 CheckBox 有興趣的朋友，也可以參考 <a href="http://blog.rx836.tw/blog/css3-checkboxes-radiobuttons/" target="_blank">[CSS] 拋棄原生checkbox用CSS3自己簡單動手做</a> 這篇文章</p>

<h2>Start</h2>

<p>這裡我主要用的是 jquery.dropdown.js 這支plugin，首先要先下載js和css回來</p>

<p><a href="http://tympanus.net/Development/SimpleDropDownEffects/SimpleDropDownEffects.zip?84cd58" target="_blank">DOWNLOAD SOURCE</a></p>

<p>在js的資料夾裡面有兩個檔案，分別是</p>

<p>jquery.dropdown.js</p>

<p>modernizr.custom.63321.js</p>

<p>連同 jQuery 載入到網頁裡面</p>

<pre><code>&lt;script src="js/modernizr.custom.63321.js"&gt;&lt;/script&gt;
&lt;script type="text/javascript" src="http://code.jquery.com/jquery-1.8.2.js"&gt;&lt;/script&gt;
&lt;script type="text/javascript" src="js/jquery.dropdown.js"&gt;&lt;/script&gt;
</code></pre>

<p>會用到 modernizr 是因為在 jquery.dropdown.js 這支檔案裡面有用到判斷是否支援transition，稍後會提到</p>

<p>接著是html部份</p>

<pre><code>&lt;select id="cd-dropdown" class="cd-select"&gt;
    &lt;option value="-1" selected&gt;請選擇一種動物&lt;/option&gt;
    &lt;option value="1" class="icon-monkey"&gt;猴子&lt;/option&gt;
    &lt;option value="2" class="icon-bear"&gt;熊&lt;/option&gt;
    &lt;option value="3" class="icon-squirrel"&gt;松鼠&lt;/option&gt;
    &lt;option value="4" class="icon-elephant"&gt;大象&lt;/option&gt;
&lt;/select&gt;
</code></pre>

<p>js部份，一行程式碼很簡單明瞭</p>

<pre><code>$( function() {

    $( '#cd-dropdown' ).dropdown();

});
</code></pre>

<p>css部份</p>

<p>利用 plugin 做客製化下拉選單，關鍵就在於將原生的&lt;select&gt;用jQuery替換掉，仔細看替換掉後的html結構，會發現其實長的像這樣</p>

<pre><code>&lt;div class="cd-dropdown"&gt;
    &lt;span&gt;請選擇一種動物&lt;/span&gt;
    &lt;input type="hidden" name="cd-dropdown"&gt;
    &lt;ul&gt;
        &lt;li data-value="1"&gt;&lt;span class="icon-monkey"&gt;猴子&lt;/span&gt;&lt;/li&gt;
        &lt;li data-value="2"&gt;&lt;span class="icon-bear"&gt;熊&lt;/span&gt;&lt;/li&gt;
        &lt;li data-value="3"&gt;&lt;span class="icon-squirrel"&gt;松鼠&lt;/span&gt;&lt;/li&gt;
        &lt;li data-value="4"&gt;&lt;span class="icon-elephant"&gt;大象&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
&lt;/div&gt;
</code></pre>

<p>利用新的html結構就可以藉由CSS來自行裝飾，就像下面結果圖一樣，這邊我是直接用範例所附的css檔</p>

<p><img src="https://lh5.googleusercontent.com/-evzDeROGJXM/UP_5cKXoSNI/AAAAAAAACOc/GgnPHX_BsjQ/s328/2013-01-23_220729.jpg" /></p>

<p><img src="https://lh5.googleusercontent.com/-jM7YmJVygBs/UP_5cFenQ8I/AAAAAAAACOY/PzAILoleuwo/s345/2013-01-23_220659.jpg" /></p>

<h3>modernizr</h3>

<p>前面有提到使用 modernizr 的關係是因為有些瀏覽器不支援transition，但自己要寫那些判斷程式又稍嫌麻煩，而 modernizr 正是解決這方面需求的js函式庫，藉由函式庫我們可以透過 class 的名稱來做判斷，例如 firefox 有支援 transition 的話，在html上會看到 class 名稱為 csstransitions</p>

<p><img src="https://lh4.googleusercontent.com/-7d8Z_8f3zqI/UP_5cDplfCI/AAAAAAAACOU/FuEhK0BRsd4/s452/2013-01-23_221311.jpg" /></p>

<p>IE9沒支援 class 名稱就是 no-csstransitions</p>

<p><img src="https://lh3.googleusercontent.com/-G-9zngyNiH4/UP_5dLraQhI/AAAAAAAACOk/foYV278aKs0/s401/2013-01-23_221500.jpg" /></p>

<p>所以剛提到主程式裡面，判斷的程式碼就像這樣</p>

<pre><code>if( Modernizr.csstransitions ) {
    setTimeout( function() { self.opts.css( 'transition', 'all ' + self.options.speed + 'ms ' + self.options.easing ); }, 25 );
}
</code></pre>

<h3>更不一樣的下拉選單</h3>

<p>這款 plugin 還有提供一些參數做變化，例如給予的參數值像下面這樣</p>

<pre><code>$( '#cd-dropdown' ).dropdown( {
    gutter : 5,
    delay : 40,
    rotated : 'left'
} );
</code></pre>

<p>其中　rotated　就是旋轉的方向，再搭配css就可以做出更有特色的下拉選單</p>

<p><img src="https://lh6.googleusercontent.com/-McvNbs1qkQs/UP_5daenx8I/AAAAAAAACOo/pfBHIHJWFyQ/s471/2013-01-23_223858.jpg" /></p>

<h2>總結</h2>

<p>在使用上會發現一個問題就是，每當網頁載入時，<strong>因為要透過js來做替換html結構</strong>，所以會先看到原生的下拉選單元素，然後瞬間才會換成客製化元素，難免會覺得不夠細膩，但假如了解他運作的方式，直接自己製作html而不用經過 jQuery plugin 更換，會是更好的方法</p>

<h2>參考資料:</h2>

<p><a href="http://tympanus.net/codrops/2012/11/29/simple-effects-for-drop-down-lists/" target="_blank">SIMPLE EFFECTS FOR DROP-DOWN LISTS</a></p>

<p><a href="http://modernizr.com/" target="_blank">modernizr</a></p>

<p>內容如有錯誤，歡迎指正</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[jQ-Plugin] 輕鬆幫表格做responsive]]></title>
    <link href="http://blog.rx836.tw/blog/responsive-tables/"/>
    <updated>2013-01-21T12:28:00+08:00</updated>
    <id>http://blog.rx836.tw/blog/responsive-tables</id>
    <content type="html"><![CDATA[<p>因為移動設備的成長，RWD(Responsive web design)這個應用已經在許多網頁上都看的到，除了做一個專屬於 mobile 的網站設計以外，也可以讓一個網站來符合許多螢幕解析度大小，而這兩個方法的優與劣，如何選擇，就看專案當下的情況來做決定</p>

<!--more-->


<p>例如以文字為主的部落格或是簡單的頁面就很適合做RWD，但介面太複雜或是功能太多，建議還是另外開發專屬的獨立網站，有興趣的人可以參考這篇的 <a href="http://cssindesign.tumblr.com/post/40513264330/responsive-web" target="_blank">實作心得</a>，這邊就不討論太多</p>

<p>今天這篇主要介紹一個jQuery plugin，叫FooTable，利用簡單的幾行程式，就可以將網頁裡面的 table 擁有 RWD 的效果</p>

<h2>Start</h2>

<p>首先要先下載 js 和 css，可以到 github 下載</p>

<p><a href="https://github.com/bradvin/FooTable" target="_blank">DOWNLOAD</a></p>

<p>載回來後會發現裡面有一些 js 和 css檔，還有幾個 demo 範例，但有一些檔案是看情形選擇載入，其中最主要的只有兩個檔案，分別是</p>

<p>footable-0.1.js 和 footable-0.1.css</p>

<p>在網頁裡面載入這兩支檔案和jQuery以後，接下來就來做簡單的範例</p>

<h3>phone和tablet</h3>

<p>FooTable最主要會判斷三種情形，除了一般的 Desktop 以外，還分成 phone 和 tablet，開發人員可以在每個欄位中，選擇要在什麼情況底下做縮排，以下是基本的HTML</p>

<p>HTML部份</p>

<pre><code>&lt;table class="footable"&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th data-class="expand"&gt;
        姓名
      &lt;/th&gt;
      &lt;th&gt;
        職業
      &lt;/th&gt;
      &lt;th data-hide="phone"&gt;
        年齡
      &lt;/th&gt;
      &lt;th data-hide="phone,tablet"&gt;
        性別
      &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;&lt;td&gt;小馬&lt;/td&gt;&lt;td&gt;司機&lt;/td&gt;&lt;td&gt;59&lt;/td&gt;&lt;td&gt;男&lt;/td&gt;&lt;/tr&gt;          
    &lt;tr&gt;&lt;td&gt;小陳&lt;/td&gt;&lt;td&gt;保全&lt;/td&gt;&lt;td&gt;42&lt;/td&gt;&lt;td&gt;男&lt;/td&gt;&lt;/tr&gt;          
    &lt;tr&gt;&lt;td&gt;小英&lt;/td&gt;&lt;td&gt;行政&lt;/td&gt;&lt;td&gt;27&lt;/td&gt;&lt;td&gt;女&lt;/td&gt;&lt;/tr&gt;          
  &lt;/tbody&gt;
&lt;/table&gt;
</code></pre>

<p>js部份</p>

<pre><code>$(function() {
  $('table').footable();
});
</code></pre>

<p>可以看到在&lt;thead&gt;底下會有 data-class 和 data-hide 兩個 HTML5 的自訂屬性，如果 data-class="expand" 設在『姓名』那個欄位，<strong>代表的意思是會在此欄位建立 icon 圖案 『+』 和 『-』</strong>，而 data-hide 指的是<strong>該欄位在什麼情況下會隱藏縮排</strong>，例如在上面範例中的年齡設為 data-hide="phone"，表示在 phone 的寬度下會觸發此事件</p>

<p>那或許會有人疑問，phone和 tablet 的寬度判斷依據是什麼呢？這邊可以直接打開 footable-0.1.js 這支檔案，搜尋底下這行原始碼</p>

<pre><code>options: {
  delay: 100, // The number of millseconds to wait before triggering the react event
  breakpoints: { // The different screen resolution breakpoints
    phone: 480,
    tablet: 1024
  },
...
...
}
</code></pre>

<p>會發現原來 FooTable 預設屬性 phone 的寬度為480px，而 tablet 是1024，所以假設現在 Table 寬度只有 780，那擁有tablet 這個值的欄位就會做隱藏縮排，這些值都可以依照個人需求做修改，說了那麼多怕大家看不懂，那就直接來看結果圖吧</p>

<p>table寬度大於1024px</p>

<p><img src="https://lh6.googleusercontent.com/-SenmhgVS_s4/UPz2ku3YqeI/AAAAAAAACNc/vpvMWrwVeFk/s1077/2013-01-21_152914.jpg" /></p>

<p>table寬度小於1024px，大於480px，<strong>性別被縮排，姓名多了展開的圖案『+』</strong></p>

<p><img src="https://lh6.googleusercontent.com/-AZyIxH4mZgY/UPz2kr5W8CI/AAAAAAAACNU/wDNk3hkqDNc/s823/2013-01-21_153046.jpg" /></p>

<p>table寬度小於480px，性別和年齡都被縮排</p>

<p><img src="https://lh4.googleusercontent.com/-taApAI4ZcRk/UPz2ks5zlpI/AAAAAAAACNY/JM2RGkX-BPU/s219/2013-01-21_153224.jpg" /></p>

<p>點擊每一列即可展開看被隱藏的資訊</p>

<p><img src="https://lh3.googleusercontent.com/-PNOSlcS6mhU/UPz2lfqAOvI/AAAAAAAACNg/jhzxH6Y5l_M/s227/2013-01-21_153321.jpg" /></p>

<p>是不是很方便呢？</p>

<h3>搜尋與排序</h3>

<p>除了一般的 table 以外，常用到的『搜尋』和『排序』當然也不可少，FooTable貼心的地方在於已經幫你處理好這方面的需求，只要載入相關的 js 和加上自訂的 data- 屬性就可以完成所要的功能</p>

<p><a href="http://themergency.com/footable-demo/demo-sorting.htm" target="_blank">Sorting demo</a></p>

<p><a href="http://themergency.com/footable-demo/demo-filtering.htm" target="_blank">Filtering demo</a></p>

<p>但比較可惜的地方在於沒有實做分頁這塊，所以如果有這方面需求的朋友，可能要自己另外加上</p>

<h2>總結</h2>

<p>個人覺得這款jQuery plugin做的相當簡單，使用上也十分容易，主要就是在欄位方面加上 data- 屬性，可擴展性也高，可以依照『搜尋』和『排序』的邏輯模式新增自己的功能，在縮排與顯示方面的UI設計也讓人感到實用方便，有興趣的朋友可以參考看看</p>

<h3>參考資料:</h3>

<p><a href="http://themergency.com/footable/" target="_blank">FooTable</a></p>

<p>內容如有錯誤，歡迎指正</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[jQ-Plugin] 做出磁磚效果變化的圖片轉換]]></title>
    <link href="http://blog.rx836.tw/blog/jquery-slice-images-into-tiles/"/>
    <updated>2013-01-18T16:36:00+08:00</updated>
    <id>http://blog.rx836.tw/blog/jquery-slice-images-into-tiles</id>
    <content type="html"><![CDATA[<p><img src="https://lh4.googleusercontent.com/-WH3Ni1ou3Ww/UPkk71vSTvI/AAAAAAAACMk/hcFofq9eTuU/s641/2013-01-18_164425.jpg" /></p>

<p>不知道大家有沒有看過這種切成一塊一塊的轉換圖片，類似磁磚拼貼的效果，最近看到一篇講解教學的文章，自己消化了一下，來分享並且紀錄下來</p>

<!--more-->


<h2>Start</h2>

<p>首先是HTML部份</p>

<pre><code>&lt;div class="sliced"&gt;
    &lt;img src="pic.jpg"/&gt;
&lt;/div&gt;
</code></pre>

<p>只用一個&lt;div&gt;包住一個&lt;img&gt;</p>

<p>接著是CSS</p>

<pre><code>.sliced {
    position: relative;
    width: 640px; 
    height: 400px;
}
</code></pre>

<p>因為我們要將效果自製成一個jQuery plugin，方便以後可以重複使用，所以這邊要先建立一個基本的 jQuery plugin 樣板</p>

<pre><code>;(function( $, window ) {

    //預設值
    var _defaults = {
        x      : 2, // 預設對圖片x軸要切幾塊
        y      : 2, // 預設對圖片y軸要切幾塊
        random : true, // 磚塊是否要按照順序切換
        speed  : 2000 // 效果的速度
    };              

    $.fn.sliced = function( options ) {

        var o = $.extend( {}, _defaults, options );

        return this.each(function() {
            var $container = $(this); // cache selector for best performance
            // 主要程式碼從這裡開始寫            

        });
    };

}( jQuery, window ));
</code></pre>

<p>當然如果想要寫其他 Plugin 的人，也可以使用這個樣板去做修改</p>

<h3>原理</h3>

<p>做好基本的準備工作以後，我們要來開始撰寫主程式部分，但在撰寫之前，先來說明一下這個效果是如何產生，其實原理很簡單，在效果執行時，會先將原圖的屬性設為 <strong>display: none</strong>，接著加上&lt;div&gt;並且設定背景圖片，類似拼圖一樣一塊一塊拼出原圖，如果覺得我描述的不清楚的話，下面有範例可以參考XD</p>

<p><a href="http://jsfiddle.net/rx836/sbBeA/" target="_blank">範例</a></p>

<p>這邊的重點在於 <strong>background-position</strong> 這個屬性，利用這個屬性做背景圖片的位移，每一個&lt;div&gt;代表著圖片的一個區塊，也許有些人看到這邊已經知道端倪，因為只要把圖片轉換成一個一個的&lt;div&gt;，透過操作每個&lt;div&gt;，就可以做出特效</p>

<p>接著我們把程式碼寫完，先建立一些變數</p>

<pre><code>var width = $container.width(),
    height = $container.height(),
    $img = $container.find('img'),
    n_tiles = o.x * o.y,
    tiles = [], $tiles;
</code></pre>

<p>接著是建立一塊一塊的磁磚，並且把原圖隱藏，最後加上剛建立好的磁磚，至於要建立多少個就看當初給予的值</p>

<pre><code>for ( var i = 0; i &lt; n_tiles; i++ ) {
    tiles.push('&lt;div class="tile"/&gt;');
}

$tiles = $( tiles.join('') );

//將原圖隱藏並加上磁磚
$img.hide().after( $tiles );
</code></pre>

<p>接著利用原始圖檔當作每個磁磚的背景圖，在將背景圖做適當的位移，至於要位移多少，就看每個&lt;div&gt;(也就是每個磁磚)所代表的區塊</p>

<pre><code>//利用原始圖檔當作磁磚背景圖
$tiles.css({
    width: width / o.x,
    height: height / o.y,
    backgroundImage: 'url('+ $img.attr('src') +')'
});    

//替背景圖調整位置
$tiles.each(function() {
    var pos = $(this).position();
    console.log(pos);
    $(this).css( 'backgroundPosition', -pos.left +'px '+ -pos.top +'px' );
});
</code></pre>

<p>因為要拼成一塊圖片的關係，所以也要利用 float這個屬性，直接在CSS加上即可</p>

<pre><code>.tile { float: left; }
</code></pre>

<p>到這邊為止，你可以加上下面這段程式碼，看看效果如何</p>

<pre><code>$('.sliced').sliced({ x:4, y:4 }); // 將圖片切成4x4
</code></pre>

<p>看圖片好像沒什麼改變，但打開firebug看看HTML部份，有發現到不一樣了嗎？</p>

<p><img src="https://lh5.googleusercontent.com/-t0N7b55zbPE/UPkk8Kc6OaI/AAAAAAAACMo/1L6StJdwJ3s/s1026/2013-01-18_180320.jpg" /></p>

<p>就如剛剛所敘述的，<strong>原始圖片已經隱藏，並且用&lt;div&gt;拼湊而出</strong></p>

<h3>製作效果</h3>

<p>知道了原理以後，接著讓我們繼續把程式碼繼續寫完，接下來是隨機變換的部份</p>

<pre><code>function range( min, max, rand ) {
  var arr = ( new Array( ++max - min ) )
    .join('.').split('.')
    .map(function( v,i ){ return min + i });
  return rand
    ? arr.map(function( v ) { return [ Math.random(), v ] })
       .sort().map(function( v ) { return v[ 1 ] })
    : arr;
}
</code></pre>

<p>這部份的 code 可以參考 <a href="http://stackoverflow.com/questions/12528886/random-but-just-in-chrome" target="_blank">stackoverflow</a>，簡單來說就是一個產生<strong>特定範圍的隨機排列的數字</strong>，但因為是函式的關係我們要把他跟一開始<strong>建立預設值 var _defaults 放在一起</strong>，剩下的 code 就是處理切換效果的部份</p>

<pre><code>var tilesArr = range( 0, n_tiles, o.random ),
tileSpeed = o.speed / n_tiles;              

$container.on( 'animate', function() {

    tilesArr.forEach(function( tile, i ) {                  
        setTimeout(function(){
            $tiles.eq( tile ).toggleClass( 'tile-animated' );
        }, i * tileSpeed );
    });

});
</code></pre>

<p>我們將每個磁磚加上animate，在特定時間內做 opacity 屬性的變化，最後加上一個按鈕做觸發，和套用plugin，看看效果如何</p>

<p>html</p>

<pre><code>&lt;button&gt;Toggle&lt;/button&gt;
</code></pre>

<p>js</p>

<pre><code>$('button').click(function() {
    $('.sliced').trigger('animate');
});
</code></pre>

<p><a href="http://jsfiddle.net/rx836/jQaJh/2/" target="_blank">完整的範例</a></p>

<h2>結論</h2>

<p>只要知道是拼圖的概念，就可以知道其實不是針對原圖去做變化，巧妙的利用&lt;div&gt;也可以做出類似flash的效果</p>

<h3>參考資料:</h3>

<p><a href="http://www.onextrapixel.com/2012/11/23/how-to-slice-images-into-tiles-with-jquery-and-css3-transitions/" target="_blank">How to Slice Images into Tiles with jQuery and CSS3 Transitions</a></p>

<p>內容如有錯誤，歡迎指正</p>
]]></content>
  </entry>
  
</feed>
