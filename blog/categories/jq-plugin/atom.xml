<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: jQ-Plugin | apa]]></title>
  <link href="http://blog.rx836.tw/blog/categories/jq-plugin/atom.xml" rel="self"/>
  <link href="http://blog.rx836.tw/"/>
  <updated>2013-01-04T15:09:10+08:00</updated>
  <id>http://blog.rx836.tw/</id>
  <author>
    <name><![CDATA[阿帕]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[[jQ-Plugin] 輕鬆加入Tag標籤功能的plugin-Tags Manager]]></title>
    <link href="http://blog.rx836.tw/blog/jquery-tags-manager/"/>
    <updated>2012-12-20T11:11:00+08:00</updated>
    <id>http://blog.rx836.tw/blog/jquery-tags-manager</id>
    <content type="html"><![CDATA[<p><img src="https://lh5.googleusercontent.com/-gxsgoBxzDI8/UNKSYvcQnPI/AAAAAAAACFc/7PiDy2u-3KA/s745/2012-12-20_111514.jpg" /></p>

<p>如果有在 <a href="http://stackoverflow.com/" target="_blank">stackoverflow</a> 上找過答案的朋友，應該對於他們的tag並不陌生，類似這樣的功能在許多blog或是論壇都有，但光是只有Tag這個功能已經不是重點所在，如何讓User有良好的Tag經驗是現今大家所追求的，簡單的說就是使用者經驗(UX)，今天就來介紹一款我個人覺得不錯的jQuery plugin - Tags Manager</p>

<!--more-->


<h2>Start</h2>

<p><a href="https://github.com/max-favilli/tagmanager" target="_blank">Download from Github</a></p>

<p>使用方式相當相當的簡單，從github載下來後，將Tags Manager和所需要的css檔案掛載到網頁裡面，接下來只有兩個步驟</p>

<p>第一步驟就是在html裡面加上一個&lt;input&gt;</p>

<pre><code>&lt;input type="text" name="tags" placeholder="Tags" class="tagManager"/&gt;
</code></pre>

<p>第二個步驟就是在js加上一段程式碼</p>

<pre><code>jQuery(".tagManager").tagsManager();
</code></pre>

<p>完成，本篇介紹到此結束</p>

<p>.</p>

<p>.</p>

<p>.</p>

<p>.</p>

<p>好啦，真的就只有這兩行，打開網頁後你可以看到會有一個input，裡面有個預設文字Tags</p>

<p><img src="https://lh5.googleusercontent.com/-OR2B3B8UzXs/UNKSYj723cI/AAAAAAAACFg/Pz1flQNbeKg/s149/2012-12-20_113137.jpg" /></p>

<p>接著你在裡面輸入文字，只要<strong>你的焦點離開input</strong>、<strong>按下Enter</strong>或是<strong>加上逗號</strong>，都會自動幫你生成一個Tag</p>

<p><img src="https://lh5.googleusercontent.com/-Rq7wFJw2IH4/UNKSYmV6tWI/AAAAAAAACFk/k9e3c11qyZg/s202/2012-12-20_113346.jpg" /></p>

<p>而假如要刪除呢？只要對著Tag裡面的小x按下即可，這對於使用者來說非常的方便使用，那對於開發者來說要如何操作呢？</p>

<p>也許會有人問那我要怎麼取得那些Tag的值，如果你有用firebug或是google Chrome(按下F12呼叫開發者環境)，可以看到Tags Manager會在增加Tag的同時，默默的在背後新增一個hidden，並且把值丟到裡面做暫存，所以當開發者想要將Tag的值送到Server端時，可以從這裡取出</p>

<p><img src="https://lh4.googleusercontent.com/-hfXPhL3aF1g/UNKSZaCL9fI/AAAAAAAACFo/aKDNo-6VMj8/s658/2012-12-20_113905.jpg" /></p>

<p>當然，Tag裡面還有很重要的一個功能就是智能輸入，會出現關鍵字的提示，但因為Tags Manager是利用 <a href="http://twitter.github.com/bootstrap/index.html" target="_blank">Bootstrap</a> 裡面的 <a href="http://twitter.github.com/bootstrap/javascript.html#typeahead" target="_blank">typeahead</a> ，所以要用到關鍵字的提示要載入Bootstrap才可以使用，以下就是範例</p>

<pre><code>jQuery(".tagManager").tagsManager({
    prefilled: ["Pisa", "Rome"],
    typeahead: true,
    typeaheadSource: funSource
});

function funSource(){
    var ret = ["Manchester", "Astonvilla", "Real Madrid", "Barcelona", "Milan AC", "Internazionale", "Roma AC", "Chelsea"];
    return ret;
} 
</code></pre>

<p>你可以將需要提示的tag寫成一個陣列，將值塞入參數 <strong>typeaheadSource</strong></p>

<p>其他的參數分別為</p>

<ul>
<li>prefilled:預先給予的Tag</li>
<li>CapitalizeFirstLetter:如果為true，會將Tag第一個字轉為大寫，其他為小寫</li>
<li>preventSubmitOnEnter:如果為true，假設&lt;input&gt;在&lt;form&gt;裡面，按下Enter將不會觸發Sibmit</li>
<li>typeahead:如果為true，就會有關鍵字的提示選擇</li>
<li>typeaheadAjaxSource:可以從Server端接收JSON格式的關鍵字提示選擇</li>
<li>typeaheadSource:可以接收陣列或funtion回傳陣列的關鍵字提示選擇</li>
</ul>


<p>這邊只介紹幾個主要的參數，其他還有許多不錯的參數應用可以直接參考 <a href="http://welldonethings.com/tags/manager" target="_blank">Tags Manager</a></p>

<h2>總結</h2>

<p>這是一套蠻方便的plugin，對於他的樣式如果不太喜歡還可以自己進行修改，另外對Tag還想要有更多的其他選擇，也可以參考 <a href="http://ioncache.github.com/Tag-Handler/" target="_blank">Tag Handler</a>、<a href="http://xoxco.com/projects/code/tagsinput/" target="_blank">jQuery Tags Input Plugin</a> 這些參考文章</p>

<h3>參考資料:</h3>

<p><a href="http://welldonethings.com/tags/manager" target="_blank">Tags Manager (a jQuery plugin)</a></p>

<p>內容如有錯誤，歡迎指正</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[jQ-Plugin] 簡易的數值格式化-Numeral.js]]></title>
    <link href="http://blog.rx836.tw/blog/jquery-plugin-format-number/"/>
    <updated>2012-12-04T12:34:00+08:00</updated>
    <id>http://blog.rx836.tw/blog/jquery-plugin-format-number</id>
    <content type="html"><![CDATA[<p>對於將數字或是文字做格式化一直都覺得很阿雜，例如將算出來的數字加個千分位的逗點，或是加個貨幣符號，雖然自己做並不難，但還是希望可以有個plugin能做到這些事情，所以今天就來筆記 Numeral.js  這款plugin</p>

<!--more-->


<h2>Start</h2>

<p>用法很簡單容易，先下載 <a href="http://numeraljs.com/" target="_blank">Numeral.js</a></p>

<p>接著載入到網頁裡面後，js的寫法如下</p>

<pre><code>var string = numeral(1000).format('0,0');
// 1,000
</code></pre>

<p>這樣子把數字丟進去以後，在 <strong>format()</strong> 傳入相對應的格式，就可以擁有千分位的逗點，其它還有</p>

<h3>名次</h3>

<pre><code>var string = numeral(12).format('0o');
//12th
</code></pre>

<h3>貨幣符號</h3>

<pre><code>var string = numeral(1001).format('$ 0,0[.]00');
//$ 1,001
</code></pre>

<h3>Bytes</h3>

<pre><code>var string = numeral(7884486213).format('0.0b');
//7.3GB
</code></pre>

<h3>百分率</h3>

<pre><code>var string = numeral(0.974878234).format('0.000%');
//97.488%
</code></pre>

<h3>時間</h3>

<pre><code>var string = numeral(238).format('00:00:00');
//0:03:58
</code></pre>

<h3>Unformat</h3>

<p>能轉換過去，當然也可以轉換回來</p>

<pre><code>var string = numeral().unformat('12th');
//12
</code></pre>

<h3>加減乘除</h3>

<pre><code>var number = numeral(1000);

var added = number.add(10);
// 1010
</code></pre>

<p>這功能我是覺得有點多餘XD，去看source也只是做加減乘除，不太需要再多此一舉</p>

<h2>source code</h2>

<p>因為最近想自己嘗試練習多寫一些plugin，所以會去觀摩別人的寫法，numeral.js是一個蠻簡單明瞭的範例，所以大概抓幾個重點出來筆記心得，有興趣的人可以一起看看XD</p>

<p>1.建立一個名為Numeral的函式</p>

<p>數值就是從這邊傳入</p>

<pre><code>// Numeral prototype object
function Numeral (number) {
    this._n = number;
}
</code></pre>

<p>2.加入一些prototype</p>

<pre><code>numeral.fn = Numeral.prototype = {

    clone : function () {
        // ...
    },

    format : function (inputString) {           
        // ...
    },

    // ...
    // ...

    multiply : function (value) {
        // ...
    },

    divide : function (value) {
        // ...
    },

    difference : function (value) {
        // ...
    }

};
</code></pre>

<p>以上兩個為程式的主體，所以有了這個架構我們就可以這樣寫</p>

<pre><code>numeral(1000).format('0,0');
</code></pre>

<p>3.其它大部分就是函式的處理</p>

<pre><code>function formatNumeral (n, format) {
    var output;

    // figure out what kind of format we are dealing with
    if (format.indexOf('$') &gt; -1) { // currency!!!!!
        output = formatCurrency(n, format);
    } else if (format.indexOf('%') &gt; -1) { // percentage
        output = formatPercentage(n, format);
    } else if (format.indexOf(':') &gt; -1) { // time
        output = formatTime(n, format);
    } else { // plain ol' numbers or bytes
        output = formatNumber(n, format);
    }

    // return string
    return output;
}
</code></pre>

<p>會發現傳入的參數為 <strong>n</strong> 和 <strong>format</strong></p>

<p>n就是 <strong>Numeral函式</strong> 本身，裡面帶有傳入的數值和prototype這些東西</p>

<p>format就是要進行什麼樣的格式化</p>

<p>如果format裡面含有$就是要進行貨幣的格式化，有%就是要進行百分比的格式化，其它以此類推</p>

<h3>參考資料:</h3>

<p><a href="https://github.com/adamwdraper/Numeral-js" target="_blank">Github Numeral-js</a></p>

<p><a href="http://numeraljs.com/" target="_blank">Numeral.js</a></p>

<p>內容如有錯誤，歡迎指正</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[jQ-Plugin] 圖片延遲加載-Lazy-Loading]]></title>
    <link href="http://blog.rx836.tw/blog/create-lazy-loading/"/>
    <updated>2012-12-03T15:01:00+08:00</updated>
    <id>http://blog.rx836.tw/blog/create-lazy-loading</id>
    <content type="html"><![CDATA[<p><img src="https://lh4.googleusercontent.com/-9VL-bSTiio8/ULxO_q7aPbI/AAAAAAAACAQ/R6Nns5e2_T0/s551/qwer.jpg" /></p>

<p>延遲加載圖片常用在有大量圖片的網站，在訪客還沒看到的區域先暫停讀取圖片，等到看到特定區域時才將需要的圖片載入，好處是可以減少一開始等待所有圖片載入的時間，避免訪客感到不耐煩而流失，要做到此效果只需要搭配簡單的jQuery plugin，並且在HTML上加點技巧即可，重點是，要加上這個效果對設計師來說並不困難，因為裡面並沒有涉及到太多JavaScript知識</p>

<!--more-->


<h2>Start</h2>

<p>首先必須下載jQuery和<a href="https://raw.github.com/tuupola/jquery_lazyload/master/jquery.lazyload.min.js" target="_blank">minified lazyload script</a>，並且加掛在網頁裡面</p>

<pre><code>&lt;script src="jquery.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="jquery.lazyload.js" type="text/javascript"&gt;&lt;/script&gt;
</code></pre>

<p>接著我們需要建立一個 1x1 px的灰色小圖，這將會取代尚未讀取到的圖片，來做為延遲加載的效果</p>

<p><img src="https://lh4.googleusercontent.com/-GynYPKkHJnU/ULxbNG8liyI/AAAAAAAACA0/QMBzvG46740/s530/rtyu.jpg" /></p>

<p>接著是HTML部分</p>

<pre><code>&lt;div class="frame"&gt;&lt;img class="lazy" src="img/g.gif" data-original="img/interior_01.jpg" width="500" height="333" alt="interior shot #1"&gt;&lt;/div&gt;
</code></pre>

<p>這邊特別的是&lt;img&gt;的屬性 <strong>src</strong> 並不是指向原始圖檔，而是 1x1 px的小圖，而原始圖檔擺放的位置在屬性 <strong>data-original</strong> 裡面，另外要給予原始圖檔的 <strong>width</strong> 和 <strong>height</strong>，避免不必要的錯誤發生</p>

<h3>noscript</h3>

<p>在瀏覽器沒有開啟JavaScript的情況下，我們可能也要做一些預防措施，直接將圖片載入，不然使用者看到的圖片都是一片灰</p>

<pre><code>&lt;div class="frame"&gt;&lt;img class="lazy" src="img/g.gif" data-original="img/interior_01.jpg" width="500" height="333" alt="interior shot #1"&gt;&lt;/div&gt;
&lt;noscript&gt;&lt;img src="img/interior_01.jpg" width="500" height="333" alt="interior shot #1"&gt;&lt;/noscript&gt;
</code></pre>

<p>接著是JS部分</p>

<pre><code>$("img.lazy").lazyload();
</code></pre>

<p>大功告成！很容易吧，假如你不太喜歡這麼呆滯的載入圖片，可以加入一些效果，例如 <strong>fadeIn</strong></p>

<pre><code>$("img.lazy").lazyload({
    effect: "fadeIn"
});
</code></pre>

<p>想要看更多運用，可以連到參考資料</p>

<h3>參考資料:</h3>

<p><a href="http://speckyboy.com/2012/10/18/how-to-create-lazy-loading-images-for-your-website/" target="_blank">How to Create Lazy-Loading Images for your Website</a></p>

<p><a href="http://www.appelsiini.net/projects/lazyload" target="_blank">Lazy Load Plugin for jQuery</a></p>

<p>內容如有錯誤，歡迎指正</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[jQ-Plugin] 有效降低會員註冊退信率的mailcheck]]></title>
    <link href="http://blog.rx836.tw/blog/mailcheck-jquery-plugin/"/>
    <updated>2012-11-28T12:04:00+08:00</updated>
    <id>http://blog.rx836.tw/blog/mailcheck-jquery-plugin</id>
    <content type="html"><![CDATA[<p><img src="https://lh5.googleusercontent.com/-dLci9WLFC-8/ULWyqQJ-OxI/AAAAAAAAB_U/odHWaG3jNfE/s482/w.jpg" /></p>

<p>免費檔案分享<a href="http://kicksend.com/" target="_blank">Kicksend</a>有寫一篇文章是關於<a href="http://blog.kicksend.com/how-we-decreased-sign-up-confirmation-email-bounces-by-50/" target=_blank"">如何降低退信率</a>，內容大概是講User註冊會員以後，會發送註冊的確認信，但常常會發生被退信的情況，導致會員收不到信可能必須重新申請一次帳號，不然就是請客服修改E-mail，所以Kicksend為了減少這個困擾就做了分析並且解決問題</p>

<!--more-->


<p>Kicksend發現有很多人被退信的原因都是在輸入電子郵件(E-mail)的時候打錯domain，例如“hotmail.con”、“gnail.com”、“yajoo.com”等，這種錯誤有時候用戶自己都不知道，就直接按送出，導致收不到註冊信，所以Kicksend就做了一個設計，在用戶輸入E-mail以後，會檢查E-mail的domain，如果發現疑似錯誤情形，就會跳出建議的選項問用戶要不要更改，做到良好的 <strong>user experience</strong>，用了這個方法以後也確實降低了50%的退信率，無形中也增加了不少用戶，而下面將介紹這套jQuery plugin - <strong>mailcheck</strong></p>

<h2>start</h2>

<p>首先，可以去github載回原始碼</p>

<p><a href="https://github.com/Kicksend/mailcheck" target="_blank">mailcheck</a></p>

<p>接著在網頁裡面載入jQuery和mailcheck.min</p>

<pre><code>&lt;script src="jquery.min.js"&gt;&lt;/script&gt;
&lt;script src="mailcheck.min.js"&gt;&lt;/script&gt;
</code></pre>

<p>html部分，一個text field</p>

<pre><code>&lt;input id="email" name="email" type="text" /&gt;
</code></pre>

<p>接著是js部份</p>

<pre><code>var domains = ['hotmail.com', 'gmail.com', 'aol.com'];
var topLevelDomains = ["com", "net", "org"];

var superStringDistance = function(string1, string2) {
  // a string distance algorithm of your choosing
}

$('#email').on('blur', function() {
  $(this).mailcheck({
    domains: domains,                       // optional
    topLevelDomains: topLevelDomains,       // optional
    distanceFunction: superStringDistance,  // optional
    suggested: function(element, suggestion) {
      // callback code
    },
    empty: function(element) {
      // callback code
    }
  });
});
</code></pre>

<p>「domains」、「topLevelDomains」、「distanceFunction」這三個參數都是選填，分別為</p>

<p><strong>domains</strong>: 要比對的domain，例如:yahoo.com、google.com</p>

<p><strong>topLevelDomains</strong>: 允許的topLevelDomain，例如:com、net</p>

<p><strong>distanceFunction</strong>: 自訂用來計算最接近topLevelDomain內容的函式</p>

<p>假設在沒有填寫 <strong>domains</strong> 和 <strong>topLevelDomains</strong> 情況下，會採用預設值，根據source code裡面所寫的預設值為</p>

<p>預設domains</p>

<pre><code>defaultDomains: ["yahoo.com", "google.com", "hotmail.com", "gmail.com", "me.com", "aol.com", "mac.com",
  "live.com", "comcast.net", "googlemail.com", "msn.com", "hotmail.co.uk", "yahoo.co.uk",
  "facebook.com", "verizon.net", "sbcglobal.net", "att.net", "gmx.com", "mail.com"]
</code></pre>

<p>預設topLevelDomains</p>

<pre><code>defaultTopLevelDomains: ["co.uk", "com", "net", "org", "info", "edu", "gov", "mil"]
</code></pre>

<p>而「suggested」和「empty」則分別是 <strong>輸入錯誤時的callback</strong> 和 <strong>沒填寫E-mail的callback</strong>，所以你可以自行在這裡加上程式碼提醒User輸入錯誤或忘記輸入</p>

<h3>沒有jQuery的情況下</h3>

<p>假如你的專案裡面沒有用到jQuery，也可以單純使用js版本</p>

<pre><code>Kicksend.mailcheck.run({
  email: yourTextInput.value,
  domains: domains,                       // optional
  topLevelDomains: topLevelDomains,       // optional
  distanceFunction: superStringDistance,  // optional
  suggested: function(suggestion) {
    // callback code
  },
  empty: function() {
    // callback code
  }
});
</code></pre>

<p>最後附上有用到mailcheck這項效果的網站</p>

<ul>
<li><a href="http://kicksend.com/" target="_blank">Kicksend</a></li>
<li><a href="http://dropbox.com/" target="_blank">Dropbox</a></li>
<li><a href="http://flotype.com/" target="_blank">Flotype</a></li>
<li><a href="http://kickstarter.com/" target="_blank">Kickstarter</a></li>
<li><a href="http://kippt.com/" target="_blank">Kippt</a></li>
<li><a href="http://minecraft.net/" target="_blank">Minecraft</a></li>
<li><a href="http://prispy.com/" target="_blank">Prispy</a></li>
<li><a href="http://sbnation.com/" target="_blank">SB Nation</a></li>
<li><a href="http://show-space.com/" target="_blank">Show Space</a></li>
<li><a href="http://theverge.com/" target="_blank">The Verge</a></li>
<li><a href="http://uber.com/" target="_blank">Uber</a></li>
</ul>


<h3>參考資料:</h3>

<p><a href="https://github.com/Kicksend/mailcheck" target="_blank">mailcheck Github</a></p>

<p><a href="http://kicksend.com/join" target="_blank">Demo</a></p>

<p><a href="http://blog.kicksend.com/how-we-decreased-sign-up-confirmation-email-bounces-by-50/" target="_blank">How we decreased sign up confirmation email bounces by 50%</a></p>

<p>內容如有錯誤，歡迎指正</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[jQ-Plugin] Accordion Menu(手風琴)-Kwicks]]></title>
    <link href="http://blog.rx836.tw/blog/jquery-accordion-plugin-kwicks/"/>
    <updated>2012-11-20T11:52:00+08:00</updated>
    <id>http://blog.rx836.tw/blog/jquery-accordion-plugin-kwicks</id>
    <content type="html"><![CDATA[<p><img src="https://lh3.googleusercontent.com/-_J-W2xu9kk0/UKssWB_LsAI/AAAAAAAAB8I/l5FDpuCO27c/s415/t1.jpg" /></p>

<p><img src="https://lh5.googleusercontent.com/-jKM2KBpI5eM/UKssWHgRekI/AAAAAAAAB8E/hG205WtoTDU/s415/t2.jpg" /></p>

<p>「jQuery accordion menu」，也有人稱呼為手風琴，從上面兩張圖可以看到原本是一個水平的menu，滑鼠移過去指定某個項目，週遭的menu會縮起來，指定的那個項目會展開，因為一開一合的效果很像手風琴，所以才稱呼為「accordion menu」</p>

<!--more-->


<p>但這篇不教怎麼自己打造accordion menu，因為自認為功力不夠不敢亂現，網路上也很多那種例如「30種精選jQuery accordion menu」主題的文章，資源非常豐富，但因為實在太多款了，每次要做都還要花時間一個一個去看，所以今天就特別介紹一款叫做 <a href="http://devsmash.com/projects/kwicks" target="_blank">「Kwicks」</a> 的jQuery plugin，也可以簡單達到前面所說的accordion menu效果，這邊就記錄在我的Blog裡面，方便我或網路上的朋友可以參考</p>

<p>最好的介紹就是直接看Demo最快，Kwicks可以做到 <a href="http://devsmash.com/projects/kwicks/examples/horizontal" target="_blank">Horizontal</a>、<a href="http://devsmash.com/projects/kwicks/examples/vertical" target="_blank">vertical</a>、<a href="http://devsmash.com/projects/kwicks/examples/easing" target="_blank">Custom Easing</a> 等效果</p>

<p>要用Kwicks需下載他的plugin還有jQuery</p>

<p><a href="http://jquery.com/" target="_blank" />jQuery >= 1.7</a></p>

<p><a href="https://github.com/jmar777/kwicks/blob/v2.0.0/jquery.kwicks.js" target="_blank" />jquery.kwicks.js</a></p>

<p><a href="https://github.com/jmar777/kwicks/blob/v2.0.0/jquery.kwicks.css" target="_blank" />jquery.kwicks.css</a></p>

<p>要注意的是，這版Kwicks是v2.0.0，需用到jQuery 1.7以上，另外如果要用到Custom Easing，還要另外下載jQuery Easing Plugin</p>

<p><a href="http://gsgd.co.uk/sandbox/jquery/easing/" target="_blank" />jQuery Easing Plugin</a></p>

<p>接著就是HTML部分，很簡潔不複雜</p>

<pre><code>&lt;ul class='kwicks kwicks-horizontal'&gt;
    &lt;li&gt;&lt;/li&gt;
    &lt;li&gt;&lt;/li&gt;
    &lt;li&gt;&lt;/li&gt;
    &lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
</code></pre>

<p>就是用一個&lt;ul&gt;元素包裹著&lt;li&gt;，&lt;li&gt;裡面放著就是項目裡面要擺的東西(例如圖片、文字)，&lt;ul&gt;部分必須要添加「kwicks」和「kwicks-horizontal」兩個class，「kwicks」是固定要添加的class，「kwicks-horizontal」是指水平的呈現方式，如果要垂直就用「kwicks-vertical」</p>

<p>jQuery的寫法部分，有分三種</p>

<pre><code>// instantiate kwicks
$(element).kwicks(opts);

// invoke a method
$(element).kwicks('method-name' [, param]);

// handle events
$(element).on('event-name.kwicks', handler);
</code></pre>

<p>以下是參數設定</p>

<h3>size:(必填)</h3>

<p>設定項目的長或寬，如果isVertical是true的話，這個設定就是高度，其它情況預設就是寬度，特別注意的是這個值會影響到整個accordion menu多高(或多寬)</p>

<h3>maxSize|minSize:(必填)</h3>

<p>展開的最大寬度(或高度)，或是最小寬度(或高度)，你只能選擇填最大或最小，不能兩個都填</p>

<h3>spacing:(Default: 5)</h3>

<p>每個項目之間的距離，預設是5px</p>

<h3>duration:(Default: 500)</h3>

<pre><code>觸發後動畫執行的時間(毫秒)，預設是500毫秒
</code></pre>

<h3>isVertical:(Default: false)</h3>

<pre><code>是否為垂直menu，預設是false
</code></pre>

<p>easing:(Default: none)</p>

<pre><code>如果有載入jQuery Easing Plugin，可以設定效果
</code></pre>

<p>behavior:(Default: none)</p>

<pre><code>初始化的動作
</code></pre>

<h3>Examples</h3>

<p>HTML</p>

<pre><code>&lt;ul class='kwicks kwicks-horizontal'&gt;
    &lt;li id='panel-1'&gt;&lt;img src="pic.jpg" /&gt;&lt;/li&gt;
    &lt;li id='panel-2'&gt;&lt;img src="pic.jpg" /&gt;&lt;/li&gt;
    &lt;li id='panel-3'&gt;&lt;img src="pic.jpg" /&gt;&lt;/li&gt;
    &lt;li id='panel-4'&gt;&lt;img src="pic.jpg" /&gt;&lt;/li&gt;
&lt;/ul&gt;
</code></pre>

<p>用&lt;ul&gt;、&lt;li&gt;做一個menu，&lt;ul&gt;加上對應的class，&lt;li&gt;裡面放置圖片或文字</p>

<p>CSS</p>

<pre><code>.kwicks {
    width: 515px;
    height: 100px;
}
.kwicks &gt; li {
    width: 100px;
    height: 100px;
    /* overridden by kwicks but good for when JavaScript is disabled */
    margin-left: 5px;
    float: left;
}

#panel-1 { background-color: #53b388; }
#panel-2 { background-color: #5a69a9; }
#panel-3 { background-color: #c26468; }
#panel-4 { background-color: #bf7cc7; }
</code></pre>

<p>注意width和height會影響到顯示的結果</p>

<p>JS</p>

<pre><code>$(function() {
    $('.kwicks').kwicks({
        size: 100,
        maxSize : 250,
        spacing : 5,
        behavior: 'menu'
    });
});
</code></pre>

<p>size要特別注意的是，越高(or寬)展開的空間就越大，看到的東西就會越多，如何拿捏可以實際在瀏覽器上跑跑看效果</p>

<p>Kwicks還有支援<strong>Methods</strong>和<strong>events</strong>，有興趣的可以直接參考文件(附參考資料)</p>

<p>當然，網路世界的選擇太多了，不一定非要用這個plugin，如果有更好的推薦也歡迎跟我說:)</p>

<p>參考資料:</p>

<p><a href="http://devsmash.com/projects/kwicks" target="_blank">Kwicks for jQuery</a></p>

<p>內容如有錯誤，歡迎指正</p>
]]></content>
  </entry>
  
</feed>
