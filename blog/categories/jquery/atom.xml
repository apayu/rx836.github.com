<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: jQuery | apa]]></title>
  <link href="http://rx836.github.com/blog/categories/jquery/atom.xml" rel="self"/>
  <link href="http://rx836.github.com/"/>
  <updated>2012-11-28T14:57:20+08:00</updated>
  <id>http://rx836.github.com/</id>
  <author>
    <name><![CDATA[阿帕]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[[jQuery] 自製擁有Responsive的Tooltip]]></title>
    <link href="http://rx836.github.com/blog/friendly-tooltip-responsive/"/>
    <updated>2012-11-27T11:53:00+08:00</updated>
    <id>http://rx836.github.com/blog/friendly-tooltip-responsive</id>
    <content type="html"><![CDATA[<p><img src="https://lh6.googleusercontent.com/-KiD_TaOPzFA/ULRxljbyVVI/AAAAAAAAB-M/nHY1WuJDaGE/s373/q1.jpg" /></p>

<p>之前做Tooltip，都是上網找plugin比較多，但這次看到一篇文章，是自己寫一個Tooltip，就來記錄一下，而且還有Responsive的效果，可以依照載具大小做縮放和位置的改變，code不多，也很簡單明瞭</p>

<!--more-->


<p>先稍微介紹一下什麼是Tooltip，就如上面的圖所示，他可以提供良好的 <strong>user experience</strong>，可以在某個功能或選單，又或是某段文字上，在滑鼠移過去時(有時候是在點擊情況下，但少數)，出現一個小框，裡面有少許的說明文字，讓用戶知道，這個功能或是按鈕是在幹嘛</p>

<p>首先，是CSS的部分</p>

<pre><code>#tooltip
{
    text-align: center;
    color: #fff;
    background: #111;
    position: absolute;
    z-index: 100;
    padding: 15px;
}

    #tooltip:after /* triangle decoration */
    {
        width: 0;
        height: 0;
        border-left: 10px solid transparent;
        border-right: 10px solid transparent;
        border-top: 10px solid #111;
        content: '';
        position: absolute;
        left: 50%;
        bottom: -10px;
        margin-left: -10px;
    }

        #tooltip.top:after
        {
            border-top-color: transparent;
            border-bottom: 10px solid #111;
            top: -20px;
            bottom: auto;
        }

        #tooltip.left:after
        {
            left: 10px;
            margin: 0;
        }

        #tooltip.right:after
        {
            right: 10px;
            left: auto;
            margin: 0;
        }
</code></pre>

<p>這段CSS是建立一個tooltip，包括在不同載具時，呈現tooltip在不同的適當位置(bottom、top、left、right)，不過這邊有個小技巧要特別拿出來說明一下</p>

<p>就是Tooltip上面那個小箭頭其實是用CSS畫出來的</p>

<p><img src="https://lh4.googleusercontent.com/-jhfjv_hv-hY/ULRzfM9ycJI/AAAAAAAAB-w/oOohCQO9N6w/s373/q6.jpg" /></p>

<p>不同的CSS畫法，可以參考下面範例，HTML部分就只要一個div</p>

<h3>用CSS畫出三角型</h3>

<p><img src="https://lh3.googleusercontent.com/-kNDtVnCgUzE/ULRxloJG7qI/AAAAAAAAB-U/Jkfm3E0DC6k/s112/q2.jpg" /></p>

<pre><code>div {
    width: 0;
    height: 0;
    border-left: 50px solid #fff;
    border-right: 50px solid #fff;
    border-bottom: 100px solid black;
}
</code></pre>

<p><img src="https://lh5.googleusercontent.com/-siEgv7d8AJM/ULRxmDlFMeI/AAAAAAAAB-Q/BFmufqFJ3VU/s115/q4.jpg" /></p>

<pre><code>div {
    width: 0;
    height: 0;
    border-top: 50px solid #fff;
    border-right: 100px solid black;
    border-bottom: 50px solid #fff;
}
</code></pre>

<p><img src="https://lh6.googleusercontent.com/-VWF99ZiXIo8/ULRxlgGjbuI/AAAAAAAAB-I/ASZmQTUURI4/s110/q3.jpg" /></p>

<pre><code>div {
    width: 0;
    height: 0;
    border-left: 50px solid #fff;
    border-right: 50px solid #fff;
    border-top: 100px solid black;
}
</code></pre>

<p><img src="https://lh4.googleusercontent.com/-bjaIIy9c9Ow/ULRxmXa20iI/AAAAAAAAB-Y/ZvF6cRBvc1I/s107/q5.jpg" /></p>

<pre><code>div {
    width: 0;
    height: 0;
    border-top: 50px solid #fff;
    border-right: 100px solid black;
    border-bottom: 50px solid #fff;
}
</code></pre>

<p>當然如果希望是別的底色可以自己再做修改，接下來是JS部分</p>

<pre><code>$( document ).ready( function()
{
    var targets = $( '[rel~=tooltip]' ),
        target  = false,
        tooltip = false,
        title   = false;

    targets.bind( 'mouseenter', function()
    {
        target  = $( this );
        tip     = target.attr( 'title' );
        tooltip = $( '&lt;div id="tooltip"&gt;&lt;/div&gt;' );

        if( !tip || tip == '' )
            return false;

        target.removeAttr( 'title' );
        tooltip.css( 'opacity', 0 )
               .html( tip )
               .appendTo( 'body' );

        var init_tooltip = function()
        {
            if( $( window ).width() &lt; tooltip.outerWidth() * 1.5 )
                tooltip.css( 'max-width', $( window ).width() / 2 );
            else
                tooltip.css( 'max-width', 340 );

            var pos_left = target.offset().left + ( target.outerWidth() / 2 ) - ( tooltip.outerWidth() / 2 ),
                pos_top  = target.offset().top - tooltip.outerHeight() - 20;

            if( pos_left &lt; 0 )
            {
                pos_left = target.offset().left + target.outerWidth() / 2 - 20;
                tooltip.addClass( 'left' );
            }
            else
                tooltip.removeClass( 'left' );

            if( pos_left + tooltip.outerWidth() &gt; $( window ).width() )
            {
                pos_left = target.offset().left - tooltip.outerWidth() + target.outerWidth() / 2 + 20;
                tooltip.addClass( 'right' );
            }
            else
                tooltip.removeClass( 'right' );

            if( pos_top &lt; 0 )
            {
                var pos_top  = target.offset().top + target.outerHeight();
                tooltip.addClass( 'top' );
            }
            else
                tooltip.removeClass( 'top' );

            tooltip.css( { left: pos_left, top: pos_top } )
                   .animate( { top: '+=10', opacity: 1 }, 50 );
        };

        init_tooltip();
        $( window ).resize( init_tooltip );

        var remove_tooltip = function()
        {
            tooltip.animate( { top: '-=10', opacity: 0 }, 50, function()
            {
                $( this ).remove();
            });

            target.attr( 'title', tip );
        };

        target.bind( 'mouseleave', remove_tooltip );
        tooltip.bind( 'click', remove_tooltip );
    });
});
</code></pre>

<p>JS部分，就是當「mouseenter」的事件發生時，加上id為tooltip的div，「mouseleave」時就把div也就是tooltip移除</p>

<p>「init_tooltip」主要是計算載具視窗的大小，來給予tooltip相對的位置和添加類別，其中說明一下 <strong>.outerWidth()</strong> 這個方法</p>

<br/>


<br/>


<h3>width()、innerWidth()、outerWidth()的三者差別</h3>

<p><strong>width()</strong>: 一般我們取得一個元素的寬都會用，取出來的值只有<span style="color:red">宽度</span></p>

<p><strong>innerWidth()</strong>: <span style="color:red">宽度</span>+<span style="color:red">內距(padding)</span></p>

<p><strong>outerWidth()</strong>: <span style="color:red">宽度</span>+<span style="color:red">內距(padding)</span>+<span style="color:red">邊框(boder)</span></p>

<p><strong>outerWidth(true)</strong>: 如果給true的話(預設是false)，<span style="color:red">宽度</span>+<span style="color:red">內距(padding)</span>+<span style="color:red">邊框(boder)</span>+<span style="color:red">邊界(margin)</span></p>

<br/>


<br/>


<p>這樣，搭配幾個小技巧，一個簡單又好用的Tooltip就可以自己製作，而不用再去找相關的plugin</p>

<p>參考資料:</p>

<p><a href="http://osvaldas.info/elegant-css-and-jquery-tooltip-responsive-mobile-friendly" target="_blank">Responsive and Mobile-Friendly Tooltip</a></p>

<p><a href="http://osvaldas.info/examples/elegant-css-and-jquery-tooltip-responsive-mobile-friendly/" target="_blank">Demo</a></p>

<p><a href="http://wyz.67ge.com/css-triangle/" target="_blank">使用纯CSS实现的各种三角，全浏览器兼容</a></p>

<p><a href="http://www.dearoom.com/blog/jquery%E4%B8%AD-heightwidth-innerheightinnerwidth-outerheightouterwidth%E7%9A%84%E5%8C%BA%E5%88%AB/" target="_blank">jQuery中 height(width) innerHeight(innerWidth) outerHeight(outerWidth)的区别</a></p>

<p>內容如有錯誤，歡迎指正</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[jQ-Plugin] Accordion Menu(手風琴)-Kwicks]]></title>
    <link href="http://rx836.github.com/blog/jquery-accordion-plugin-kwicks/"/>
    <updated>2012-11-20T11:52:00+08:00</updated>
    <id>http://rx836.github.com/blog/jquery-accordion-plugin-kwicks</id>
    <content type="html"><![CDATA[<p><img src="https://lh3.googleusercontent.com/-_J-W2xu9kk0/UKssWB_LsAI/AAAAAAAAB8I/l5FDpuCO27c/s415/t1.jpg" /></p>

<p><img src="https://lh5.googleusercontent.com/-jKM2KBpI5eM/UKssWHgRekI/AAAAAAAAB8E/hG205WtoTDU/s415/t2.jpg" /></p>

<p>「jQuery accordion menu」，也有人稱呼為手風琴，從上面兩張圖可以看到原本是一個水平的menu，滑鼠移過去指定某個項目，週遭的menu會縮起來，指定的那個項目會展開，因為一開一合的效果很像手風琴，所以才稱呼為「accordion menu」</p>

<!--more-->


<p>但這篇不教怎麼自己打造accordion menu，因為自認為功力不夠不敢亂現，網路上也很多那種例如「30種精選jQuery accordion menu」主題的文章，資源非常豐富，但因為實在太多款了，每次要做都還要花時間一個一個去看，所以今天就特別介紹一款叫做 <a href="http://devsmash.com/projects/kwicks" target="_blank">「Kwicks」</a> 的jQuery plugin，也可以簡單達到前面所說的accordion menu效果，這邊就記錄在我的Blog裡面，方便我或網路上的朋友可以參考</p>

<p>最好的介紹就是直接看Demo最快，Kwicks可以做到 <a href="http://devsmash.com/projects/kwicks/examples/horizontal" target="_blank">Horizontal</a>、<a href="http://devsmash.com/projects/kwicks/examples/vertical" target="_blank">vertical</a>、<a href="http://devsmash.com/projects/kwicks/examples/easing" target="_blank">Custom Easing</a> 等效果</p>

<p>要用Kwicks需下載他的plugin還有jQuery</p>

<p><a href="http://jquery.com/" target="_blank" />jQuery >= 1.7</a></p>

<p><a href="https://github.com/jmar777/kwicks/blob/v2.0.0/jquery.kwicks.js" target="_blank" />jquery.kwicks.js</a></p>

<p><a href="https://github.com/jmar777/kwicks/blob/v2.0.0/jquery.kwicks.css" target="_blank" />jquery.kwicks.css</a></p>

<p>要注意的是，這版Kwicks是v2.0.0，需用到jQuery 1.7以上，另外如果要用到Custom Easing，還要另外下載jQuery Easing Plugin</p>

<p><a href="http://gsgd.co.uk/sandbox/jquery/easing/" target="_blank" />jQuery Easing Plugin</a></p>

<p>接著就是HTML部分，很簡潔不複雜</p>

<pre><code>&lt;ul class='kwicks kwicks-horizontal'&gt;
    &lt;li&gt;&lt;/li&gt;
    &lt;li&gt;&lt;/li&gt;
    &lt;li&gt;&lt;/li&gt;
    &lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
</code></pre>

<p>就是用一個&lt;ul&gt;元素包裹著&lt;li&gt;，&lt;li&gt;裡面放著就是項目裡面要擺的東西(例如圖片、文字)，&lt;ul&gt;部分必須要添加「kwicks」和「kwicks-horizontal」兩個class，「kwicks」是固定要添加的class，「kwicks-horizontal」是指水平的呈現方式，如果要垂直就用「kwicks-vertical」</p>

<p>jQuery的寫法部分，有分三種</p>

<pre><code>// instantiate kwicks
$(element).kwicks(opts);

// invoke a method
$(element).kwicks('method-name' [, param]);

// handle events
$(element).on('event-name.kwicks', handler);
</code></pre>

<p>以下是參數設定</p>

<h3>size:(必填)</h3>

<p>設定項目的長或寬，如果isVertical是true的話，這個設定就是高度，其它情況預設就是寬度，特別注意的是這個值會影響到整個accordion menu多高(或多寬)</p>

<h3>maxSize|minSize:(必填)</h3>

<p>展開的最大寬度(或高度)，或是最小寬度(或高度)，你只能選擇填最大或最小，不能兩個都填</p>

<h3>spacing:(Default: 5)</h3>

<p>每個項目之間的距離，預設是5px</p>

<h3>duration:(Default: 500)</h3>

<pre><code>觸發後動畫執行的時間(毫秒)，預設是500毫秒
</code></pre>

<h3>isVertical:(Default: false)</h3>

<pre><code>是否為垂直menu，預設是false
</code></pre>

<p>easing:(Default: none)</p>

<pre><code>如果有載入jQuery Easing Plugin，可以設定效果
</code></pre>

<p>behavior:(Default: none)</p>

<pre><code>初始化的動作
</code></pre>

<h3>Examples</h3>

<p>HTML</p>

<pre><code>&lt;ul class='kwicks kwicks-horizontal'&gt;
    &lt;li id='panel-1'&gt;&lt;img src="pic.jpg" /&gt;&lt;/li&gt;
    &lt;li id='panel-2'&gt;&lt;img src="pic.jpg" /&gt;&lt;/li&gt;
    &lt;li id='panel-3'&gt;&lt;img src="pic.jpg" /&gt;&lt;/li&gt;
    &lt;li id='panel-4'&gt;&lt;img src="pic.jpg" /&gt;&lt;/li&gt;
&lt;/ul&gt;
</code></pre>

<p>用&lt;ul&gt;、&lt;li&gt;做一個menu，&lt;ul&gt;加上對應的class，&lt;li&gt;裡面放置圖片或文字</p>

<p>CSS</p>

<pre><code>.kwicks {
    width: 515px;
    height: 100px;
}
.kwicks &gt; li {
    width: 100px;
    height: 100px;
    /* overridden by kwicks but good for when JavaScript is disabled */
    margin-left: 5px;
    float: left;
}

#panel-1 { background-color: #53b388; }
#panel-2 { background-color: #5a69a9; }
#panel-3 { background-color: #c26468; }
#panel-4 { background-color: #bf7cc7; }
</code></pre>

<p>注意width和height會影響到顯示的結果</p>

<p>JS</p>

<pre><code>$(function() {
    $('.kwicks').kwicks({
        size: 100,
        maxSize : 250,
        spacing : 5,
        behavior: 'menu'
    });
});
</code></pre>

<p>size要特別注意的是，越高(or寬)展開的空間就越大，看到的東西就會越多，如何拿捏可以實際在瀏覽器上跑跑看效果</p>

<p>Kwicks還有支援<strong>Methods</strong>和<strong>events</strong>，有興趣的可以直接參考文件(附參考資料)</p>

<p>當然，網路世界的選擇太多了，不一定非要用這個plugin，如果有更好的推薦也歡迎跟我說:)</p>

<p>參考資料:</p>

<p><a href="http://devsmash.com/projects/kwicks" target="_blank">Kwicks for jQuery</a></p>

<p>內容如有錯誤，歡迎指正</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[jQuery] 不要將任何事情都在jQuery.ready()初始化]]></title>
    <link href="http://rx836.github.com/blog/jquery-not-initialize-all-things/"/>
    <updated>2012-11-06T15:06:00+08:00</updated>
    <id>http://rx836.github.com/blog/jquery-not-initialize-all-things</id>
    <content type="html"><![CDATA[<p>Don't Initialize All the Thing in jQuery.ready()...，這是由<a href="https://twitter.com/elijahmanor" target="_blank">Elijah Manor</a>所寫的一篇文章，裡面提到不要把所有事情都放在jQuery.ready()做初始化(我就是這樣...)，現在就來筆記一下他怎麼說</p>

<!--more-->


<p>寫過jQuery的開發者都知道，在撰寫jQuery都會用jQuery.ready()包起來，在載入網頁時都會先等DOM載入完畢，才會執行裡面的程式碼部分，不過這有時候會讓User在進入網頁時等待過久，失去耐心，如何讓網頁在最短的時間先有畫面出來，也會影響到User使用上的經驗</p>

<p>先看HTML的部分</p>

<pre><code>&lt;form class="form-horizontal well"&gt;
    &lt;fieldset&gt;
        &lt;div class="control-group"&gt;
            &lt;label class="control-label" for="firstName"&gt;First Name&lt;/label&gt;
            &lt;div class="controls"&gt;
                &lt;input id="firstName" type="text" class="input-xlarge"&gt;
            &lt;/div&gt;
        &lt;/div&gt;
        &lt;!-- More HTML... --&gt;
        &lt;div class="control-group"&gt;
            &lt;label class="control-label" for="birthday"&gt;Birthday&lt;/label&gt;
            &lt;div class="controls"&gt;
                &lt;input id="birthday" type="text" class="date input-xlarge"&gt;
            &lt;/div&gt;
        &lt;/div&gt;
        &lt;div class="form-actions"&gt;
            &lt;button type="submit" class="btn btn-primary"&gt;Save changes&lt;/button&gt;
            &lt;button class="btn"&gt;Cancel&lt;/button&gt;
        &lt;/div&gt;
    &lt;/fieldset&gt;
&lt;/form&gt;
</code></pre>

<p>這是一個很常見的表格，會填寫一些基本資料，不過為了讓User在填寫日期方便，會用「datapicker」這個jQuery UI widget來選擇日期</p>

<p><img src="https://lh5.googleusercontent.com/-mb7pEbTw_FI/UJjDYpdh3oI/AAAAAAAAB28/ZQDyzYWd5K0/s296/123.jpg" /></p>

<p>jQuery程式碼部分</p>

<pre><code>$( document ).ready( function() {

    $( "input.date" ).datepicker({
        minDate: moment().subtract( "months", 1 ).toDate(),
        maxDate: moment().add( "months", 1 ).toDate(),
        dateFormat: "d M, y",
        constrainInput: true,
        beforeShowDay: $.datepicker.noWeekends
    });

});
</code></pre>

<p>用這樣方式的優點是，當用戶選擇日期的時候，jQuery已經準備好並且很快的產生互動，但缺點是:</p>

<p>1.程式碼必須等到DOM載完才能執行</p>

<p>2.沒有使用context，選取器會在整個網頁進行搜尋，降低效能</p>

<p>3.雖然程式碼在初始化的時候就都載入完畢，但不確定是不是真的會用到</p>

<p>所以，為了改善這個情況，我們可以在需要的時候，在執行datapicker</p>

<pre><code>$( document ).on( "focus", "input.date:not(.hasDatepicker)", function() {
    toastr.info( "Initializing " + this.id );

    $( this ).datepicker({
        minDate: moment().subtract( "months", 1 ).toDate(),
        maxDate: moment().add( "months", 1 ).toDate(),
        dateFormat: "d M, y",
        constrainInput: true,
        beforeShowDay: $.datepicker.noWeekends
    });
});
</code></pre>

<p>可以看到在「input.date」上我們監聽了一個事件「focus」，當這個元素並選取時，就會執行裡面的datapicker的UI程式，也就是說，當User要輸入日期時，才會執行這段程式碼，而不用再一開始就將程式碼執行起來</p>

<p>這將會讓我們的網頁不會在這麼的笨重，顯得緩慢，讓我又多學習了一招:)</p>

<p>參考資料:</p>

<p><a href="http://www.elijahmanor.com/2012/10/dont-initialize-all-things-in.html" target="_blank">Don't Initialize All the Things in jQuery.ready() </a></p>

<p>內容如有錯誤，歡迎指正</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[jQ-Plugin] 倒數計時的plugin介紹]]></title>
    <link href="http://rx836.github.com/blog/jquery-countdown-plugins/"/>
    <updated>2012-11-05T11:45:00+08:00</updated>
    <id>http://rx836.github.com/blog/jquery-countdown-plugins</id>
    <content type="html"><![CDATA[<p>之前做活動網站常常會使用到「倒數計時」這項功能，因為其實蠻好寫的，所以都是用jQuery手刻比較多，但今天看到一篇文章是收集有關於jQuery Countdown Plugins，看了一下發現有些功能蠻齊全的，就記錄在這裡，供日後參考</p>

<!--more-->


<h3>jQuery Countdown Script</h3>

<p><img src="https://lh5.googleusercontent.com/-q5CkXGDfwAo/UJc_Gp1lgEI/AAAAAAAAB2E/gjITVcyHIes/s480/lwt_post1.jpg" /></p>

<p>plugin簡單好設定，還可以在同一個頁面設定好幾個不同的倒數計時，甚至是啟動和暫停</p>

<p><a href="http://www.littlewebthings.com/2010/02/jquery-countdown-script/" target="_blank">範例Demo</a></p>

<h3>Countdown</h3>

<p><img src="https://lh6.googleusercontent.com/-pmIMh95RX54/UJc_Ga3R2dI/AAAAAAAAB2I/TR6Dtq4DHYw/s480/jquery-countdown.gif" /></p>

<p>擁有許多進階的設定，支援時區，多種語言等</p>

<p><a href="http://keith-wood.name/countdown.html" target="_blank">範例Demo</a></p>

<h3>The Final Countdown</h3>

<p><img src="https://lh4.googleusercontent.com/-q5WsQiLTJv4/UJc_FlYN8YI/AAAAAAAAB14/eR6HQ1RxIMo/s403/a1.jpg" /></p>

<p>多種呈現方式，可以隨自己喜歡去做調整，倒數計時的部分甚至連毫秒都可以呈現</p>

<p><a href="https://github.com/hilios/jquery.countdown" target="_blank">範例Demo</a></p>

<h3>KK Countdown</h3>

<p><img src="https://lh6.googleusercontent.com/-MKQU1yoPcpA/UJc_Fn8CqaI/AAAAAAAAB2A/AZs0VgXkuco/s600/2.jpg" /></p>

<p>一樣有多種呈現方式，用時間戳記來給予時間</p>

<p><a href="http://krzysztof-furtak.pl/2010/05/kk-countdown-jquery-plugin/" target="_blank">範例Demo</a></p>

<h3>jQuery Countdown</h3>

<p><img src="https://lh5.googleusercontent.com/-uIiwnxje1y0/UJdAu1w52KI/AAAAAAAAB2g/-ZVyh0o40DA/s520/3.jpg" /></p>

<p>利用圖片來呈現，沒有太多功能可以設定，比較簡單的plugin</p>

<p><a href="http://code.google.com/p/jquery-countdown/" target="_blank">範例Demo</a></p>

<h3>jQuery Countdown Timer</h3>

<p><img src="https://lh5.googleusercontent.com/-fmAgRmTcc40/UJc_FilzH0I/AAAAAAAAB18/qyyvqbxCZfU/s620/jquery-countdown-timer.jpg" /></p>

<p>裡面有相當詳細的教學文，教你怎麼使用他們的plugin</p>

<p><a href="http://tutorialzine.com/2011/12/countdown-jquery/" target="_blank">範例Demo</a></p>

<p>倒數計時自己寫並不難，不過有些很特別的功能或是效果用plugin，倒也可以省下不少時間，所以要用plugin或是自己手刻就看各位開發者自己當下的狀況做選擇:)</p>

<p>參考資料:</p>

<p><a href="http://www.webresourcesdepot.com/jquery-countdown-plugins-for-coming-soon-pages/" target="_blank"></a></p>

<p>內容如有錯誤，歡迎指正</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[jQuery] jQuery你一定要知道的八件事]]></title>
    <link href="http://rx836.github.com/blog/jquery-8-skill/"/>
    <updated>2012-10-24T23:18:00+08:00</updated>
    <id>http://rx836.github.com/blog/jquery-8-skill</id>
    <content type="html"><![CDATA[<p>jQuery這項技能在面試的時候，已經從"加分"變成"必備"，由此可知，如果想走web開發，jQuery已經是不可或缺的技術，但jQuery雖然好上手，網路上的教學資源也很多，但有幾件事情是在使用jQuery你一定要知道的</p>

<!--more-->


<h2>1.使用Google CDN-hosted並且保持最新版本</h2>

<p>使用Google CDN的好處是，有許多網站都有使用CDN，所以訪客在拜訪你的網站之前，可能已經先下載過jQuery，之後拜訪你的網站就可以直接從快取中使用，而不用重新下載，增加網站讀取速度，至於保持jQuery最新的版本，除了可以修復一些bug，還可以增加performance</p>

<pre><code>&lt;script type="text/javascript" src="http://rx836.github.com//ajax.googleapis.com/ajax/libs/jquery/1.8.1/jquery.min.js"&gt;&lt;/script&gt;
</code></pre>

<p>有些人可能會發現，為什麼少了<strong>http:</strong>，原因是假如網站遊走在http和https之間，使用這種忽略 <strong>scheme</strong> 的部分，就可以避免因為開啟了https的網頁，但jQuery是http所產生的安全性問題</p>

<h2>2.在開發時搭配Cheat Sheet</h2>

<p>其實不只是初學者，對於資深的開發者也建議使用cheat sheets，可以方便直接查詢，也省去google的麻煩</p>

<p><a href="http://oscarotero.com/jquery/" target="_blank">http://oscarotero.com/jquery/</a></p>

<p><a href="http://www.javascripttoolbox.com/jquery/cheatsheet/" target="_blank">http://www.javascripttoolbox.com/jquery/cheatsheet/</a></p>

<p><a href="http://devcheatsheet.com/tag/jquery/" target="_blank">http://devcheatsheet.com/tag/jquery/</a></p>

<h2>3.不能單純只使用CDN</h2>

<p>剛剛第一點講到建議使用Google CDN，但有一點必須要注意的是，CDN有時候會有失效的問題，像某些地區會連不到Google CDN，這時候就要有locally的jQuery可以備用，判別的JavaScript語法可以這樣寫</p>

<pre><code>&lt;script src="http://rx836.github.com//ajax.googleapis.com/ajax/libs/jquery/1.8.1/jquery.min.js"&gt;&lt;/script&gt;
&lt;script&gt;window.jQuery || document.write('&lt;script src="js/jquery-1.8.1.min.js"&gt;&lt;\/script&gt;')&lt;/script&gt;
</code></pre>

<p>這段程式碼會在抓不到Google CDN時，去抓取自家主機上的jQuery，讓網站不至於因為這樣而掛掉</p>

<h2>4.重複使用jQuery selector</h2>

<p>為了優化jQuery，千萬不要這樣寫</p>

<pre><code>$("#mySmashingID").css("color", "pink");
$("#mySmashingID").css("font", "Verdana");
$("#mySmashingID").text("Some error message goes here!");
</code></pre>

<p>假如要針對同個selectors做操作，不應該重複呼叫自己，而是要利用jQuery鏈結的特性串起來</p>

<pre><code>$("#mySmashingID").css({ "color": "pink", "font": "Verdana"}).text("Some error message goes here!!");
</code></pre>

<h2>5.將重複使用的selector宣告一個變數存起來</h2>

<p>假如你會針對一個selector在很多地方使用到</p>

<pre><code>$(‘#mySmashingGag’).appendTo(‘#mysidebar’);
$(‘#mySmashingGag’).addClass(‘widget’);
$(‘#mySmashingGag’).hide();
$(‘#mySmashingGag’).fadeIn(‘fast’);
</code></pre>

<p>你應該將他存入一個變數，並且使用變數來操作，這樣也可以增加效能，而不會一直去做selector</p>

<pre><code>var mySmashingGag = $(‘#mySmashingGag’);
mySmashingGag.appendTo(‘#mysidebar’);
mySmashingGag.addClass(‘widget’);
mySmashingGag.hide();
mySmashingGag.fadeIn(‘fast’);
</code></pre>

<h2>6.使用ID而不要使用class</h2>

<p>jQuery骨子裡其實還是JavaScript，所以不管如何速度再快也比不上原生的JavaScript快，所以如果使用ID來選取元素的話，就會使用JavaScript的原生方法 <strong>getElementByID</strong>，效能就會比較快，相反的不是使用原生方法的class效能就會比較慢</p>

<p>不要使用class</p>

<pre><code>// Selecting each item at once
for (i = 0; i &lt; 900; i++) {
    var selectedItem = $('.mySmashingItem' + i);
}
</code></pre>

<p>使用ID</p>

<pre><code>// Selecting each item at once
for (i = 0; i &lt; 900; i++) {
    var selectedItem = $('#mySmashingItem' + i);
}
</code></pre>

<h2>7.使用縮寫</h2>

<p>正常來說會這樣寫</p>

<pre><code>$(document).ready(function (){
    // your awesome code here
});
</code></pre>

<p>但其實可以這樣寫</p>

<pre><code>$(function (){
    // your awesome code here
});
</code></pre>

<h2>8.使用context</h2>

<p>當你再使用選取器(selectors)的時候，jQuery會針對整個頁面去做搜索直到找到為止，可是其實我們可以縮小範圍</p>

<p>例如原本的寫法</p>

<pre><code>$(‘.mySmashingGag’).on(‘click’, showMenu);
</code></pre>

<p>但我們可以這樣寫</p>

<pre><code>$(‘.mySmashingGag’, ‘#mySidebar’).on(‘click’, showMenu);
</code></pre>

<p>這樣他就會在ID為mySidebar去搜尋class為mySmashingGag的元素</p>

<p>這些其實不難，但都是養成正確寫jQuery的好習慣:)</p>

<p>參考資料:</p>

<p><a href="http://smashinghub.com/8-jquery-crimes-you-really-shouldnt-commit.htm" target="_blank">8 jQuery Crimes You Really Shouldn’t Commit</a></p>

<p><a href="http://blog.miniasp.com/post/2008/10/19/URL-URI-Description-and-usage-tips.aspx" target="_blank">講解 URL 結構與分享幾個相對路徑與絕對路徑的開發技巧 </a></p>

<p>內容如有錯誤，歡迎指正</p>
]]></content>
  </entry>
  
</feed>
