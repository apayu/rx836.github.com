<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Rx836]]></title>
  <link href="http://rx836.github.com/atom.xml" rel="self"/>
  <link href="http://rx836.github.com/"/>
  <updated>2012-10-21T01:33:33+08:00</updated>
  <id>http://rx836.github.com/</id>
  <author>
    <name><![CDATA[阿帕]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[[CSS3] 認識CSS3 transitions]]></title>
    <link href="http://rx836.github.com/blog/css3-transitions-guide/"/>
    <updated>2012-10-20T23:24:00+08:00</updated>
    <id>http://rx836.github.com/blog/css3-transitions-guide</id>
    <content type="html"><![CDATA[<p>一直沒有找個時間好好的了解一下CSS3 transitions，趁著看到<a href="http://www.adobe.com/devnet/html5/articles/using-css3-transitions-a-comprehensive-guide.html" target="_blank">這篇</a>文章，就來筆記一下用法，扎實一下基本功</p>

<!--more-->


<p>CSS3 transitions可以改變css屬性的值，在某個期間內做出變化，類似<a href="http://api.jquery.com/animate/" target="_blank">jQuery.animate()</a>，語法結構如下</p>

<pre><code>.example {     
    transition-property: background-color;     
    transition-duration: 2s;     
    transition-timing-function: ease-in;            
    transition-delay: 1s; 
}
</code></pre>

<p>這裡沒有特別加上prefixes，在真正使用的時候要自行加上，接著是分別講解每個屬性的用途</p>

<p><strong>transition-property:</strong> 指定你要變化的CSS屬性，至於哪些屬性是擁有transition效果可以查看<a href="http://www.w3.org/TR/css3-transitions/#animatable-properties" target="_blank">這張表</a></p>

<p><strong>transition-duration:</strong> 指定transition從開始到結束的變化時間，在數字後面加上s就是以秒計算，用ms就是微秒</p>

<p><strong>transition-timing-function:</strong> 根據時間地進行去改變屬性值的變化數率，也就是貝茲曲線，詳細的介紹可以參考<a href="http://www.w3.org/TR/css3-transitions/#transition-timing-function-property" target="_blank">這篇</a>，基本的有linear, ease-in, ease-out和ease-in-out這些值可以使用</p>

<p><strong>transition-delay:</strong> 可以指定秒或微秒來延遲transition觸發的時間</p>

<h3>Transition shorthand</h3>

<p>為了簡潔也可以這樣寫</p>

<pre><code>.example {     
    transition: background-color 2s ease-in 1s; 
} 
</code></pre>

<p>要特別注意的是，順序的重要性，另外第一個時間代表是<strong>transition-duration</strong>，第二個時間是<strong>transition-delay</strong>，如果你要定義<strong>transition-duration</strong>一定要先定義<strong>transition-duration</strong>才行</p>

<h3>Multiple transitions</h3>

<p>如果想在同個元素上定義複數個transitions，可以用下面寫法</p>

<pre><code>.example {     
    transition:  background-color  2s ease-in 1s,      
    width  2s ease-in-out,      
    height 3s ease-out; 
}
</code></pre>

<p>記得要用<strong>逗號</strong>隔開</p>

<h3>Triggering a transition</h3>

<p>但其實光寫上面那些語法並不能實現transitions，原因在於沒有<strong>觸發</strong>這個動作，所以我們可能要加些&#8221;動作&#8221;，例如比較常見的是<strong>:hover</strong></p>

<pre><code>.example {     
    background-color: green;     
    transition: background-color  2s ease-in 1s; 
    width:100px;
    height:100px;  
} 
.example:hover {     
    background-color: blue 
}
</code></pre>

<p><a href="http://jsfiddle.net/Pa5Uk/1/" target="_blank">範例</a></p>

<p>會看到將滑鼠移到div .example上面，會先等一秒以後，再花兩秒的時間從綠色轉換成藍色</p>

<h3>Transitions triggered by JavaScript</h3>

<p>假如要搭配JavaScript呢？我們可以使用jQuery來示範一下</p>

<p>css</p>

<pre><code>.example {     
    background-color: green;     
    transition: background-color  2s ease-in 1s;
    width:100px;
    height:100px;  
}
.style-change {     
    background-color: blue
}
</code></pre>

<p>html</p>

<pre><code>&lt;div id="a" class="example"&gt;&lt;/div&gt;
</code></pre>

<p>js</p>

<pre><code>$("#a").click(function() {         
    $(".example").toggleClass("style-change");    
}); 
</code></pre>

<p><a href="http://jsfiddle.net/Rnebd/" target="_blank">範例</a></p>

<p>這樣就可以搭配著js來使用transition的效果</p>

<h3>Transition tricks and techniques</h3>

<p>有了前面的一些基本用法以外，接下來介紹的是一些小技巧，前面的<strong>:hover</strong>例子不管是從綠色切換成藍色，還是藍色切換回綠色，都是同樣的效果和速度，但其實可以針對這兩者去做變化，例如</p>

<pre><code>.example {     
    background-color: green;     
    transition: background-color  1s ease-out;
    width:100px;
    height:100px;    
}
.example:hover {     
    background-color: blue;
    transition: background-color  5s linear;
}
</code></pre>

<p>這段意思是從綠色到藍色要花一秒的時間，但從藍色變回綠色要花五秒，就可以做出比較不一樣的效果</p>

<pre><code>.example {     
    width: 100px;     
    height: 100px;     
    background-color: blue;     
    transition: width 0s ease-out 999999s,                 
    height 0s ease-out 999999s; } 

.example:active {     
    width: 200px;     
    height: 200px;     
    transition: width 2s,                 
    height 2s; 
}
</code></pre>

<p>當然也可以把transition-delay設為999999s，這樣就可以將效果一直保存</p>

<p>只是我目前還不知道這樣的保存可以用來做啥就是了&#8230;</p>

<p>參考資料:</p>

<p><a href="http://www.adobe.com/devnet/html5/articles/using-css3-transitions-a-comprehensive-guide.html" target="_blank">Using CSS3 transitions: A comprehensive guide</a></p>

<p><a href="http://www.w3cplus.com/content/css3-transition" target="_blank">CSS3 Transition</a></p>

<p>內容如有錯誤，歡迎指正</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[JavaScript] 如何保留重複參數的函式，不必每次傳遞-Currying]]></title>
    <link href="http://rx836.github.com/blog/javascript-currying/"/>
    <updated>2012-10-18T00:01:00+08:00</updated>
    <id>http://rx836.github.com/blog/javascript-currying</id>
    <content type="html"><![CDATA[<p>有時候我們呼叫某個函式，傳入的參數大多數都是一樣，那我們就可以嘗試保留那些重複的參數，而這個過程就是Currying(Curry化)</p>

<!--more-->


<p>Curry這個命名是一個來自<a href="http://en.wikipedia.org/wiki/Haskell_Curry" target="_blank">Haskell Curry</a>的數學家的名字所命名，Currying是一種轉換過程，至於該怎麼轉換，後面會跟著介紹，我們先來看看以下這段程式碼</p>

<pre><code>function m(x, y){
    return x * y;
}
</code></pre>

<p>這是一段很普通的函式，傳入參數x和y以後做相乘，並且將結果回傳，可是假如有一個情況是，x參數是固定的，y值是動態的，那我們每次呼叫會怎麼做呢？</p>

<pre><code>m(2,1);
m(2,2);
m(2,3);
m(2,4);
...
</code></pre>

<p>這樣看起來雖然不太好，但尚且還可以接受，但如果函式的參數不止兩個呢？</p>

<pre><code>function m(x, y, z, p, k, l){
    return x * y * z * p * k * l;
}
</code></pre>

<p>然後呼叫的時候，只有l參數變動，其他參數每次都固定&#8230;</p>

<pre><code>m(2,3,4,5,6,1);
m(2,3,4,5,6,2);
m(2,3,4,5,6,3);
m(2,3,4,5,6,4);
...
</code></pre>

<p>這時候就會覺得，一定有什麼方法可以更簡化，少打更多的code，這時候就要將函式進行Currying，首先我們要先寫一個泛用的Currying函式</p>

<pre><code>function currying(fn){
    var slice = Array.prototype.slice,
        stored_args = slice.call(arguments, 1);
    return function(){
        var new_args = slice.call(arguments),
            args = stored_args.concat(new_args);
        return fn.apply(null, args);
    };
}
</code></pre>

<p>然後接著寫</p>

<pre><code>function m(x, y){
    return x * y;
}

var new_m = currying(m, 5)​;
new_m(4);
new_m(5);
new_m(6);
</code></pre>

<p>這樣y值不管傳什麼，x值一樣都保持固定的5，程式有點複雜，現在我們就來看看吧，首先來看看變數slice和stored_args分別是什麼</p>

<pre><code>function currying(fn){
    var slice = Array.prototype.slice,
        stored_args = slice.call(arguments, 1);
    console.log(slice); //function slice() { [native code] }        
    console.log(stored_args); // [5]        
}

function m(x, y){
    return x * y;
}

currying(m, 5);​
</code></pre>

<p>我們可以看到，變數slice存放<a href="http://www.w3school.com.cn/js/jsref_slice_string.asp" target="_blank">slice()</a>方法，因為我們想要將傳進來的參數轉換成陣列，並且將第一個參數去掉(這裡指的第一個參數就是m())，所以最後只剩下一個5的陣列</p>

<pre><code>console.log(stored_args); // [5]
</code></pre>

<p>接著後面會return一個函式，函式將會重複的參數存在裡面，等於回傳一個新的函式讓User使用，從console.log可以看到變數new_args和args</p>

<pre><code>function currying(fn){
    var slice = Array.prototype.slice,
        stored_args = slice.call(arguments, 1);
    return function(){
        var new_args = slice.call(arguments),
            args = stored_args.concat(new_args);
        console.log(new_args);//[4] 
        console.log(args);//[5, 4] 
        return fn.apply(null, args);
    };
}

function m(x, y){
    return x * y;
}

var new_m = currying(m, 5);
new_m(4)
</code></pre>

<p>​
回傳的函式會放在變數new_m，而這個函式到底在做些甚麼呢？其實就是將新得到的參數(也就是從new_m(4)傳進來的那個4)取出，接著利用concat將新參數和舊參數合在一起，再將合在一起後的參數([5, 4])丟進當初m()這個函式裡面，達成原本要相乘的任務，這樣當函式的參數一多，重複性高時，就可以做優化，例如就如同類似之前提到的y、z、k皆為重覆值，x值為動態</p>

<pre><code>function currying(fn){
    var slice = Array.prototype.slice,
        stored_args = slice.call(arguments, 1);
    return function(){
        var new_args = slice.call(arguments),
            args = stored_args.concat(new_args);
        return fn.apply(null, args);
    };
}

function m(x, y, z, k){
    return x * y * z * k;
}

var new_m = currying(m, 5, 6, 7)​;
new_m(4);
new_m(5);
new_m(6);
</code></pre>

<p>重複的事情被取代了，這樣程式碼是不是看起來優化了呢？</p>

<p>參考資料:</p>

<p><a href="http://www.books.com.tw/exep/prod/booksfile.php?item=0010538538" target="_blank">JavaScript 設計模式</a></p>

<p>內容如有錯誤，歡迎指正</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[PhoneGap] 第一次開發PhoneGap教學筆記]]></title>
    <link href="http://rx836.github.com/blog/phonegap-first/"/>
    <updated>2012-10-10T22:39:00+08:00</updated>
    <id>http://rx836.github.com/blog/phonegap-first</id>
    <content type="html"><![CDATA[<p>很早很早以前曾經摸過一下Android，還曾想過要走開發手機這條路，但最後還是繼續寫著網頁，不知道選擇對不對，不過至少現在可以用寫網頁的方式做出APP，那就是利用已經出很久的PhoneGap，但到今天才真正的開始學習他，在這邊也會開始慢慢記錄一些有關於PhoneGap的心得</p>

<!--more-->


<p>網路上已經有很多很多的觀念與介紹，所以這邊就不在多述，要開始之前請先安裝<a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html" target="_blank">Java 開發工具包( Java Development Kit , JDK )</a>，建議大家下載JDK6</p>

<p><img src="https://lh3.googleusercontent.com/-O98JK3DRzHM/UHWWC5uq4QI/AAAAAAAABtY/ABoTETFnIJo/s538/1.png" /></p>

<p>安裝好以後接著就下載並安裝<a href="http://www.eclipse.org/downloads/" target="_blanl">Eclipse</a>，Eclipse是一個IDE，一個整合開發環境，類似Microsoft Visual Studio，因為Android官方並沒有推出專屬的手機應用程式開發軟體，但有支援 Eclipse 的官方外掛開發套件</p>

<p><img src="https://lh6.googleusercontent.com/-vDbyAlgXX8M/UHWWDDRPM3I/AAAAAAAABtg/nsLxVsp43L0/s731/2.png" /></p>

<p>以上的安裝和設定過程，都可以參考<a href="http://blog.chinatimes.com/tomsun/archive/2011/11/08/1029787.html" target="_blank">[Android 教學] Android 4.0 SDK 下載安裝中文教學課程講義</a></p>

<p>接著就是下載本篇主角<a href="http://www.phonegap.com/download" target="_blank">PhoneGap</a>，下載以後進行解壓縮</p>

<p>但其實PhoneGap官方網站有詳細的<a href="http://docs.phonegap.com/en/2.1.0/guide_getting-started_android_index.md.html#Getting%20Started%20with%20Android" target="_blank">入門教學</a>，這裏我就直接按照他的步驟敘述</p>

<p>1.首先開啟Eclipse，選擇<strong>New Project</strong></p>

<p>2.選擇new一個<strong>Android Application Project</strong></p>

<p>3.輸入<strong>Application Name</strong>、<strong>Project Name</strong>和<strong>Package Name</strong></p>

<p>4.設定應用程式icon</p>

<p>5.建立一個<strong>Blank Activity</strong></p>

<p>6.在你的Android專案裡面建立新的目錄，分別是</p>

<pre><code>/libs
assets/www
</code></pre>

<p>7.從剛剛下載的PhoneGap的資料夾裡面，找到<strong>lib/android/</strong>，並且複製<strong>cordova-2.0.0.js</strong>到<strong>assets/www</strong>資料夾底下</p>

<p>8.複製<strong>cordova-2.0.0.jar</strong>到<strong>/libs</strong>底下</p>

<p>9.複製整個<strong>xml</strong>這個資料夾到Android專案底下的<strong>/res</strong>資料夾</p>

<p>10.針對剛剛的<strong>cordova-2.0.0.jar</strong>檔案按下右鍵，選擇<strong>Build Paths/ > Configure Build Path</strong>，切換到Libraries這個頁籤，將<strong>cordova-2.0.0.jar</strong>加入到裡面</p>

<p>11.找到<strong>src</strong>資料夾底下，副檔名為java的檔案並且開啟編輯他</p>

<p>增加<strong>import org.apache.cordova.*;</strong>這行程式</p>

<p>修改class&#8217;s extend從Activity改成DroidGap</p>

<p>將<strong>setContentView()</strong>這行取代成<strong>super.loadUrl(&#8220;file:///android_asset/www/index.html&#8221;);</strong></p>

<p>12.接著點擊<strong>AndroidManifest.xml</strong>選擇<strong>Open With > Text Editor</strong></p>

<p>13.將以下程式加到<strong>&lt;uses-sdk&#8230;/></strong>和<strong>&lt;application&#8230;/></strong>tags之間</p>

<pre><code>&lt;supports-screens 
android:largeScreens="true" 
android:normalScreens="true" 
android:smallScreens="true" 
android:resizeable="true" 
android:anyDensity="true" /&gt;
&lt;uses-permission android:name="android.permission.VIBRATE" /&gt;
&lt;uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" /&gt;
&lt;uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" /&gt;
&lt;uses-permission android:name="android.permission.ACCESS_LOCATION_EXTRA_COMMANDS" /&gt;
&lt;uses-permission android:name="android.permission.READ_PHONE_STATE" /&gt;
&lt;uses-permission android:name="android.permission.INTERNET" /&gt;
&lt;uses-permission android:name="android.permission.RECEIVE_SMS" /&gt;
&lt;uses-permission android:name="android.permission.RECORD_AUDIO" /&gt;
&lt;uses-permission android:name="android.permission.MODIFY_AUDIO_SETTINGS" /&gt;
&lt;uses-permission android:name="android.permission.READ_CONTACTS" /&gt;
&lt;uses-permission android:name="android.permission.WRITE_CONTACTS" /&gt;
&lt;uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" /&gt;
&lt;uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" /&gt; 
&lt;uses-permission android:name="android.permission.GET_ACCOUNTS" /&gt;
&lt;uses-permission android:name="android.permission.BROADCAST_STICKY" /&gt;
</code></pre>

<p>14.將以下程式加到<strong>&lt;activity../></strong>這個tag裡面</p>

<pre><code>android:configChanges="orientation|keyboardHidden|keyboard|screenSize|locale"
</code></pre>

<p>15.新增一個<strong>index.html</strong>到<strong>assets/www</strong>資料夾底下，裡面的html碼為</p>

<pre><code>&lt;!DOCTYPE HTML&gt;
&lt;html&gt;
&lt;head&gt;
&lt;title&gt;Cordova&lt;/title&gt;
&lt;script type="text/javascript" charset="utf-8" src="cordova-1.9.0.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;h1&gt;Hello World&lt;/h1&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>接下來就可以點擊專案名稱右鍵，選擇<strong>Run As > Android Application</strong>，開始看結果囉！</p>

<p>假如你沒有AVD可以看<a href="http://blog.chinatimes.com/tomsun/archive/2011/11/24/1054452.html" target="_blank">這篇</a>教學怎麼設定AVD</p>

<p>這樣index.html裡面就是你的Android應用程式的內容了，可以用你熟悉的html+css+js來開發手機應用程式</p>

<p>參考資料:</p>

<p><a href="http://cire.pixnet.net/blog/post/37927775-%5B%E7%AD%86%E8%A8%98%5D--%E7%AC%AC%E4%B8%80%E6%AC%A1%E9%96%8B%E7%99%BC-android-%E7%89%88%E6%9C%AC-phonegap--%2B-jquery-" target="_blank">[筆記] 第一次開發 Android 版本 PhoneGap + JQuery Mobile 就上手</a></p>

<p><a href="http://docs.phonegap.com/en/2.1.0/guide_getting-started_android_index.md.html#Getting%20Started%20with%20Android" target="_blank">Getting Started with Android</a></p>

<p><a href="http://www.eclipse.org/" target="_blank">eclipse</a></p>

<p><a href="http://blog.chinatimes.com/tomsun/archive/2011/11/08/1029787.html" target="_blank">[Android 教學] Android 4.0 SDK 下載安裝中文教學課程講義</a></p>

<p><a href="http://blog.chinatimes.com/tomsun/archive/2011/11/24/1054452.html" target="_blank">[Android 教學] Android 4.0 模擬器安裝設定教學課程講義</a></p>

<p>內容如有錯誤，歡迎指正</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Win8] 入門要學說Hello world]]></title>
    <link href="http://rx836.github.com/blog/first-win8-app/"/>
    <updated>2012-10-08T17:06:00+08:00</updated>
    <id>http://rx836.github.com/blog/first-win8-app</id>
    <content type="html"><![CDATA[<p>最近正在練習開發Win8 App，雖然微軟提供的開發途徑很多，例如C#、C++等，但因為自己對JavaScript比較有興趣，而且微軟也提供利用HTML+JavaScript+CSS就可以開發出Win8 APP，所以就決定朝這個方向前進，因為是第一次開發Win8 APP，想當然要先做出一個Hello world來試試看</p>

<!--more-->


<p>要開發Win8 APP，必須先下載工具，直接到微軟官網下載<a href="http://www.microsoft.com/visualstudio/cht/downloads" target="_blank">Visual Studio Express 2012 for Windows 8</a>，安裝完以後，打開就會問你是否需要開發人員授權，輸入帳號密碼，就可以擁有開發人員的帳號</p>

<p>打開Visual Studio Express 2012(以下簡稱VS 2012)，就會看到以下畫面</p>

<p><img src="https://lh4.googleusercontent.com/-iLMiTXNLEaM/UHKuEKHOTHI/AAAAAAAABsY/DLqeu2umA-M/s786/p1.png" /></p>

<p>接著選【檔案】-> 【新增專案】，就會出現以下的畫面</p>

<p><img src="https://lh4.googleusercontent.com/-SeFZ08v5dSo/UHKuEndFXlI/AAAAAAAABsc/OKsOpJp0zic/s787/p2.png" /></p>

<p>然後選擇【已安裝的】->【範本】->【JavaScript】->【Windows市集】->【空白應用程式】，接著在專案名稱裡面取名為MyHelloWorld，按下確定</p>

<p><img src="https://lh5.googleusercontent.com/-EdDsceusOP8/UHKuEz1w-iI/AAAAAAAABsg/49aDvnhF7Ug/s786/p3.png" /></p>

<p>建立好專案以後，會看到VS 2012已經預設建立好一些檔案，例如像package.appxmanifest資訊清單檔案，主要描述應用程式名稱、介紹、啟動顯示畫面，還有logo.png 和 smalllogo.png分別為大的和小的標誌影像，還有代表市集中的影像storelogo.png，和應用程式啟動時顯示的畫面splashscreen.png</p>

<p>其他就是預設的css和js和應用程式啟動時執行的起始頁default.html</p>

<p>按下ctrl+F5啟動應用程式</p>

<p><img src="https://lh3.googleusercontent.com/-T-_lt_kQehI/UHKuFtbyMpI/AAAAAAAABso/zTQWUiOUyWg/s745/p4.png" /></p>

<p>上面那張圖就是剛剛所提到的啟動顯示畫面圖splashscreen.png</p>

<p>顯示畫面完以後就是主要的APP內容</p>

<p><img src="https://lh3.googleusercontent.com/-7d-UacNm56o/UHKuF2WBmYI/AAAAAAAABss/xQwqzgpJwVI/s745/p5.png" /></p>

<p>default.html長這樣</p>

<pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta charset="utf-8" /&gt;
&lt;title&gt;HelloWorld&lt;/title&gt;

&lt;!-- WinJS 參考 --&gt;
&lt;link href="http://rx836.github.com//Microsoft.WinJS.1.0.RC/css/ui-dark.css" rel="stylesheet" /&gt;
&lt;script src="http://rx836.github.com//Microsoft.WinJS.1.0.RC/js/base.js"&gt;&lt;/script&gt;
&lt;script src="http://rx836.github.com//Microsoft.WinJS.1.0.RC/js/ui.js"&gt;&lt;/script&gt;

&lt;!-- HelloWorld 參考 --&gt;
&lt;link href="http://rx836.github.com/css/default.css" rel="stylesheet" /&gt;
&lt;script src="http://rx836.github.com/js/default.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;p&gt;內容在此處出現&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>對於網頁開發者來說一點都不陌生，這也是Win8 APP主打的賣點，接著我們開始來修改一下內容</p>

<pre><code>&lt;body&gt;
&lt;h1&gt;Hello, world!&lt;/h1&gt;
&lt;p&gt;What's your name?&lt;/p&gt;
&lt;input id="nameInput" type="text" /&gt;
&lt;button id="helloButton"&gt;Say "Hello"&lt;/button&gt;
&lt;div id="greetingOutput"&gt;&lt;/div&gt;
&lt;/body&gt;
</code></pre>

<p>在body裡面加上這些html，按下ctrl+f5執行，會發現有文字有按鈕，但還沒有反應，所以接下來就是重頭戲部分，建立事件處理常式，不過建立之前先來看看default.js裡面有些甚麼</p>

<pre><code>(function () {
    "use strict";

     // Omitted code 

 })(); 
</code></pre>

<p>預設是將js程式碼包裝在自我執行的匿名函式，有用jQuery的人應該不陌生，主要避免命名衝突或避免意外修改到不想修改的值，use strict代表開啟<a href="http://msdn.microsoft.com/zh-tw/library/windows/apps/br230269.aspx" target="_blank">strict 模式</a></p>

<p>其餘的程式碼就是APP的事件監控，但目前還用不到，現在我們會看到default.js裡面有個<em>app.start</em>，首先在他前面先建立一個click事件</p>

<pre><code>function buttonClickHandler(eventInfo) {
    var userName = document.getElementById("nameInput").value;
    var greetingString = "Hello, " + userName + "!";
    document.getElementById("greetingOutput").innerText = greetingString; 
}
</code></pre>

<p>看起來都跟平常寫網頁的方式都一樣，但建立好事件以後要在哪個時間點註冊這個事件呢？答案就是應用程式啟動時</p>

<pre><code>var app = WinJS.Application;
var activation = Windows.ApplicationModel.Activation;
WinJS.strictProcessing();

app.onactivated = function (args) {
    if (args.detail.kind === activation.ActivationKind.launch) {
        if (args.detail.previousExecutionState !== activation.ApplicationExecutionState.terminated) {
            // TODO: This application has been newly launched. Initialize
            // your application here.
        } else {
            // TODO: This application has been reactivated from suspension.
            // Restore application state here.
        }
        args.setPromise(WinJS.UI.processAll());           
    }
};
</code></pre>

<p>微軟都已經把Win8 APP許多的事件都已經處理好，我們只要用他的事件處理常式即可，像<strong>app.onactivated </strong>就是應用程式啟動時會觸發的事件，不過裡面其實還有分<strong>第一次啟用</strong>還是<strong>已經啟動但因為擱置而重新啟用</strong>，不過在這裡我們也先暫時不用管是甚麼時候啟用，因為不管如何我們都要註冊點擊這個事件</p>

<pre><code>    app.onactivated = function (args) {
    if (args.detail.kind === activation.ActivationKind.launch) {
        if (args.detail.previousExecutionState !== activation.ApplicationExecutionState.terminated) {
            // TODO: This application has been newly launched. Initialize
            // your application here.
        } else {
            // TODO: This application has been reactivated from suspension.
            // Restore application state here.
        }
        args.setPromise(WinJS.UI.processAll());

        // Retrieve the button and register our event handler. 
        var helloButton = document.getElementById("helloButton");
        helloButton.addEventListener("click", buttonClickHandler, false);

    }
};
</code></pre>

<p>所以會看到我將點擊事件寫在<strong>args.setPromise(WinJS.UI.processAll())</strong>後面，接著一樣按下ctrl+f5，在對話框中輸入名字，就會出現問候語了</p>

<p><img src="https://lh4.googleusercontent.com/-_NE7vhIsN-w/UHKuGaUHX-I/AAAAAAAABs8/K9SVwBzKgFo/s744/p6.png" /></p>

<p>完成囉！等等，為什麼你的畫面看起來是白色的？大家回去看看default.html有先引用一個CSS檔案進來</p>

<pre><code>&lt;link href="http://rx836.github.com//Microsoft.WinJS.1.0.RC/css/ui-dark.css" rel="stylesheet" /&gt;
</code></pre>

<p>只要將它改成</p>

<pre><code>&lt;link href="http://rx836.github.com//Microsoft.WinJS.1.0.RC/css/ui-light.css" rel="stylesheet" /&gt;
</code></pre>

<p>背景就會變成白色的囉！當然這個是官方提供的預設樣式表，文件上是建議用預設的樣式表為基礎去做客製化修改，至於怎麼修改就看大家的APP風格了</p>

<p>官方建議如果是大量的影像或圖片，建議用深色系的css，如果是文字居多，建議用淺色系的css</p>

<p>參考資料:</p>

<p><a href="http://msdn.microsoft.com/zh-tw/library/windows/apps/hh986964.aspx" target="_blank">建立 &#8220;Hello, world&#8221; 應用程式</a></p>

<p>內容如有錯誤，歡迎指正</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[學習筆記] 創意與提案]]></title>
    <link href="http://rx836.github.com/blog/note-marketing/"/>
    <updated>2012-10-04T18:47:00+08:00</updated>
    <id>http://rx836.github.com/blog/note-marketing</id>
    <content type="html"><![CDATA[<p>前天公司內部教育訓練，請來Migo的行銷總監<a href="http://rexismtw.blogspot.tw/" target="_blank">Rex Pai</a>講師為我們上課，談從創意、到提案還有談行銷習慣，希望能整理自己的思緒，讓自己吸收更多</p>

<!--more-->


<p>再開始之前，先問自己兩個問題</p>

<h3>你現在提案的架構是甚麼？</h3>

<h3>你覺得甚麼地方最難？</h3>

<p>Rex提到，一個頂尖的行銷人永遠都不會忘記<strong>問自己的問題</strong>，然而一份好的提案，該從甚麼地方開始？</p>

<h2>客戶需求</h2>

<p>什麼樣的標準叫做了解客戶需求？ Rex覺得，真正的了解客戶需求就是</p>

<h3>你是不是能看到客戶沒想到的但又該做的事情？</h3>

<p>或是</p>

<h3>你是不是能用提案帶著客戶了解市場趨勢？</h3>

<p>已故蘋果電腦創辦人-Steve Jobs 曾經說過</p>

<h3>「站起來，站在客戶的頭上，看看他還需要什麼？看到了，你就不必卑躬屈膝，你就能好好把事情做好。」</h3>

<p>現今大部分的行銷人員，多半站在客戶的同一條水平上看事情，甚至有時候比客戶還低一些，但如果能站在客戶的頭上看事情，看的更多更遠，展現出專業的能力讓客戶信服，我想提案一定可以更順利</p>

<h2>提案架構</h2>

<p>早期的提案架構為AIDMA</p>

<p><img src="https://lh5.googleusercontent.com/-9nljFVfaAH8/UG6Ex6Hnk3I/AAAAAAAABqw/FOqIxscE4AU/s420/%E5%9C%96%E7%89%871.png" /></p>

<p>分別是引起興趣(Attention)、產生興趣(Interest)、激發慾望(Desire)、強化記憶(Memory)、促使行動(Action)</p>

<p>到了中期，因為網路的快速成長，包括Web site、SEOLPO、SEM、EC、Blog 、Forum、WOM大量的興起，所以提案架構紛紛朝向AISAS</p>

<p><img src="https://lh4.googleusercontent.com/-UmJNJlEC4Q0/UG6F1U2oxWI/AAAAAAAABq4/oZgt0ZBPaJM/s404/%E5%9C%96%E7%89%872.png" /></p>

<p>可以看到網路興起以後，利用廣告吸引消費者注意，消費者都會先去網路上google商品，來決定要不要購買此商品，買了以後有些消費者會更進一步做分享(例如開箱文)，這些分享的資訊又回到網路上供大眾搜尋，達到循環的效果</p>

<p>但到了現在，新的行銷架構則稍微複雜了些</p>

<p><img src="https://lh6.googleusercontent.com/-GlyIWk9SsB4/UG6G-PyXnhI/AAAAAAAABrA/3RIiuJbF0VE/s480/%E5%9C%96%E7%89%873.png" /></p>

<p>最主要多了<strong>體驗</strong>和<strong>熱情</strong>，Rex就舉了海尼根的測字活動，讓網友體驗並且激發熱情，而不是只單單強調海尼根有多好喝，有了熱情，就會激發消費者與身邊的人分享，就如下圖所示</p>

<p><img src="https://lh3.googleusercontent.com/--wJ4Piz76FI/UG6H02CTjII/AAAAAAAABrI/926sAJJIBQk/s648/%E5%9C%96%E7%89%874.png" /></p>

<h2>產業現況</h2>

<p>當然，身為一個行銷人員，一定要很清楚的了解自身的產業狀況，才能給客戶最好的策略和建議，以下是一些數據圖表分析</p>

<p><img src="https://lh4.googleusercontent.com/-BVEbyfs4NT4/UG6IoS9X5eI/AAAAAAAABrQ/Hv4Cl3zORQg/s885/%E5%9C%96%E7%89%875.png" /></p>

<p>從圖表中可知Internet的崛起，影響最深的是紙本媒體，例如雜誌或報紙，有趣的是TV和Radio反而不受什麼影響，從這裡可以知道現代人的生活習慣，還是脫離不了電視和收音機</p>

<p><img src="https://lh6.googleusercontent.com/-rkQZb0Y0su8/UG6IpiylywI/AAAAAAAABrc/d0MYEKGOezs/s1021/%E5%9C%96%E7%89%876.jpg" /></p>

<p>這張圖表對廣告媒體來說，可說是個好消息，一般認為台灣的經濟一年比一年惡劣，但企業對於廣告的預算卻不減反增，這裡值得注意的是，<strong>口碑行銷</strong>正逐年成長當中</p>

<p><img src="https://lh4.googleusercontent.com/-1FCtMXkR_Ig/UG6IqLz1huI/AAAAAAAABrs/-JTRuY4tdX8/s1021/%E5%9C%96%E7%89%877.jpg" /></p>

<p>上圖看到，口碑行銷的興起，壓縮到的是關鍵字廣告，至於網站廣告反而沒甚麼影響</p>

<p><img src="https://lh5.googleusercontent.com/-QNHFlVdPtjc/UG6IqaiEvvI/AAAAAAAABro/Ns-bX9Jp-Sk/s1020/%E5%9C%96%E7%89%879.jpg" /></p>

<p>最有趣的大概就是這張圖了，粉紅色的圓柱代表是2010企業預估要花費的廣告預算金額，黃色是2010真正花的金額，有發現為什麼關鍵字廣告反而比預估的少嗎？Rex說多數企業面臨到的問題是，台灣目前的關鍵字廣告成效都不怎麼好，目前能提出好的關鍵字策略公司並不多，但這也代表著進步空間更大</p>

<h2>案例分享</h2>

<iframe width="560" height="315" src="http://www.youtube.com/embed/WMWu1h_6OfE" frameborder="0" allowfullscreen></iframe>


<p>上面那段影片是BMW的廣告，活動一開始在城市的中間會擺一台虛擬的Mini，參賽者必須先下載專屬的APP，然後持著手機去接近那台Mini，靠近50公尺以內就會收到你的手機裡面，這時候你就必須不停的跑不停的移動，持續一個禮拜，一個禮拜過後，誰能掌握這台Mini，就可以贏得一台車，但如果有人靠近你在50公尺內，很抱歉，車子就被人家收走啦，而重點是，要是網路斷電或手機沒電，車子就會留在原地等著別人拿走，具優勝者表示，他為了這台車過了一個禮拜無法想像的生活，他再也不參加了XD</p>

<p>而這個活動也吸引了將近兩萬多人參與，並且為BMW帶來了高達25%的銷售成長！</p>

<p>參考資料:</p>

<p><a href="http://rexismtw.blogspot.tw/" target="_blank">Rex Pai</a></p>

<p>內容如有錯誤，歡迎指正</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[jQuery] Facebook XXX hours ago的時間生成]]></title>
    <link href="http://rx836.github.com/blog/jquery-plugin-timeago/"/>
    <updated>2012-10-03T01:36:00+08:00</updated>
    <id>http://rx836.github.com/blog/jquery-plugin-timeago</id>
    <content type="html"><![CDATA[<p><a href="http://timeago.yarp.com/" target="_blank">timeago</a>是一套可以快速生成過去發生時間的jQuery plugin，大家應該對於Facebook文字框下方的『xxx hours ago』不會陌生，留言訊息不再只是單純的『x年x月x日 x時x分x秒』，而是可以很貼心的將時間換算給使用者知道，『喔~ 原來這則留言在幾分鐘之前』，這種對User experience來說其實是相當的加分，要實作其實也不難，網路上也有plugin可以方便使用，就趕快來看看如何做出這種效果吧！</p>

<p><img src="https://lh6.googleusercontent.com/-8eJHMArd3w0/UGxqjpAcHYI/AAAAAAAABqY/Z8lDGoeU_58/s409/1.jpg" /></p>

<!--more-->


<p>首先<a href="http://timeago.yarp.com/jquery.timeago.js" target="_blank">下載</a>timeago，和jQuery一起引用到html裡面</p>

<pre><code>&lt;script type="text/javascript" src="http://code.jquery.com/jquery-1.8.2.js"&gt;&lt;/script&gt;
&lt;script type="text/javascript" src="http://timeago.yarp.com/jquery.timeago.js"&gt;&lt;/script&gt;
</code></pre>

<p>接著是html部分</p>

<pre><code>&lt;abbr class="loaded timeago" title="when you opened the page"&gt;&lt;/abbr&gt;
</code></pre>

<p>這個plugin預設是用abbr這個元素，要搭配裡面的title，title屬性待會會存放時間資訊在裡面，接著是js部分</p>

<pre><code>$(function(){
    prepareDynamicDates();      
    $("abbr.timeago").timeago();        

    function prepareDynamicDates() {
        $('abbr.loaded').attr("title", ISODateString(new Date()));                      
    }

    function ISODateString(d){
        function pad(n){return n&lt;10 ? '0'+n : n}
         return d.getUTCFullYear()+'-'
              + pad(d.getUTCMonth()+1)+'-'
              + pad(d.getUTCDate())+'T'
              + pad(d.getUTCHours())+':'
              + pad(d.getUTCMinutes())+':'
              + pad(d.getUTCSeconds())+'Z'
    }       

});
</code></pre>

<p>要注意的一點是，要先將時間轉換成<a href="http://zh.wikipedia.org/wiki/ISO_8601" target="_blank">ISO 8601</a>，ISO 8601是一種國際標準化組織所訂的日期時間表示法，至於要怎麼轉換，網路上已經都有人寫好了，或是直接看上面範例的函式<strong>ISODateString()</strong></p>

<p>接著將轉換後的時間放到abbr這個元素的title屬性，然後使用.timeago()這個方法即可，這樣一打開網頁，就會顯示</p>

<pre><code>less than a minute ago
</code></pre>

<p>過幾分鐘後 就會顯示，</p>

<pre><code>2 minutes ago
</code></pre>

<p>代表已經過了兩分鐘，因為timeago不用重整會自動刷新時間</p>

<p>或是你可以直接看我網頁上的DEMO結果如下</p>

<p>『你開始看這篇文章在<abbr class="loaded timeago" title="when you opened the page"></abbr>』</p>

<script type="text/javascript" src="http://code.jquery.com/jquery-1.8.2.js"></script>


<script type="text/javascript" src="http://timeago.yarp.com/jquery.timeago.js"></script>


<script>
    $(function(){
        prepareDynamicDates();      
        $("abbr.timeago").timeago();        

        function prepareDynamicDates() {
            $('abbr.loaded').attr("title", ISODateString(new Date()));                      
        }

        function ISODateString(d){
            function pad(n){return n<10 ? '0'+n : n}
             return d.getUTCFullYear()+'-'
                  + pad(d.getUTCMonth()+1)+'-'
                  + pad(d.getUTCDate())+'T'
                  + pad(d.getUTCHours())+':'
                  + pad(d.getUTCMinutes())+':'
                  + pad(d.getUTCSeconds())+'Z'
        }       
        
    });
</script>


<p>假如你按F5重整就會發現又回到less than a minute ago (除非js的檔案掛掉，才不會顯示)</p>

<p>但如果是不想用現在時間開始計算，而是希望每則發文的時間開始計算呢？一樣html的部分如下</p>

<pre><code>&lt;abbr class="modified timeago" title="xxx"&gt;&lt;/abbr&gt;
</code></pre>

<p>接著是js部分</p>

<pre><code>$(function(){

    $('abbr.modified').attr("title", "2012-10-02T17:30:33Z");
    $("abbr.timeago").timeago();            

});
</code></pre>

<p>一樣就直接把當初那則發文的ISO 8601的時間丟到title，然後使用.timeago()就可以了</p>

<p>如果你想用更靈活或擴充性更大的plugin，也可以選擇另一款<a href="http://pragmaticly.github.com/smart-time-ago/" target="_blank">Smart Time Ago</a>，靈感就來自於timeago，只是功能更強大</p>

<p>參考資料:</p>

<p><a href="http://pragmaticly.github.com/smart-time-ago/" target="_blank">Smart Time Ago</a></p>

<p><a href="http://timeago.yarp.com/" target="_blank">timeago</a></p>

<p>如有錯誤，歡迎指正</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[CSS] 做網站非學不可的Twitter Bootstrap]]></title>
    <link href="http://rx836.github.com/blog/twitter-bootstrap/"/>
    <updated>2012-10-01T18:41:00+08:00</updated>
    <id>http://rx836.github.com/blog/twitter-bootstrap</id>
    <content type="html"><![CDATA[<p><a href="http://twitter.github.com/bootstrap/" target="_blank">Twitter Bootstrap</a>越來越多人在用了，當然最主要的原因就是他可以幫助網頁開發者快速的開發出，有不錯外觀的web或是mobile apps，這對於許多不擅長外觀設計的網頁工程師們(包括我)，可以說是省下不少煩惱Layout的麻煩，不僅如此，針對按鈕、表格、或是排版，Bootstrap都幫你處理的好好，只要簡單幾個步驟引入即可</p>

<!--more-->


<p>首先要先下載<a href="http://twitter.github.com/bootstrap/getting-started.html" target="_blank">Bootstrap</a>，你可以選擇compil過後的，或是選擇source版本，Bootstrap的css是用Less寫的，所以如果你想修改細節部分，可以下載source版本，一般來說直接用compiled版本即可</p>

<p>接著就會看到有三個資料夾(css &amp; js &amp; img)</p>

<p><img src="https://lh3.googleusercontent.com/-RHqEXjgftnI/UGl5vs7qyaI/AAAAAAAABoU/tKc440KDt5Y/s872/a.jpg" /></p>

<p>可以把他們全部放入你的專案裡面，但引入到html時，css和js就只要選擇有沒有壓縮過的版本就好</p>

<pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
    &lt;head&gt;  
        &lt;meta charset="UTF-8" /&gt;
        &lt;title&gt;example&lt;/title&gt;
        &lt;link href="css/bootstrap.min.css" rel="stylesheet" type="text/css"&gt;        
    &lt;/head&gt;
    &lt;body&gt;
        &lt;script src="http://code.jquery.com/jquery-latest.js"&gt;&lt;/script&gt;
        &lt;script src="js/bootstrap.min.js"&gt;&lt;/script&gt;     
    &lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>然後接下來就可以開始使用了！但請注意還是要引入jQuery喔，接下來就是介紹一些使用範例</p>

<h2>Base CSS examples</h2>

<h3>Buttons</h3>

<p>加上相對應的class以後，就可以秀出相對應的外觀，例如紅色的按鈕class預設為<strong>btn-danger</strong>，Bootstrap很貼心的讓我們不再只有單調的按鈕顏色</p>

<pre><code>&lt;button class="btn dropdown-toggle" data-toggle="dropdown"&gt;Action &lt;span class="caret"&gt;&lt;/span&gt;&lt;/button&gt; 
&lt;button class="btn btn-primary dropdown-toggle" data-toggle="dropdown"&gt;Action &lt;span class="caret"&gt;&lt;/span&gt;&lt;/button&gt; 
&lt;button class="btn btn-danger dropdown-toggle" data-toggle="dropdown"&gt;Danger &lt;span class="caret"&gt;&lt;/span&gt;&lt;/button&gt; 
&lt;button class="btn btn-warning dropdown-toggle" data-toggle="dropdown"&gt;Warning &lt;span class="caret"&gt;&lt;/span&gt;&lt;/button&gt; 
&lt;button class="btn btn-success dropdown-toggle" data-toggle="dropdown"&gt;Success &lt;span class="caret"&gt;&lt;/span&gt;&lt;/button&gt; 
&lt;button class="btn btn-info dropdown-toggle" data-toggle="dropdown"&gt;Info &lt;span class="caret"&gt;&lt;/span&gt;&lt;/button&gt; 
&lt;button class="btn btn-inverse dropdown-toggle" data-toggle="dropdown"&gt;Inverse &lt;span class="caret"&gt;&lt;/span&gt;&lt;/button&gt;
</code></pre>

<p><img src="https://lh4.googleusercontent.com/-phDQRFC7UXQ/UGnPIeFHgVI/AAAAAAAABoo/VL2VekJjEVA/s617/123.jpg" /></p>

<p>特別注意的是，按鈕旁邊有個倒三角形是用css做出來的，也同樣只要在span加一個class為caret即可</p>

<h3>Progress bars</h3>

<p>進度條只要外面包一層div給予相對的class，裡面再加一個div並且命名class為<strong>bar</strong>，<strong>width</strong>就是進度條的長度，這樣就可以用js來修改width顯示目前的進度狀況</p>

<pre><code>&lt;div class="progress progress-info" style="margin-bottom: 9px;"&gt; &lt;div class="bar" style="width: 10%"&gt;&lt;/div&gt; &lt;/div&gt; 
&lt;div class="progress progress-success" style="margin-bottom: 9px;"&gt; &lt;div class="bar" style="width: 20%"&gt;&lt;/div&gt; &lt;/div&gt; 
&lt;div class="progress progress-warning" style="margin-bottom: 9px;"&gt; &lt;div class="bar" style="width: 30%"&gt;&lt;/div&gt; &lt;/div&gt; 
&lt;div class="progress progress-danger" style="margin-bottom: 9px;"&gt; &lt;div class="bar" style="width: 40%"&gt;&lt;/div&gt; &lt;/div&gt;
</code></pre>

<p><img src="https://lh6.googleusercontent.com/-CWMKYBHmiBk/UGpPoPagCQI/AAAAAAAABo8/o7uycvmJotE/s926/123.jpg" /></p>

<p>更酷的是，bar的樣式也可以更改，而不是只有醜醜的實心bar</p>

<pre><code>&lt;div class="progress progress-striped active"&gt; 
&lt;div class="bar" style="width: 40%;"&gt;&lt;/div&gt; 
&lt;/div&gt;
</code></pre>

<p>只要修改class為<strong>progress progress-striped active</strong>，就會有條紋的進度條，而且還加上css3的animation動畫</p>

<h3>Button groups</h3>

<p>也可以將button設為一組群組，就會有群組的樣式</p>

<pre><code>&lt;div class="btn-group" style="margin: 9px 0;"&gt; 
&lt;button class="btn"&gt;Left&lt;/button&gt; 
&lt;button class="btn"&gt;Middle&lt;/button&gt; 
&lt;button class="btn"&gt;Right&lt;/button&gt; 
&lt;/div&gt;
</code></pre>

<p><img src="https://lh4.googleusercontent.com/-iCtFSRwd7UU/UGpYAp2xh6I/AAAAAAAABpQ/BVql_Jk9oto/s187/4.jpg" /></p>

<p>用一個class名為<strong>btn-group</strong>的div包住button就可以</p>

<h3>Horizontal and vertical tabs (with dropdown menus)</h3>

<p>還在煩惱下拉選單嗎?</p>

<pre><code>&lt;ul class="nav nav-tabs"&gt; 
&lt;li class="active"&gt;&lt;a href="#"&gt;Home&lt;/a&gt;&lt;/li&gt; 
&lt;li&gt;&lt;a href="#"&gt;Portfolio&lt;/a&gt;&lt;/li&gt; 
&lt;li class="dropdown"&gt; &lt;a class="dropdown-toggle" data-toggle="dropdown" href="#"&gt;Services &lt;b class="caret"&gt;&lt;/b&gt;&lt;/a&gt; 
&lt;ul class="dropdown-menu"&gt; &lt;li&gt;&lt;a href="#"&gt;Link 1&lt;/a&gt;&lt;/li&gt; 
&lt;li&gt;&lt;a href="#"&gt;Link 2&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt;
</code></pre>

<p>只要用ul li包好，並且加上相對應的class，就可以輕鬆做tab+下拉選單</p>

<p><img src="https://lh5.googleusercontent.com/-ix3_DDLLdWg/UGpZ2cBhygI/AAAAAAAABpY/wzbaSwCDMb8/s303/5.jpg" /></p>

<h3>Navigation bar component</h3>

<p>看到這邊就覺得實在太強大了&#8230;</p>

<pre><code>&lt;div class="navbar"&gt; 
    &lt;div class="navbar-inner"&gt; 
        &lt;div class="container"&gt; &lt;!-- brand class is from bootstrap.css --&gt; 
            &lt;a class="brand" href="#"&gt;My Brand&lt;/a&gt; 
            &lt;div class="nav-collapse"&gt; 
                &lt;ul class="nav"&gt; 
                    &lt;li class="active"&gt;&lt;a href="#"&gt;Home&lt;/a&gt;&lt;/li&gt; 
                    &lt;li&gt;&lt;a href="#"&gt;Services&lt;/a&gt;&lt;/li&gt; 
                    &lt;li class="dropdown"&gt; &lt;a href="#" class="dropdown-toggle" data-toggle="dropdown"&gt;Dropdown &lt;b class="caret"&gt;&lt;/b&gt;&lt;/a&gt; 
                        &lt;ul class="dropdown-menu"&gt; 
                            &lt;li&gt;&lt;a href="#"&gt;Action 1&lt;/a&gt;&lt;/li&gt; 
                            &lt;li&gt;&lt;a href="#"&gt;Action 2&lt;/a&gt;&lt;/li&gt; 
                            &lt;li class="divider"&gt;&lt;/li&gt; 
                            &lt;li class="nav-header"&gt;Header&lt;/li&gt; 
                            &lt;li&gt;&lt;a href="#"&gt;Separated action&lt;/a&gt;&lt;/li&gt; 
                        &lt;/ul&gt; 
                    &lt;/li&gt; 
                &lt;/ul&gt; 
                &lt;form class="navbar-search pull-left"&gt; 
                &lt;input type="text" class="search-query" placeholder="Search"&gt; 
                &lt;/form&gt; 
            &lt;/div&gt;&lt;!-- /.nav-collapse --&gt; 
        &lt;/div&gt; 
    &lt;/div&gt;&lt;!-- /navbar-inner --&gt; 
&lt;/div&gt;&lt;!-- /navbar --&gt;
</code></pre>

<p><img src="https://lh5.googleusercontent.com/-VBBWEKhYfzk/UGpba2H2VSI/AAAAAAAABpg/2KVa_kC0xX0/s647/6.jpg" /></p>

<h3>Using the layout and built-in grid system</h3>

<p>你也可以用他們的grid system</p>

<pre><code>&lt;div class="container"&gt; 
    &lt;div class="row"&gt; 
        &lt;div class="span4"&gt; &lt;!--content--&gt; &lt;/div&gt; 
        &lt;div class="span4"&gt; &lt;!--content--&gt; &lt;/div&gt; 
        &lt;div class="span4"&gt; &lt;!--content--&gt; &lt;/div&gt; 
    &lt;/div&gt; 
&lt;/div&gt;
</code></pre>

<p>預設是 12-column，940 pixel-centered layout</p>

<h3>Responsive design</h3>

<p>連最近很紅的responsive design也有，只要引入他們的<strong>bootstrap-responsive.css</strong>這個css檔案</p>

<h3>Typeahead example</h3>

<p>裡面也有plugin可以使用，例如下拉提示選單</p>

<pre><code>&lt;input type="text" class="span3" style="margin: 0 auto;" 
data-provide="typeahead" 
data-items="4" 
data-source='["Apples","Bananas","Cherries","Dates","Eggplants","Figs","Grapes", "Honeydew","Kiwi","Mango","Peaches","Plums","Raspberries","Strawberries","Watermelon","Zucchini"]'&gt;
</code></pre>

<p><img src="https://lh6.googleusercontent.com/-y8ELDPfXQp4/UGpdfcl99uI/AAAAAAAABpo/A_l1HiZDL2I/s223/7.jpg" /></p>

<p>還有很多使用範例，可以直接去<a href="http://twitter.github.com/bootstrap/index.html" target="_blank">官網看</a>，這樣大概看了一下教學範例，一個網站可能需要的元素，Bootstrap幾乎通通都有，網頁開發人員可以更專注在開發網頁這個事情上面</p>

<p>只是不知道，會不會到後來，大家的網站都長得很像:)</p>

<p>參考資料:</p>

<p><a href="http://www.adobe.com/devnet/html5/articles/twitter-bootstrap.html" target="_blank">Styling your apps with Twitter Bootstrap </a></p>

<p><a href="http://www.w3resource.com/twitter-bootstrap/tutorial.php" target="_blank">Twitter Bootstrap tutorial</a></p>

<p><a href="http://twitter.github.com/bootstrap/index.html" target="_blank">Twitter Bootstrap</a></p>

<p>如有錯誤，歡迎指正</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[學習筆記] 透過實體活動來學習《設計與思考》]]></title>
    <link href="http://rx836.github.com/blog/design-thinking/"/>
    <updated>2012-09-26T00:50:00+08:00</updated>
    <id>http://rx836.github.com/blog/design-thinking</id>
    <content type="html"><![CDATA[<p><strong>Design Thinking</strong>算是我今年才接觸到的新觀念，起初我認為這是一個在探討如何讓外觀看起來更棒，讓使用者的體驗更佳的做法，但直到看過影片之後，我才知道原來並不是這麼一回事，整個想傳達的理念也不如我想的那樣</p>

<!--more-->


<p>下面的影片是《設計與思考》的前導預告片</p>

<iframe width="853" height="480" src="http://www.youtube.com/embed/fR9wMJXFIE8?rel=0" frameborder="0" allowfullscreen></iframe>


<p>看完影片可以知道，強調《設計與思考》的設計並不是一個外觀，他是一種工具，要讓我們先思考問題，去探索問題，並且利用設計去解決問題</p>

<p>他是一種循環，必須不斷的重複尋找問題，了解需求，並且重複的修正，這讓不管是從行銷，設計，甚至是創業也好，都可以運用這個精神來面對</p>

<p>今天剛好也很幸運的，有這個機會參加《精實創業》讀書會，讓Leo老師帶來的Workshop，使我體驗了所謂的設計與思考，讓我收穫非常的多，以下記錄整個過程</p>

<h3>1.訪談</h3>

<p>首先必須透過訪談，先挖掘對方的需求，要多問<strong>為什麼</strong>，嘗試挖掘出自己不曾想過的問題</p>

<h3>2.再更深入訪談</h3>

<p>透過剛剛的訪談，再針對雙方有興趣的主題，繼續深入問下去，試圖找出心裡最深處的聲音</p>

<h3>3.整理筆記</h3>

<p>先整理需求，並且將需求重新解讀為洞見，這個洞見就是一個很深層的需求，或是以前從沒想過的</p>

<h3>4.界定題目</h3>

<p>利用剛剛整理出來的洞見，再去除掉其他雜音(想法)，將它化做一句完整的句子</p>

<p>例如xxx需要一個方法來XXXX(需求)，因為在他的世界裡，XXXXXXX(洞見)</p>

<p>所以舉例來說，老人需要一個方法來<strong>解決孤單</strong>((需求)，因為在他的世界裡，<strong>是沒有人可以一直陪伴著他講話</strong>(洞見)</p>

<h3>5.提出不一樣的點子</h3>

<p>提出不一樣的點子，來解決這個問題，提越多越好，越瘋狂越好，並且必須要用繪畫的方式呈現</p>

<h3>6.分享你的點子&amp;收集回饋</h3>

<p>找個人分享你的點子，但千萬別銷售點子，只做分享，但要記錄對方給你的回饋意見</p>

<h3>7.你的新點子</h3>

<p>根據剛剛回饋的意見，修正自己的點子，讓它更好！</p>

<h3>8.估價點子建置預算</h3>

<p>用認知估算，粗估這個點子大概要花多少錢，不用算很精準</p>

<p>大概的流程圖如下:
<img src="https://lh4.googleusercontent.com/-ZQqVXZv7LAQ/UGMwK7zdK_I/AAAAAAAABoA/0mbOMtNzTo8/s505/a.jpg"  /></p>

<p>整個流程做下來，其實我們就是在做<strong>設計與思考</strong>這件事情，透過訪談去了解需求，並且針對需求去整理出真正的問題，再依據這個問題去想解決的<strong>點子</strong>，然後分享得到<strong>回饋</strong>，再進一步的<strong>修正</strong>，而最後估價的部分，是為了要可以對照第二個階段，也就是<strong>實驗設計假設</strong>而先做的部分，以下是第二階段</p>

<h2>實驗設計假設</h2>

<h3>1.重新定義實驗設計假設</h3>

<p>請將剛剛的點子，重新寫下來，並且用一句話來表達，句子的內容必須是:</p>

<p>『點子xxxx可以解決xxxxx(使用者)的問題是xxxxxx』</p>

<p>所以例如說:</p>

<p>點子【竹蜻蜓】可以解決【上班族】的問題是【塞車通勤】</p>

<h3>2.使用者是誰</h3>

<p>將使用者畫出來，越具體越好</p>

<h3>3.甚麼時候會發生這個問題</h3>

<p>一樣畫出剛剛那個問題發生時使用者會遇到的問題，例如剛剛是【塞車通勤】</p>

<h3>4.發生問題時使用者可能會做些甚麼</h3>

<p>畫出假如發生剛剛描述的問題時，使用者可能會做出什麼，畫越多越好，可以畫成一個連續故事，例如【塞車通勤】發生時，使用者可能改搭【捷運】，就畫一個捷運</p>

<h3>5.規劃一個簡單的活動與故事中的使用者互動</h3>

<p>先規劃一個活動，讓使用者怎麼去體驗剛剛所想的點子，怎麼引起使用者的注意？並且要規畫如何收及使用者的反應？</p>

<h3>6.評估你的實驗</h3>

<p>最後，假設如果這個活動要十個人來實驗，要花多少錢？粗估就好</p>

<p>算算看，透過<strong>實驗設計假設</strong>以後，你所花的實驗費是多少？有發現跟剛剛在第一階段發想點子時，所預估花的錢差很多嗎？</p>

<p>透過這樣的第一階段的思考發想，然後設計點子，一直到第二階段的實驗假設，來了解其實可以不用很快的投入過多的成本，因為我們所想的不一定是對的，也可以避免浪費的狀況發生，造成不必要的失敗和損失，這跟《精實創業》想表達的精神其實是一樣的，透過這次學習，我了解了更多</p>

<p>參考資料:</p>

<p>Leo的Workshop</p>

<p><a href="http://www.designthinkingmovie.com/index_ch.html" target="_blank">《設計與思考》</a></p>

<p><a href="http://www.books.com.tw/exep/prod/booksfile.php?item=0010547374" target="_blank">《精實創業》</a></p>

<p>如有錯誤，歡迎指正</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[JavaScript] 當函式需要傳遞很多參數時]]></title>
    <link href="http://rx836.github.com/blog/javascript-simple-object/"/>
    <updated>2012-09-25T00:06:00+08:00</updated>
    <id>http://rx836.github.com/blog/javascript-simple-object</id>
    <content type="html"><![CDATA[<p>有時候我們可能寫了一個函式，但裡面需要傳遞的參數非常的多，這時候除了要小心哪些是必要的哪些是不必要的參數以外，還要注意參數列的順序不能搞混，這真的是會讓人頭昏眼花&#8230;</p>

<!--more-->


<p>不過，有個方法可以解決這個困擾，就是<strong>設定值物件</strong>，平常我們使用函式可能會這樣寫</p>

<pre><code>function add(parameter1, parameter2, parameter3, parameter4, parameter5) {...}
</code></pre>

<p>可是參數一堆真的會又臭又長，還要注意先後順序，但如果改成這樣寫</p>

<pre><code>var conf = {
    parameter1: "a",
    parameter2: "b",
    parameter3: "c"
}

add(conf)
</code></pre>

<p>將參數全部包成一個物件，再傳給函式，不僅可以不用記住先後順序，還可以安全的略過選用參數，也更容易閱讀和維護，當然新增和移除也比較方便</p>

<p>不過缺點就是要特別去知道參數的名稱，而且物件的屬性名稱並無法做最小化處理</p>

<p>不過當你要設定一堆CSS樣式的時候，或是個人資料很多很繁雜的時候，這個方法倒是很好用的:)</p>

<p>參考資料:</p>

<p>JavaScript 設計模式</p>

<p>如有錯誤，歡迎指正</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[學習筆記] 簡單容易，如何在VM裝Windows 8來玩玩[二]]]></title>
    <link href="http://rx836.github.com/blog/2-vmware-windows-8/"/>
    <updated>2012-09-22T14:33:00+08:00</updated>
    <id>http://rx836.github.com/blog/2-vmware-windows-8</id>
    <content type="html"><![CDATA[<p>延續上一篇<a href="http://blog.rx836.tw/blog/vmware-windows-8/" target="_blank">簡單容易，如何在VM裝Windows 8來玩玩[二]</a>，已經在VM裡面建立一個Windows 8的虛擬機器，現在就來開始安裝系統部分</p>

<!--more-->


<h3>2012/09/25 補充</h3>

<p>更正一下，如果是要開發Windows 8的應用程式，應該要安裝<a href="http://msdn.microsoft.com/zh-TW/evalcenter/jj554510.aspx" target="_blank">Windows 8 evaluation for developers</a>，這裡的Windows 8版本才對，不然會沒辦法安裝VS 2012開發工具&#8230;，而且還有中文版本，因為安裝程序都一樣，所以文章內容一樣可以參考</p>

<p>按下『Play virtual machine』以後，就會出現啟動畫面</p>

<p><img src="https://lh5.googleusercontent.com/-81H0bQbP8eA/UFyf5ev3TRI/AAAAAAAABko/QD4Y-GM2JIk/s903/12.jpg"  /></p>

<p>接著選擇時區『Chinese(Traditional, Taiwan)』，語言只有英文可以選擇</p>

<p><img src="https://lh5.googleusercontent.com/-fBKS1fGZlDk/UFyf5xfRyCI/AAAAAAAABk0/G6XGhTOasN0/s903/13.jpg"  /></p>

<p>按下『Install now』</p>

<p><img src="https://lh6.googleusercontent.com/-Ax-DPQyxZbc/UFyf57uCRkI/AAAAAAAABk4/rU9T-QxMrro/s903/14.jpg"  /></p>

<p>接著會要你輸入產品序號，這時候去之前的<a href="http://windows.microsoft.com/en-US/windows-8/iso" target="_blank">Windows 8 Consumer Preview(消費者預覽版)</a>下載頁，裡面有產品序號(Product key)</p>

<p><img src="https://lh3.googleusercontent.com/-_d98Gtqnc3c/UFyf6UuvMiI/AAAAAAAABlA/p7N_61eQRGI/s860/15.jpg"  /></p>

<p>貼到序號框裡面</p>

<p><img src="https://lh4.googleusercontent.com/-oAOyYz0Eokg/UFyf7GrLx5I/AAAAAAAABlU/y3q_YM9AnO8/s903/16.jpg"  /></p>

<p>勾選『I accept the license terms』，再點『Next』</p>

<p><img src="https://lh6.googleusercontent.com/-NfbwsgksSwI/UFyf7X8MNPI/AAAAAAAABlQ/6-uWUpfp9xc/s903/17.jpg"  /></p>

<p>點選『Custom: Install Windows only』</p>

<p><img src="https://lh6.googleusercontent.com/-Qkt-zeuyf_8/UFyf7r9zNMI/AAAAAAAABlY/bY8Szlo-ibA/s903/18.jpg"  /></p>

<p>直接點『Next』</p>

<p><img src="https://lh3.googleusercontent.com/-kCW-XYnx_SI/UFyf8Qalj0I/AAAAAAAABl0/9LZ4DNqWYeQ/s903/19.jpg"  /></p>

<p>開始安裝囉！</p>

<p><img src="https://lh6.googleusercontent.com/-JFPiO0_vHPo/UFyf8jljh2I/AAAAAAAABlo/X-ZpEfFo5_0/s903/20.jpg"  /></p>

<p>安裝好後進入設定畫面，這裡可以選擇電腦名稱和背景顏色，設定好後一樣按『Next』</p>

<p><img src="https://lh4.googleusercontent.com/-J08q-P3IoD0/UFyf9qrlE9I/AAAAAAAABl8/ZslAPvFNBmg/s903/21.jpg"  /></p>

<p>直接選預設值吧！</p>

<p><img src="https://lh4.googleusercontent.com/-bZOZ2SRntoc/UFyf-HMrfOI/AAAAAAAABmE/a0fcU4Ir3WY/s903/22.jpg"  /></p>

<p>Windows 8可以整合Windows Live Messenger或MSN帳號</p>

<p><img src="https://lh5.googleusercontent.com/-YjC4_qJCucU/UFyf_MjclJI/AAAAAAAABmc/B7zdknpEmD8/s903/23.jpg"  /></p>

<p>輸入密碼</p>

<p><img src="https://lh5.googleusercontent.com/-e7oYsxfVAaM/UFyf_E60dPI/AAAAAAAABmU/pa5aoZVvM_4/s903/24.jpg"  /></p>

<p>確認一些基本資訊，直接點選『Next』</p>

<p><img src="https://lh5.googleusercontent.com/-pZErLzdxSCY/UFyf_4S1FmI/AAAAAAAABmk/cYWchJUWOaU/s903/25.jpg"  /></p>

<p>大功告成！趕快玩玩看吧！</p>

<p><img src="https://lh3.googleusercontent.com/-62nz20DXDUM/UFygAq0QQ6I/AAAAAAAABmw/wkowZ3oShG8/s903/26.jpg"  /></p>

<p>試玩了一下發現真的蠻多東西要重新適應的，包括操作介面和使用習慣，至於好不好用就是見仁見智了:)</p>

<h2>後記</h2>

<p>一定會有人疑惑要怎麼關機，請將滑鼠移到右下角會出現『Settings』，裡面有個『Power』再點『Shut down』即可</p>

<p>其他還有IE10大家也可以玩玩看</p>

<p>參考資料:</p>

<p><a href="http://blog.xuite.net/yh96301/blog/58184430" target="_blank">VMware Player 4.0安裝Windows 8消費者預覽版本(二)</a></p>

<p>如有錯誤，歡迎指正</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[學習筆記] 簡單容易，如何在VM裝Windows 8來玩玩[一]]]></title>
    <link href="http://rx836.github.com/blog/vmware-windows-8/"/>
    <updated>2012-09-21T17:37:00+08:00</updated>
    <id>http://rx836.github.com/blog/vmware-windows-8</id>
    <content type="html"><![CDATA[<p>因為想參加Microsoft的<a href="http://www.microsoft.com/taiwan/promo/Win8AppFest/">Apps開發者聯盟</a>，但其實是想拼前100名就可以得到快手獎XD，獎品是Windows 8 專業版軟體乙套，所以想來挑戰看看，但要先把windows 8安裝起來，所以這篇紀錄一下安裝過程，用的是VM</p>

<!--more-->


<p>當然前提你必須先把VM給裝起來，網路上<a href="http://blog.xuite.net/yh96301/blog/53120472" target="_blank">教學還蠻多的</a>，這篇就不多加闡述</p>

<p>一開始首先要去下載微軟所推出的<a href="http://windows.microsoft.com/en-US/windows-8/iso" target="_blank">Windows 8 Consumer Preview(消費者預覽版)</a>，直接下載32-bit (x86)這個版本就可以，但只有English版本，下載完後開啟VM</p>

<h3>2012/09/25 補充</h3>

<p>更正一下，如果是要開發Windows 8的應用程式，應該要安裝<a href="http://msdn.microsoft.com/zh-TW/evalcenter/jj554510.aspx" target="_blank">Windows 8 evaluation for developers</a>，這裡的Windows 8版本才對，不然會沒辦法安裝VS 2012開發工具&#8230;，而且還有中文版本，因為安裝程序都一樣，所以文章內容一樣可以參考</p>

<p>點選『Create a New Virtual Machine』</p>

<p><img src="https://lh5.googleusercontent.com/-otZSLwijQ0U/UFyf4XwFSyI/AAAAAAAABkc/FNIph_J7JHs/s657/1.jpg"  /></p>

<p>接著點選『I will Install the operating system later』</p>

<p><img src="https://lh5.googleusercontent.com/-xeiYkr8fudM/UFyf8en7F3I/AAAAAAAABls/swewFIyCkmE/s659/2.jpg"  /></p>

<p>作業系統選擇『Microsoft Windows』，接著再選擇『Windows 7』，因為VM沒有Windows 8可以選</p>

<p><img src="https://lh3.googleusercontent.com/-_Co3ZTLZ3bA/UFygAqiA5CI/AAAAAAAABm0/UixQmOxkxiU/s657/3.jpg"  /></p>

<p>輸入虛擬機器的名稱，這邊取名『Windows 8』，再選擇要存放的路徑，然後點選『Next』</p>

<p><img src="https://lh4.googleusercontent.com/-KRAurNJRvLk/UFygBDKQoII/AAAAAAAABm8/YwQLP43AyUQ/s658/4.jpg"  /></p>

<p>接著設定虛擬硬碟的大小，並且設定『Store virtual disk as a single files』，將虛擬硬碟存成一個資料夾，按下『Next』</p>

<p><img src="https://lh3.googleusercontent.com/-EO-2MBYjcEc/UFygBr6bmvI/AAAAAAAABnI/5JjNmotkvEw/s656/5.jpg"  /></p>

<p>再來準備要來設定記憶體和掛載Windows 8映像檔，選擇『Customize Hardware…』</p>

<p><img src="https://lh4.googleusercontent.com/-nbky8ASN0ck/UFygBw-01wI/AAAAAAAABnE/dxdanwgZcjg/s660/6.jpg"  /></p>

<p>調整記憶體，一般來說建議為實體記憶體的3分之1至2分之1之間，官方網站是說至少要1G</p>

<p><img src="https://lh5.googleusercontent.com/-btOEe35_ToI/UFygCdtCjwI/AAAAAAAABnY/P6JM4vBI9Nc/s656/7.jpg"  /></p>

<p>接著選擇『New CD/DVD』的選項，再點『Use ISO image file:』，再按「Browse…」來選擇映像檔</p>

<p><img src="https://lh6.googleusercontent.com/-WxOQRqu4nF8/UFygCyaFR9I/AAAAAAAABng/uQc30JVd0Oo/s658/8.jpg"  /></p>

<p>選擇好映像檔以後就按下『Close』</p>

<p><img src="https://lh4.googleusercontent.com/-v5ICos8qLUQ/UFygC-8bVNI/AAAAAAAABnc/9rp1LeXOO8I/s661/9.jpg"  /></p>

<p>最後按下『Finish』就新增了一個虛擬機器</p>

<p><img src="https://lh6.googleusercontent.com/-5QYBPsTQNwA/UFyf4pX33AI/AAAAAAAABkg/5rhtXII6H1s/s657/10.jpg"  /></p>

<p>按下『Play virtual machine』，開始來進行安裝囉！</p>

<p><img src="https://lh5.googleusercontent.com/-G0VcZ28gqbA/UFyf4laUtKI/AAAAAAAABkk/jvgPOqPFaOE/s659/11.jpg"  /></p>

<p>因為篇幅有點過長，為了方便閱讀，所以分成兩篇來記錄</p>

<p>參考資料:</p>

<p><a href="http://blog.xuite.net/yh96301/blog/58183942" target="_blank">VMware Player 4.0安裝Windows 8消費者預覽版本(一)</a></p>

<p>如有錯誤，歡迎指正</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[jQuery] hoverpulse 滑鼠移入，圖片縮放]]></title>
    <link href="http://rx836.github.com/blog/jquery-hoverpulse/"/>
    <updated>2012-09-20T23:42:00+08:00</updated>
    <id>http://rx836.github.com/blog/jquery-hoverpulse</id>
    <content type="html"><![CDATA[<p>jQuery寫了一陣子，直到最近有個需求，想要做到滑鼠移到圖片上，會微微的放大，才發現這個很常看到的效果，我到今天都還沒實做過</p>

<!--more-->


<p>幸運的是&#8230;，就因為這麼晚才實做，所以早就有人把plugin寫好了，我所用的是<a href="http://www.malsup.com/jquery/hoverpulse/" target="_blank">hoverpulse</a>，用法相當相當的簡單</p>

<p>首先是HTML部份</p>

<pre><code>&lt;div&gt;&lt;img src="a.jpg" /&gt;&lt;/div&gt;
&lt;div&gt;&lt;img src="b.jpg" /&gt;&lt;/div&gt;
&lt;div&gt;&lt;img src="c.jpg" /&gt;&lt;/div&gt;
</code></pre>

<p>再來是jQuery部份</p>

<pre><code>$(document).ready(function() {
    $('div img').hoverpulse();
});
</code></pre>

<p>這樣就完成了！當然什麼值都沒有給的情況下是用default，但如果想要設定放大的幅度和變化的速度，可以這樣寫</p>

<pre><code>$(document).ready(function() {
    $('div img').hoverpulse({
        size: 40,  // number of pixels to pulse element (in each direction)
        speed: 400 // speed of the animation 
    });
});
</code></pre>

<p>真的簡單又明瞭&#8230;</p>

<p>那如果你想加入點擊的事件，你可以這樣寫</p>

<pre><code>$(document).ready(function() {
    $('div img').hoverpulse().each(function() {
        var $img = $(this);                 
        $img.click(function() {

            //點每張圖的事件

            return false;
        });
    });
});
</code></pre>

<p>接下來是我個人好奇去看他的source code，可以看到他先將每個圖片的width和height存到$.data裡面</p>

<pre><code>this.each(function() {
    var $this = $(this);
    var w = $this.width(), h = $this.height();
    $this.data('hoverpulse.size', { w: parseInt(w), h: parseInt(h) });
});
</code></pre>

<p>接著利用到<strong>.hover()</strong>的方法去做出滑鼠移到圖片和移出圖片的效果</p>

<pre><code>// bind hover event for behavior
return this.hover(
    // hover over
    function() {
        var $this = $(this);
        $this.parent().css('z-index', opts.zIndexActive);

        var size = $this.data('hoverpulse.size');
        var w = size.w, h = size.h;
        $this.stop().animate({ 
            top:  ('-'+opts.size+'px'), 
            left: ('-'+opts.size+'px'), 
            height: (h+2*opts.size)+'px', 
            width:  (w+2*opts.size)+'px' 
        }, opts.speed);
    },
    // hover out
    function() {
        var $this = $(this);
        var size = $this.data('hoverpulse.size');
        var w = size.w, h = size.h;

        $this.stop().animate({ 
            top:  0, 
            left: 0, 
            height: (h+'px'), 
            width:  (w+'px') 
        }, opts.speed, function() {
            $this.parent().css('z-index', opts.zIndexNormal);
        });
    }
);
</code></pre>

<p>在移入部份會先將包覆img的div z-index值設到100</p>

<pre><code>$this.parent().css('z-index', opts.zIndexActive);
</code></pre>

<p>然後從data取出之前放入的圖片width和height，接著用<strong>.animate()</strong>來執行放大效果</p>

<pre><code>$this.stop().animate({ 
            top:  ('-'+opts.size+'px'), 
            left: ('-'+opts.size+'px'), 
            height: (h+2*opts.size)+'px', 
            width:  (w+2*opts.size)+'px' 
        }, opts.speed);
</code></pre>

<p>這段code其實就是把你設定的size放大兩倍，並且為了有感覺從圖片中間點開始放大的效果，所以把位置top和left給予負值，等於整張圖片往左上角移動，速度是<strong>opts.speed</strong>，而圖片的position:absolute在整個plugin一開始就已經設定了</p>

<pre><code>// parent must be relatively positioned
this.parent().css({ position: 'relative' });
// pulsing element must be absolutely positioned
this.css({ position: 'absolute', top: 0, left: 0 });
</code></pre>

<p>可以看到包覆img的div是relatively，img是absolute</p>

<p>而滑鼠移開之後只是把值恢復成原來的設定</p>

<pre><code>var $this = $(this);
var size = $this.data('hoverpulse.size');
var w = size.w, h = size.h;

$this.stop().animate({ 
    top:  0, 
    left: 0, 
    height: (h+'px'), 
    width:  (w+'px') 
}, opts.speed, function() {
    $this.parent().css('z-index', opts.zIndexNormal);
});
</code></pre>

<p>將top和left歸為0，height和width恢復成原來的大小，z-index也設回預設值1</p>

<p>當然預設值在plugin的最下面可以自己修改</p>

<pre><code>$.fn.hoverpulse.defaults = {
    size:  20,
    speed: 200,
    zIndexActive: 100,
    zIndexNormal: 1
};
</code></pre>

<p>這樣plugin整個看起來就很清楚明瞭，也可以自己嘗試動手寫寫看喔！</p>

<h2>後記</h2>

<p>Aaron大大說plugin寫法有點舊，而且有點囉嗦XD，他建議我新的寫法，在此特別筆記下來</p>

<p>HTML</p>

<pre><code>&lt;img src="a.jpg" class="resize" width="250"/&gt;
</code></pre>

<p>jQuery</p>

<pre><code>var current_h = null;
var current_w = null;

$('.resize').hover(
    function(){
        current_h = $(this, 'img').height;
        current_w = $(this, 'img').width;
        $(this).stop(true, false).animate({width: (current_w * 1.3), height: (current_h * 1.3)}, 300);
    },
    function(){
        $(this).stop(true, false).animate({width: current_w + 'px', height: current_h + 'px'}, 300);
    }
);
</code></pre>

<p>不要用plugin，直接寫，至於top和left在自己加上就好，跟前面的plugin道理一樣</p>

<p>參考資料:</p>

<p><a href="http://www.malsup.com/jquery/hoverpulse/" target="_blank">hoverpulse</a></p>

<p>如有錯誤，歡迎指正</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Facebook] 如何讓Page Tab的Scroll bar消失以及使用錨點?]]></title>
    <link href="http://rx836.github.com/blog/facebook-page-tab-scroll/"/>
    <updated>2012-09-19T23:53:00+08:00</updated>
    <id>http://rx836.github.com/blog/facebook-page-tab-scroll</id>
    <content type="html"><![CDATA[<p>常常會看到粉絲團裡面的頁籤活動(Page Tab)，都會出現scroll bar，老實說其實有點醜，所以這邊記錄一下怎樣讓Page Tab消失，讓你的頁籤內容有多長，整個Page Tab就有多長，另外順便記錄一下Facebook錨點的問題</p>

<!--more-->


<p>要如何讓Facebook不再出現scroll bar</p>

<p><img src="https://lh5.googleusercontent.com/-UTpcRBt6434/UFntIvLIR-I/AAAAAAAABhU/QxBuOx2nspc/s803/1.jpg" width="800px"  /></p>

<p>這是某個粉絲團裡面的頁籤活動，可以看到有一個scroll bar在右側，消失的方法就是在body裡面加上overflow</p>

<pre><code>&lt;body style="overflow:hidden"&gt;
</code></pre>

<p>但這樣其實有個問題，就是scroll bar雖然消失了，但Page Tab被切到了，也就是說下半部的內容會顯示不出來，所以要在加上JavaScript的code上去</p>

<pre><code>var _app_id = 'xxxx';
var _api_key = '';
//初始化
FB.init({
    appId: _app_id,
    status: true, // check login status
    cookie: true, // enable cookies to allow the server to access the session
    xfbml: true, // parse XFBML        
    oauth: true // enable OAuth 2.0
});
</code></pre>

<p>一般來說這是初始化Facebook的JavaScript SDK，緊接著在後面加上</p>

<pre><code>    FB.Canvas.setAutoGrow();
</code></pre>

<p>這樣就可以讓你Page Tab可以整個顯示出來，而且也不會再出現scroll bar，要注意的是，以前會用<strong>FB.Canvas.setAutoResize</strong>，不過現在不要再用這個語法囉，因為Facebook已經要刪除，不再支援這種寫法</p>

<h2>Facebook 錨點無效</h2>

<p>我們平常寫網頁，我們會這樣設錨點</p>

<pre><code>&lt;a name="h"&gt;我是錨點&lt;/a&gt;
</code></pre>

<p>接著會下這樣的超連結</p>

<pre><code>&lt;a href="#h"&gt;點我跳到我是錨點&lt;/a&gt;
</code></pre>

<p>這樣就可以到達網頁設定好的錨點，但是這樣在Facebook是無效的！因為Facebook Page Tab其實是一個iframe，所以Facebook自己有出SDK可以控制scroll的移動，寫法如下</p>

<pre><code>FB.Canvas.scrollTo(0, 0);
</code></pre>

<p>等於說你可以寫click某個HTML讓他移動到你設定好的座標位置，例如</p>

<pre><code>$('a').click(function(){
    FB.Canvas.scrollTo(0, 300);
});
</code></pre>

<p>這樣意思代表點擊a移動到Page Tab坐標(0, 300)的地方，這樣就可以取代錨點失效的問題了</p>

<p>參考資料:</p>

<p><a href="https://developers.facebook.com/docs/reference/javascript/FB.Canvas.scrollTo/" target="_blank">FB.Canvas.scrollTo</a></p>

<p><a href="https://developers.facebook.com/docs/reference/javascript/FB.Canvas.setAutoGrow/" target="_blank">FB.Canvas.setAutoGrow</a></p>

<p>如有錯誤，歡迎指正</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[學習筆記] 全世界最會說故事的平台-TED]]></title>
    <link href="http://rx836.github.com/blog/introduce-ted/"/>
    <updated>2012-09-15T16:00:00+08:00</updated>
    <id>http://rx836.github.com/blog/introduce-ted</id>
    <content type="html"><![CDATA[<p>如果這是人生最後的十八分鐘，我想講什麼？這是去年受邀擔任TEDxTaipei講者-倒立先生黃明正，為了克服緊張，問自己的問題，同時也是為了講一個清楚重大的人生經驗，所需要準備的心境</p>

<!--more-->


<p><a href="http://www.ted.com/" target="_blank">TED</a>是在1984年於美國矽谷成立，是科技(technology)、娛樂(entertainment)、設計(design)的簡稱，也是一個非營利組織，每年會舉辦一次會議，一開始原本是一個私人聚會，由『資訊建築』的先驅沃曼(Richard Wurman)發想邀請最頂尖的人物來說他們的創意故事，後來TED的影響力持續發酵到今日，已經成為每年一場四天三夜的論壇</p>

<p>因為在商週上看到關於TED的敘述，裡面有提到說故事的方式，因為最近剛好準備一些快講資料，所以這邊做一些心得記錄</p>

<h2>在舞台上做好自己</h2>

<p>要用自己的風格表達，並且熱情的和大家分享自己的故事、工作和心得，要盡量用自己的角度去分享故事，例如『我經歷過最酷的事情』，而不是『我所知道最酷的事情』，像其中一名講者泰勒(Jill Bolte Taylor)所分享的『我腦內的兩個世界』，就是非常好的例子，講者用本身所經歷的中風經驗，來分享對於這個世界的感受，甚至為了讓觀眾更了解腦的構造，還當場秀出真的人腦！</p>

<object width="526" height="374">
<param name="movie" value="http://video.ted.com/assets/player/swf/EmbedPlayer.swf"></param>
<param name="allowFullScreen" value="true" />
<param name="allowScriptAccess" value="always"/>
<param name="wmode" value="transparent"></param>
<param name="bgColor" value="#ffffff"></param>
<param name="flashvars" value="vu=http://video.ted.com/talk/stream/2008/Blank/JillBolteTaylor_2008-320k.mp4&su=http://images.ted.com/images/ted/tedindex/embed-posters/JillBolteTaylor-2008.embed_thumbnail.jpg&vw=512&vh=288&ap=0&ti=229&lang=en&introDuration=15330&adDuration=4000&postAdDuration=830&adKeys=talk=jill_bolte_taylor_s_powerful_stroke_of_insight;year=2008;theme=how_the_mind_works;theme=medicine_without_borders;theme=master_storytellers;event=TED2008;tag=biology;tag=brain;tag=consciousness;tag=global+issues;tag=illness;tag=science;&preAdTag=tconf.ted/embed;tile=1;sz=512x288;" />
<embed src="http://video.ted.com/assets/player/swf/EmbedPlayer.swf" pluginspace="http://www.macromedia.com/go/getflashplayer" type="application/x-shockwave-flash" wmode="transparent" bgColor="#ffffff" width="526" height="374" allowFullScreen="true" allowScriptAccess="always" flashvars="vu=http://video.ted.com/talk/stream/2008/Blank/JillBolteTaylor_2008-320k.mp4&su=http://images.ted.com/images/ted/tedindex/embed-posters/JillBolteTaylor-2008.embed_thumbnail.jpg&vw=512&vh=288&ap=0&ti=229&lang=en&introDuration=15330&adDuration=4000&postAdDuration=830&adKeys=talk=jill_bolte_taylor_s_powerful_stroke_of_insight;year=2008;theme=how_the_mind_works;theme=medicine_without_borders;theme=master_storytellers;event=TED2008;tag=biology;tag=brain;tag=consciousness;tag=global+issues;tag=illness;tag=science;&preAdTag=tconf.ted/embed;tile=1;sz=512x288;"></embed>
</object>


<p>(可以選擇中文字幕)</p>

<p>如此的震撼讓人印象不深刻都很難</p>

<h2>當作人生最後十八分鐘</h2>

<p>將演講想成你的人生剩下十八分鐘，你會怎麼去表達一個人生經驗？重點不是表達從小到大的精華故事，而是怎麼去分享具有意義的人生體驗</p>

<h2>用上台動機取代緊張</h2>

<p>我相信每個人對於上台分享，不管是第一次還是經驗豐富者，都還是會有緊張時刻，把注意力集中在演講動機，或是釐清演講目的，比將注意力其中在令人恐懼的緊張來的好</p>

<h2>畫面比口說更夠力</h2>

<p>讓大家親身感受吧！例如比爾‧蓋茲為了讓大家重視瘧疾，當場秀出了瘧蚊的罐子擺在大家面前，英國名廚奧利佛(Jamie Oliver)為了讓聽眾注意兒童的糖分攝取，將一車的糖推倒在大家面前</p>

<object width="526" height="374"><param name="movie" value="http://video.ted.com/assets/player/swf/EmbedPlayer.swf"></param><param name="allowFullScreen" value="true" /><param name="allowScriptAccess" value="always"/><param name="wmode" value="transparent"></param><param name="bgColor" value="#ffffff"></param><param name="flashvars" value="vu=http://video.ted.com/talk/stream/2010/Blank/JamieOliver_2010-320k.mp4&su=http://images.ted.com/images/ted/tedindex/embed-posters/JamieOliver-2010.embed_thumbnail.jpg&vw=512&vh=288&ap=0&ti=765&lang=en&introDuration=15330&adDuration=4000&postAdDuration=830&adKeys=talk=jamie_oliver;year=2010;theme=food_matters;theme=ted_prize_winners;theme=listening_to_teachers;event=TED2010;tag=business;tag=education;tag=food;tag=global+issues;tag=health;&preAdTag=tconf.ted/embed;tile=1;sz=512x288;" /><embed src="http://video.ted.com/assets/player/swf/EmbedPlayer.swf" pluginspace="http://www.macromedia.com/go/getflashplayer" type="application/x-shockwave-flash" wmode="transparent" bgColor="#ffffff" width="526" height="374" allowFullScreen="true" allowScriptAccess="always" flashvars="vu=http://video.ted.com/talk/stream/2010/Blank/JamieOliver_2010-320k.mp4&su=http://images.ted.com/images/ted/tedindex/embed-posters/JamieOliver-2010.embed_thumbnail.jpg&vw=512&vh=288&ap=0&ti=765&lang=en&introDuration=15330&adDuration=4000&postAdDuration=830&adKeys=talk=jamie_oliver;year=2010;theme=food_matters;theme=ted_prize_winners;theme=listening_to_teachers;event=TED2010;tag=business;tag=education;tag=food;tag=global+issues;tag=health;&preAdTag=tconf.ted/embed;tile=1;sz=512x288;"></embed></object>


<p>影片13:20秒開始，可以選擇中文字幕</p>

<h2>說理占10%就好</h2>

<p>說故事都有目的，有些是拿來激勵人，有些是警告某些事物，但不管如何，90%的時間都是拿來說故事，最後10%才是來說道理，做結論</p>

<p>我個人認為TED是個很棒的組織，因為他是個跨領域的論壇，集合來自不同背景的人意見，來激發每個人的想法，和衝擊你的思維，很慶幸的是，在2009年TED開放品牌授權，讓全世界有心有能力的人用TED的模式去經營TED大會，而這種TED授權的就叫做TEDx。以城市為名，用在地的故事，而台灣也有一個TED就叫做<a href="http://tedxtaipei.com/" target="_blank">TEDx Taipei</a></p>

<p>文章最後，我放上我個人最喜歡的TED演講片段『定時攝影下冰河急遽流失的證據』(Time-lapse proof of extreme ice loss)，是一個叫做James Balog的攝影家，用定時攝影的方式來呈現地球暖化的證據，影片內容讓我相當的震撼，因為那些場景是我一輩子沒看過也無法想像的畫面</p>

<object width="526" height="374"><param name="movie" value="http://video.ted.com/assets/player/swf/EmbedPlayer.swf"></param><param name="allowFullScreen" value="true" /><param name="allowScriptAccess" value="always"/><param name="wmode" value="transparent"></param><param name="bgColor" value="#ffffff"></param><param name="flashvars" value="vu=http://video.ted.com/talk/stream/2009G/Blank/JamesBalog_2009G-320k.mp4&su=http://images.ted.com/images/ted/tedindex/embed-posters/JamesBalog-2009G.embed_thumbnail.jpg&vw=512&vh=288&ap=0&ti=628&lang=en&introDuration=15330&adDuration=4000&postAdDuration=830&adKeys=talk=james_balog_time_lapse_proof_of_extreme_ice_loss;year=2009;theme=a_greener_future;theme=media_that_matters;theme=to_boldly_go;event=TEDGlobal+2009;tag=climate+change;tag=global+issues;tag=photography;tag=science;tag=technology;&preAdTag=tconf.ted/embed;tile=1;sz=512x288;" /><embed src="http://video.ted.com/assets/player/swf/EmbedPlayer.swf" pluginspace="http://www.macromedia.com/go/getflashplayer" type="application/x-shockwave-flash" wmode="transparent" bgColor="#ffffff" width="526" height="374" allowFullScreen="true" allowScriptAccess="always" flashvars="vu=http://video.ted.com/talk/stream/2009G/Blank/JamesBalog_2009G-320k.mp4&su=http://images.ted.com/images/ted/tedindex/embed-posters/JamesBalog-2009G.embed_thumbnail.jpg&vw=512&vh=288&ap=0&ti=628&lang=en&introDuration=15330&adDuration=4000&postAdDuration=830&adKeys=talk=james_balog_time_lapse_proof_of_extreme_ice_loss;year=2009;theme=a_greener_future;theme=media_that_matters;theme=to_boldly_go;event=TEDGlobal+2009;tag=climate+change;tag=global+issues;tag=photography;tag=science;tag=technology;&preAdTag=tconf.ted/embed;tile=1;sz=512x288;"></embed></object>


<p>參考資料:</p>

<p>1295期商業周刊</p>

<p><a href="http://www.ted.com/" target="_blank">TED</a></p>

<p><a href="http://tedxtaipei.com/" target="_blank">TEDxTaipei</a></p>

<p><a href="https://www.facebook.com/TEDxTaipei" target="_blank">TEDxTaipei Facebook粉絲團</a></p>

<p>如有錯誤，歡迎指正</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[CSS] 用了就無法回頭的Compass]]></title>
    <link href="http://rx836.github.com/blog/introduce-compass/"/>
    <updated>2012-09-14T15:24:00+08:00</updated>
    <id>http://rx836.github.com/blog/introduce-compass</id>
    <content type="html"><![CDATA[<p><a href="http://compass-style.org/" target="_blank">Compass</a>這個CSS的framework已經有一陣子了，但我始終沒有去好好了解他，印象中只知道他可以很快的寫出CSS，但可以多快其實我一直無法感受，再加上還要用Ruby的環境，感覺學習曲線就很高，也覺得現在CSS寫的也好好的，就沒多加注意，直到&#8230;</p>

<!--more-->


<p>我在看<a href="http://webdesign.tutsplus.com/tutorials/htmlcss-tutorials/css-sprite-sheets-best-practices-tools-and-helpful-applications/">CSS Sprite Sheets: Best Practices, Tools and Helpful Applications</a>這篇文章時，文章尾巴的Tools to Help又提到了Compass，說可以自動生成Sprite，讓我好奇心作祟的打算真正看一下什麼是Compass</p>

<p>沒想到，一用之下，驚為天人！我想這是很多數剛開始接觸Compass的人共同心聲吧，直接來看看怎麼使用吧！</p>

<p>首先要先把Ruby的環境安裝起來，不過因為我是用windows，所以要特別下載<a href="http://www.ruby-lang.org/zh_TW/downloads/" target="_blank">for windows</a>用的，安裝好了以後你可以到Ruby的資料夾底下有個Start Command Prompt with Ruby，開啟命令列，接著安裝Compass</p>

<pre><code>gem update --system #先更新gem
gem install compass #安裝Compass
</code></pre>

<p>安裝完Compass以後，Sass也會自動安裝起來，這邊要稍微提一下甚麼是<a href="http://sass-lang.com/" target="_blank">Sass</a></p>

<p><strong>Sass(Syntactically Awesome Stylesheets)</strong>其實就是一個拿來寫CSS樣式表的程式語言，然而還有一個因為CSS3而延伸的語法叫做Scss，兩個寫法有些微的差異，同樣的效果，寫法如下</p>

<p>Scss:</p>

<pre><code>table.hl {
  margin: 2em 0;
  td.ln {
    text-align: right;
  }
}
</code></pre>

<p>Sass:</p>

<pre><code>table.hl
  margin: 2em 0
  td.ln
    text-align: right
</code></pre>

<p>可以看到Scss的寫法比較像我們一般看到的CSS，而Sass強調的是更精簡、快速的寫法，所以是利用縮排來呈現</p>

<p>Sass/Scss的特點有可以利用變數，巢狀或是函式和繼承等，至於用法可以參考<a href="http://sass-lang.com/" target="_blank">官網</a>的首頁有簡單的範例，這邊就不提太多</p>

<p>回到Compass，其實Compass也就是一個Sass的Framework，已經把原本要寫很多次的樣式都打包好，剛剛講到安裝完Compass以後現在就來開始使用他</p>

<p>首先建立一個Compass專案</p>

<pre><code>compass creat mycompass
</code></pre>

<p>執行成功以後，會看到底下有三個資料夾，一個檔案</p>

<pre><code>.sass-cache //快取檔案
sass // sass檔/scss檔
stylesheets //css檔
config.rb //設定檔
</code></pre>

<p>接著你就可以開始編寫Sass檔，除了剛剛說的Sass/Scss的寫法以外，還可以利用Compass強大的功能，例如要做一個reset檔案首先新建一個reset.scss，然後在裡面直接加上以下這段</p>

<pre><code>@import "compass/reset";
</code></pre>

<p>接著可以用compile的方式</p>

<pre><code>compass compile [資料夾名稱或路徑]
</code></pre>

<p>或是用監控的方式</p>

<pre><code>compass watch [資料夾名稱或路徑]
</code></pre>

<p>我比較喜歡用watch方式，因為這樣改完直接存檔就會自動compile，reset.scss compile以後，就會看到stylesheets資料夾底下就出現reset.css的檔案了！</p>

<p>其他還有像文章開頭提到的自動生成Sprite，到底有多神奇，來看看怎麼做</p>

<p>首先準備兩張圖，一張是facebook的icon，另一張是plurk的icon，如下圖</p>

<p><img src="https://lh6.googleusercontent.com/-fwPpZzFYl9I/UFL6CnNIZ1I/AAAAAAAABgE/t7FFyDSX-UU/s243/1.jpg" /></p>

<p>接著這邊就是要注意的地方了，一開始我將圖放到icons的資料夾裡面，並且跟sass和stylesheets資料夾都擺在同一層</p>

<p><img src="https://lh5.googleusercontent.com/-0AQioXIX4X8/UFL6qh2A2SI/AAAAAAAABgM/cuUTLF7UcOs/s660/2.jpg" /></p>

<p>接著我就建一個sprite.scss的檔案並且在裡面加上</p>

<pre><code>@import "icons/*.png";
@include all-icons-sprites;  
</code></pre>

<p>可是後來發現怎麼compile都沒有用，一直出現以下錯誤訊息</p>

<pre><code>No files were found in the load path matching "icons/*.png". Your current load
paths
</code></pre>

<p>後來我才發現原來在設定檔config.rb裡面有指定圖檔的擺放位置</p>

<pre><code>http_path = "/"
css_dir = "stylesheets"
sass_dir = "sass"
images_dir = "images" //&lt;--指定圖檔位置
javascripts_dir = "javascripts"
</code></pre>

<p>原來是要把icons的資料夾擺在images底下才行，重新指定好位置以後，再一次的compile，就會發現，Compass已經合好圖了！而且連CSS都寫好了！</p>

<pre><code>.icons-sprite, .icons-facebook, .icons-plurk {
  background: url('/images/icons-s78250ef0c5.png') no-repeat;
}

.icons-facebook {
  background-position: 0 0;
}

.icons-plurk {
  background-position: 0 -48px;
}
</code></pre>

<p>太強大了！難怪很多人用了都回不去了，因為小弟我也是剛學沒多久，所以還有很多更強大的功能就要請各位自己去發掘了</p>

<p>參考資料:</p>

<p><a href="http://blog.visioncan.com/2011/compass-sass-your-css/" target="_blank">用強大的compass+sass寫css</a></p>

<p><a href="http://kw0006667.wordpress.com/compass-%E2%80%93-%E4%BD%BF%E7%94%A8-ruby-compass-on-windows/" target="_blank">Compass – 使用 Ruby + compass on Windows</a></p>

<p>如有錯誤，歡迎指正</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[jQuery] 快樂的Happy.js]]></title>
    <link href="http://rx836.github.com/blog/jquery-happyjs/"/>
    <updated>2012-09-13T15:45:00+08:00</updated>
    <id>http://rx836.github.com/blog/jquery-happyjs</id>
    <content type="html"><![CDATA[<p>今天看到有人分享<a href="http://happyjs.com/" target="_blank">Happy.js</a>，因為名字的關係引起了我的興趣，好奇的想說用這個plugin是不是寫起來很快樂，所以決定來玩一下</p>

<!--more-->


<p>事實證明&#8230;，其實並沒有特別Happy，當然這只是取名字而已XD，Happy.js其實是一套驗證表單的plugin，官方網站強調的是它相當的輕量且容易擴充，而實際檔案大概也只有3kb左右，用法也相當的簡單</p>

<p>首先一樣是引入js部分，分別是jQuery和happy.js還有happy.methods.js，可以直接下載<a href="http://github.com/andyet/Happy.js/zipball/master" target="_blank">範例檔</a></p>

<pre><code>&lt;script src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.1/jquery.min.js"&gt;&lt;/script&gt;
&lt;script src="happy.js"&gt;&lt;/script&gt;
&lt;script src="happy.methods.js"&gt;&lt;/script&gt;
</code></pre>

<p>happy.js是主程式，happy.methods.js是一些擴充的驗證方法</p>

<p>接著是HTML部分</p>

<pre><code>&lt;form id="awesomeForm" action="/lights/camera" method="post"&gt;
  &lt;input id="yourName" type="text" name="name" /&gt;
  &lt;input id="email" type="text" name="email" class="" /&gt;
  &lt;input type="submit" value="go" /&gt;
&lt;/form&gt;
</code></pre>

<p>再來就是js部分</p>

<pre><code>$('#awesomeForm').isHappy({
    fields: {
      '#yourName': {
        required: true,
        message: '忘記填姓名囉！'
      },
      '#email': {
        required: true,
        message: '忘記填Email囉！',
        test: happy.email 
      }
    }
  });
</code></pre>

<p>其實蠻好理解的，主要就是fields裡面要設置需要驗證的欄位，例如像#yourName和#email的input，然後message就是看要出現甚麼錯誤訊息，test這個屬性就是指擴充的驗證方法部分，就是寫在剛剛引用的happy.methods.js裡面，所以你可以除了要求不能空白以外，還可以進一步要求Email的格式</p>

<p>而出現的錯誤訊息就如同下面所示</p>

<pre><code>&lt;span id=​"textInput1_unhappy" class=​"unhappyMessage"&gt;​忘記填Email囉！​&lt;/span&gt;
</code></pre>

<p>這個span會在發生錯誤時添加，而你會看到類別就叫<strong>unhappyMessage</strong>，作者就說他是認真的，不是開玩笑的，因為這真的不是個很開心的訊息 XD</p>

<p>所以你可以添加一些unhappyMessage的CSS樣式讓錯誤訊息更顯著</p>

<p>當然這不一定只能用在表單部分，如果有時候不是一個FORM而是用div所拼湊的表單，要做AJAX的效果，就可以把預設的submitButton改掉，如下所示</p>

<pre><code>$('#awesomeForm').isHappy({
    fields: {
      '#yourName': {
        required: true,
        message: '忘記填姓名囉！'
      },
      '#email': {
        required: true,
        message: '忘記填Email囉！',
        test: happy.email 
      }
    },
    submitButton:'#subBtn' //自己制定的submitButton
});
</code></pre>

<p>不過我後來發現一個小問題，如果是制定的話，再驗證完後要觸發AJAX卻不知道要寫哪裡，所以我後來自己稍微修改了一下原始碼，把要加到AJAX的部分寫在happy.js裡面</p>

<pre><code>function handleSubmit() {
  var errors = false, i, l;
  for (i = 0, l = fields.length; i &lt; l; i += 1) {
    if (!fields[i].testValid(true)) {
      errors = true;
    }
  }
  if (errors) {
    if (isFunction(config.unHappy)) config.unHappy();
    return false;
  } else if (config.testMode) {
    if (window.console) console.warn('would have submitted');
    return false;
  } else {          //這個else是後來自己加上去的
                    //代表通過驗證以後要做的事情，把AJAX的code寫在這裡
  }                 //
}
</code></pre>

<p>當然也可以把這個修改寫得更好看一些，但我用最快的方式來補充這個AJAX的需求</p>

<p>如有錯誤，歡迎指正</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Facebook] Facebook Developer World HACK 2012]]></title>
    <link href="http://rx836.github.com/blog/facebook-world-hack/"/>
    <updated>2012-09-12T23:42:00+08:00</updated>
    <id>http://rx836.github.com/blog/facebook-world-hack</id>
    <content type="html"><![CDATA[<p>因為本身的工作是開發Facebook相關社群APP，所以長期下來有在follow<a href="https://developers.facebook.com/blog/" target="_blank">Facebook Developer Blog</a>，看到<a href="https://developers.facebook.com/blog/post/2012/08/08/facebook-developer-world-hack-2012/" target="_blank">Facebook Developer World HACK 2012</a>原本以為應該跟以前一樣，只有幾個大城市才有舉辦，沒想到仔細一看，竟然有Taipei Taiwan！著實嚇了我一大跳，想當然爾是趕緊報名參加</p>

<!--more-->


<p>入場費蠻便宜的大概七百多塊，以下是我記錄的一些相片，因為是用手機拍的畫質不是很好多見諒</p>

<p>會場是位於信義區裡的克緹國際總部大樓，因為我是第一次參加這種HACK活動，所以我是事後才知道這大概是目前所有HACK活動場地最高級的一次，光看這個view就知道多棒</p>

<p><img src="https://lh6.googleusercontent.com/-v_dRNzia9Lk/UFC9Tzbpx-I/AAAAAAAABe0/V-eKCYRGiNY/s788/IMG_2992.JPG" width="800px" /></p>

<p>整個會場都是落地窗玻璃，所以一整天參加活動甚至寫code都感到非常的舒服，尤其是下午的時候夕陽真的非常非常的漂亮</p>

<p><img src="https://lh3.googleusercontent.com/-SchSdUumDww/UFDCG6u60OI/AAAAAAAABfc/oHuqMauFcQU/s788/IMG_2985.JPG" width="800px" /></p>

<p>這是在進去會場之前的報到，其實這是個類似天橋的地方，天橋旁有個空地可以看到整個信義區的view，我想跨年煙火在這看應該超HIGH的</p>

<p><img src="https://lh5.googleusercontent.com/-PkjKD0yXXbw/UFC7Oui1G4I/AAAAAAAABeE/8cGsvgtZSP4/s788/IMG_2989.JPG" width="800px" /></p>

<p>進去後可以看到活動的大LOGO，是用中華民國的國旗所拼成的，可見Facebook多麼用心</p>

<p><img src="https://lh6.googleusercontent.com/-nX29nNMaBBA/UFC7Qiw-HVI/AAAAAAAABeM/XDv-YGQnG1k/s788/IMG_2991.JPG" width="800px" /></p>

<p>當然還有領到一些東西，例如專屬徽章、T桖、還有貼紙，左邊那台是口譯機，Facebook相當貼心的請了同步翻譯人員，讓英文較不佳的人也可以知道講者在講什麼，而且是同步翻譯喔！</p>

<p><img src="https://lh6.googleusercontent.com/-Xk3LqAjFKGg/UFC7iRksdEI/AAAAAAAABec/tX_5-Qu3fm8/s903/IMG_2994.JPG" width="800px" /></p>

<p>實體版的憤怒鳥XD，code寫累了可以來憤怒一下</p>

<p><img src="https://lh6.googleusercontent.com/-Zb7ubBYygng/UFC7ZbaPDdI/AAAAAAAABeU/VdE3fIhCaTg/s788/IMG_2993.JPG" width="800px" /></p>

<p>吃不完的零食和喝不完的飲料是必備的，啤酒當然也是少不了</p>

<p><img src="https://lh4.googleusercontent.com/-KdhIaeQwmZE/UFC9Prk4u8I/AAAAAAAABek/l-ZN1zb3XHc/s788/IMG_2998.JPG" width="800px" /></p>

<p>上午主要focus在Graph API部分，告訴大家怎麼利用Facebook做一些第三方的APP，也分享一些範例，但其實我蠻失望的，因為我原本會以為可以知道一些我從官方文件或Blog學不到的東西，不過後來想想也是，這本來就不是技術發表會，這是來推廣Facebook的Open Graph</p>

<p><img src="https://lh3.googleusercontent.com/-u-licm0d5hg/UFC9XRWECvI/AAAAAAAABe8/Z7XsaVUYquE/s788/IMG_3003.JPG" /></p>

<p>然後Berlin也是跟我們台灣一樣11號舉行，但因為時差的關係我們進行到下午他們才正要開始，所以還有視訊同步Say Hello，還聽到有人開玩笑的大喊Hello World！ XDD</p>

<p><img src="https://lh4.googleusercontent.com/-uz0E3PyUkgQ/UFC9R3twXkI/AAAAAAAABes/mWRevtEOLC4/s903/IMG_3001.JPG" /></p>

<p>因為下午時間就是開始寫code，但我大概接近中午的時候就開始寫了，因為我覺得我時間一定不夠，所以我一有想法就趕快開始動手了，順便簡單的分享一下我的心路歷程</p>

<p>第一次參加這種HACK活動，其實本來沒有什麼頭緒，甚至早上還都只是認為來這邊拜大神，吃喝一下就滿足了，可是後來在認識的前輩鼓勵之下，我也想來挑戰一下自己的極限，看看在這種氛圍底下我可以發揮到什麼程度，所以心一橫，我就決定來真的，好好拼一下</p>

<p>因為工作關係平常本來就是FB重度使用者，所以在發想要做啥這個階段，對我來說不是很困難，不過以後參加別的HACK就可能要先想好做什麼了，因為發想其實應該是最困難的，我想做的是因為我平常出去玩很喜歡用手機拍照上傳到FB，可是如果回家要寫BLOG的話，整理照片那些又很麻煩，所以我決定做一個簡單的工具，可以抓取妳出去玩的時候拍照上傳的照片，加上說明文字，並且幫你拼湊成HTML碼然後丟到HTML編輯器裡面，讓你按幾下就可以有一個BLOG的基本範本存在，而就不用煩惱BLOG要怎麼開頭</p>

<p>定好方向以後，就開始查官方文件，並且邊做邊調整細微的功能，因為是一人團隊的關係，所以我在ICON方面就用了bootstrap，省去了很多美工，Server端的code我也都沒寫，純粹都是用js來完成這個網站，結果一進入狀態以後，時間就過超快的，一下就天黑了</p>

<p><img src="https://lh3.googleusercontent.com/-858tykFHwq0/UFC9XtZTnOI/AAAAAAAABfA/j-URBx8q624/s788/IMG_3005.JPG" width="800px" /></p>

<p>到了吃晚飯時間，我起來走了一下，發現還是很多人在拼呀</p>

<p>後來因為我沒注意到要上去DEMO的人要去網站註冊，所以我錯失了上台分享的機會，這讓我覺得蠻可惜的，雖然做的不是很好，但有一個展現自己的機會應該要好好把握</p>

<p><img src="https://lh6.googleusercontent.com/-cJGtuvW_5ss/UFC9YhdCjcI/AAAAAAAABfE/dNz5OY_6rKo/s788/IMG_3007.JPG" width="800px" /></p>

<p>最後總共有30幾隊報名，大家真的都很厲害，而且評分有分好幾種得獎名額，例如最佳mobile或是最佳game，而且只要得獎都有IPAD可以拿，超大手筆的！不過只有第一名有機會去矽谷再跟全世界的人比一次</p>

<p>這是我人生的第一個HACK，真的收穫很多，也大開眼界，期許自己有一天能在上舞台分享我的東西，但在那之前可能要好好的加強自己的能力才行:)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[JavaScript] 建立物件的第三招-自訂建構式函式]]></title>
    <link href="http://rx836.github.com/blog/javascript-custom-function/"/>
    <updated>2012-09-11T00:43:00+08:00</updated>
    <id>http://rx836.github.com/blog/javascript-custom-function</id>
    <content type="html"><![CDATA[<p>在前面一篇文章<a href="http://blog.rx836.tw/blog/javascript-patterns-1/" target="_blank">[JavaScript] 談物件, 實字與建構式</a>，裡面有講到關於物件的建立，不過礙於篇幅，只談到<strong>實字模式(literal patterns)</strong>和<strong>建構式函式(constructor functions)</strong>，但其實還有一個建立物件的方法，那就是<strong>自訂建構式函式</strong></p>

<!--more-->


<p>用自定義的建構式函式來建立物件，直接用範例來說明</p>

<pre><code>var kitty = new Cat('Kitty');
var kitty.say(); // "kitty:喵~"
</code></pre>

<p>跟之前的建構式不同的地方在於，之前是用內建的new Object()，這裡我們是用new Cat()，這種模式很像Java使用一個class Cat來建立物件，語法非常的相似，但其實JavaScript並沒有class，Cat只是一個函式</p>

<p>Cat的建構式定義如下</p>

<pre><code>var Cat = function (name){
    this.name = name;
    this.say = function(){
        return name+":喵~";
    }
};
</code></pre>

<p>但其實真正背後運作的方式是這樣，註解為JavaScript實際上還有做一些我們看不到的事情</p>

<pre><code>var Cat = function (name){

    //建立物件實字, 一個空物件
    //var this = {};

    //接著替this加入屬性和方法
    this.name = name;
    this.say = function(){
        return name+":喵~";
    }

    //最後return this
};
</code></pre>

<p>整個的流程首先會建立一個空物件，參考至this變數，藉由this的參考，將屬性和方法加入到此物件(this)，最後再將物件隱含的回傳出去(這邊要注意的是，回傳的情況是假設<strong>沒有其他物件被明確的指定回傳</strong>，後面則會提到)</p>

<p>範例中say()是直接加入至this，不過真正實務中，當你每次new Cat()的時候，就會建立一個新函式到記憶體裡面，很明顯的會浪費記憶體效能，所以最好的方式是加入到原型(prototype)中</p>

<pre><code>//只可以重複利用，都應該放進原型裡面
Cat.prototype.say = function(){
    return this.name+":喵~";
};
</code></pre>

<p>不過這裡有個問題，假如忘記加上new會發生甚麼事情？其實是不會有語法或執行上的錯誤，但卻會導致非預期的錯誤發生，因為沒有加new以後，所有的this都指向全域物件去了！(例如window)</p>

<pre><code>function cat(){
    this.name = "kitty";
}

var kitty = new Cat();
console.log(typeof kitty); // "object" 為物件
console.log(kitty.name);

var kitty2 = Cat();
console.log(typeof kitty2); // undefined 忘了new, 不會有物件this回傳, 變成全域
console.log(window.name); //全域變數
</code></pre>

<p>不過為了預防這種情況發生，可以利用以下寫法</p>

<pre><code>function cat(){

    //還是一樣會建立一個this
    //var this = {};

    var _self = {};     
    _self.name = "kitty";

    //不過return被_self取代了
    return _self;
}
</code></pre>

<p>所以不管User怎麼呼叫，都一定會回傳一個物件，也就是強制new的做法</p>

<pre><code>var kitty = new Cat();  
console.log(kitty.name); // "kitty"

var kitty2 = Cat(); 
console.log(kitty2.name); // "kitty"
</code></pre>

<p>參考資料:</p>

<p><a href="http://www.books.com.tw/exep/prod/booksfile.php?item=0010538538" target="_blank">JavaScript 設計模式</a></p>

<p>如有錯誤，歡迎指正</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[HTML5] 淺談XMLHttpRequest Level 2]]></title>
    <link href="http://rx836.github.com/blog/javascript-xmlhttprequest-level-2/"/>
    <updated>2012-09-10T15:24:00+08:00</updated>
    <id>http://rx836.github.com/blog/javascript-xmlhttprequest-level-2</id>
    <content type="html"><![CDATA[<p>HTML5近來可說是越來越火紅，在諸多優點裡面，最讓開發者期待的就是他的標準化，讓各家瀏覽器不再是各自為王，各自為政，這對於網頁開發者來說，可以說是一大利多(前提是微軟真正的統一?不過看IE10頗有那個味道)，今天要來看的是新的標準化-<strong>XMLHttpReuest Level 2</strong></p>

<!--more-->


<p>XMLHttpRequest其實是一個物件，也是AJAX的核心，微軟的IE5是最早支援這個物件，後來在Google大量應用之下，讓AJAX這項技術開始爆紅，也讓各家瀏覽器開始相繼支援，不過因為XMLHttpRequest(底下簡稱XHR)並不是標準，所以導致實做上必須小心各家瀏覽器的差異</p>

<p>早些時候我們要寫AJAX我們可能會這樣寫</p>

<pre><code>var xhr;

// 依照不同的瀏覽器，取得XMLHttpRequest物件
function CreateAJAX() {
　if (window.ActiveXObject) {
　　try {
　　　return new ActiveXObject("Msxml2.XMLHTTP");
　　} catch (e) {
　　　try {
　　　　return new ActiveXObject("Microsoft.XMLHTTP");
　　　} catch (e2) {
　　　　return null;
　　　}
　　}
　} else if (window.XMLHttpRequest) {
　　return new XMLHttpRequest();
　} else {
　　return null;
　}
}

//回傳資料
function onReponseData () {
　if (xhr.readyState == 4) {
　　if (xhr.status == 200) {

      //do something
      //console.log(xhr.responseText);

　　} else {
　　　alert ("伺服器處理錯誤");
　　}
　} 
}

//送出資料
function ajaxSendRequest(uri) {
  xhr = CreateAJAX() ;
　if (!xhr) {
　　alert ('瀏覽器不支援！');
　　return 0;
　}

  xhr.onreadystatechange = onReponseData;
  xhr.open ("GET", uri, true);
  xhr.send ("");
}
</code></pre>

<p>HTML部分</p>

<pre><code>&lt;input type="button" value="執行" onclick="ajaxSendRequest('index.php')" &gt;
</code></pre>

<p>大概提一下幾個重要屬性</p>

<p>1.xhr.readyState:XMLHttpRequest狀態，等於4表示數據已經接收完畢</p>

<p>2.xhr.status:狀態碼，200表示正常</p>

<p>3.xhr.responseText:server回應的文字數據</p>

<p>不過假如有時候要取得跨網域的API資料，受限於安全問題，會因為<a href="http://en.wikipedia.org/wiki/Same_origin_policy" target="_blank">同源限制(Same Origin Policy)</a>的關係而受阻，因此有些人可能會使用<a href="http://zh.wikipedia.org/wiki/JSONP" target="_blank">JSONP</a>來解決此類問題，不過未來在新的標準XMLHttpRequest Level 2會有解決方法</p>

<p>新的XHR的特點如下</p>

<p>1.可以設置HTTP請求時限</p>

<p>2.可以使用FormData管理表單數據</p>

<p>3.可以上傳檔案</p>

<p>4.可以跨網域請求</p>

<p>5.可以獲得server端二進制數據</p>

<p>6.可以獲得數據傳輸的進度訊息</p>

<p>這裡礙於篇幅只介紹請求時限和跨網域請求部分</p>

<h2>Setting and handling timeouts</h2>

<p>有時候我們在做AJAX時，常會無法預知會花多少時間，如果網路速度一慢，User可能會等上好一段時間，甚至會認為網站當掉而離去，這其實不是個好的User Experience</p>

<p>所以在新的標準裡面我們可以這樣做</p>

<pre><code>xhr.timeout = 3000;
</code></pre>

<p>整個範例程式大概如下</p>

<pre><code>function makeRequest() {
  var url = 'index.php';
  var onLoadHandler = function(event){
     // Parse the JSON and build a list.
  }
  var onTimeOutHandler = function(event){
    var content = document.getElementById('content'),
      p = document.createElement('p'),
      msg = document.createTextNode('Just a little bit longer!');
      p.appendChild(msg);
      content.appendChild(p);

      // Restarts the request.
      event.target.open('GET',url);

      // Optionally, set a longer timeout to override the original.
      event.target.timeout = 6000;
      event.target.send();
  }
  var xhr = new XMLHttpRequest();
  xhr.open('GET',url);
  xhr.timeout = 3000;
  xhr.onload = onLoadHandler;
  xhr.ontimeout = onTimeOutHandler;
  xhr.send();
}

makeRequest();
</code></pre>

<p>可以在index.php裡面寫延遲4秒，會發現第一次請求時，會出現<strong>Just a little bit longer!</strong>的提示文字，第二次才順利取得資料，這是因為一開始的等待時間是設定三秒，第二次是六秒</p>

<p><em>備註:Chrome和Safari尚未支援XHR timeouts，只有Oprea和Firefox還有IE10有，IE8和IE9有支援不過用的是XDomainRequest物件</em></p>

<h2>Requesting data from another domain</h2>

<p>跨網域的請求問題(Cross-origin resource sharing，簡稱CORS)，在新的XMLHttpRequest Level 2得到解答，可以針對不同的網域發出請求，但使用時除了要注意瀏覽器是否支援以外，同時Server端也要允許存取才行，而程式寫法其實跟以前一樣</p>

<p>這裡有個<a href="http://devfiles.myopera.com/articles/9482/xhr-credentials.html" target="_blank">範例</a>可以看看</p>

<p>進去範例打開開發者工具，點下Make request的按鈕，查看回應標頭</p>

<p><img src="https://lh3.googleusercontent.com/-gcWY8Edjbn8/UE2qKLxkU1I/AAAAAAAABdk/67b8otL39m8/s492/1.jpg" width="492px" /></p>

<p>會發現<strong>Access-Control-Allow-Origin</strong>的值是<strong>http://devfiles.myopera.com</strong>，也就是此範例的網域，代表只允許此網域的請求，另外<strong>access-control-allow-credentials</strong>的值為ture，表示允許跨網域請求</p>

<p>為了驗證限制某個網域的請求(Access-Control-Allow-Origin)，我自己寫了一個js去對範例中請求的server做Request</p>

<p><img src="https://lh3.googleusercontent.com/-SpkH2Sjk8Bo/UE2tLkTlrWI/AAAAAAAABd0/9sB5KOXXVE0/s707/2.jpg" width="600px" /></p>

<p>會發現雖然狀態碼為200，但實際上根本就沒有東西回應</p>

<p><em>備註:除了IE8與IE9，其他主流瀏覽器都支援此項功能</em></p>

<p>HTML5裡面實在太多可以玩了，也難怪會被譽為殺手級的技術，大家記得在使用這些功能前先查查瀏覽器支援的程度，畢竟HTML5的標準都還在制定中</p>

<p>參考資料:</p>

<p><a href="http://dev.opera.com/articles/view/xhr2/" target="_blank">Introduction to XMLHttpRequest Level 2</a></p>

<p><a href="http://dev.opera.com/articles/view/dom-access-control-using-cross-origin-resource-sharing/" target="_blank">DOM access control using cross-origin resource sharing</a></p>

<p><a href="http://www.ruanyifeng.com/blog/2012/09/xmlhttprequest_level_2.html" target="_blank">XMLHttpRequest Level 2 使用指南</a></p>

<p><a href="http://jck11.pixnet.net/blog/post/11624882-ajax%E6%A0%B8%E5%BF%83-xmlhttprequest%5B%E7%AD%86%E8%A8%98%5D" target="_blank">AJAX核心-XMLHttpRequest[筆記]</a></p>

<p><a href="http://caterpillar.onlyfun.net/Gossip/JavaScript/SecurityConstraint.html" target="_blank">JavaScript Essence: 安全限制</a></p>

<p><a href="http://design2u.me/blog/936/cross-domain-ajax-cross-domain-data-has-been-retrieved-jsonp" target="_blank">Cross Domain Ajax 跨網域抓取資料(JSONP)</a></p>

<p>如有錯誤，歡迎指正</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[JavaScript] 談物件, 實字與建構式]]></title>
    <link href="http://rx836.github.com/blog/javascript-patterns-1/"/>
    <updated>2012-09-07T23:57:00+08:00</updated>
    <id>http://rx836.github.com/blog/javascript-patterns-1</id>
    <content type="html"><![CDATA[<p>最近在看一本書叫做<strong>JavaScript 設計模式</strong>，英文名稱是JavaScript Patterns，裡面很完整的告訴你如何寫好JavaScript，他不適合初學者看，因為他並不會從很基礎的觀念開始談起，但他卻非常適合像我這種已經知道基礎，並且正要開始往上爬的人閱讀</p>

<!--more-->


<p>所以如果有了基礎後再來看這本書，會發現收穫非常的多，就因為太多了，所以開始紀錄一些學習這本書的心得，讓我可以持續成長，而這篇要講的就是關於JavaScript『物件』這個東西</p>

<p>JavaScript是一個物件導向的語言，在程式碼裡面大部份你所看到的都可以說是物件，除了五種原始型別不是以外，分別如下</p>

<p>1.數值</p>

<p>2.字串</p>

<p>3.布林</p>

<p>4.null</p>

<p>5.undefined</p>

<p>雖然數值、字串和布林不是物件，但如果需要的話，還是可以很容易的轉換成物件來使用</p>

<p>其實當我們在做定義變數這個動作的時候，就已經接觸到物件，因為當定義變數的時候自然會成為『Activation Object』的一個屬性，另外，如果是定義全域變數，也就變成『全域物件』的屬性，更重要的是，其實變數本身也是個物件，因為他自己也擁有屬性</p>

<p>那麼講了那麼多，『物件』到底是甚麼?</p>

<p>其實物件非常的簡單，他只是一堆具名屬性的集合，或是名值對的清單，而且屬性可以是函式，這種時候我們就會叫這個函式為方法</p>

<p><img src="https://lh5.googleusercontent.com/-s9ewb766mCo/UEoidMi9O3I/AAAAAAAABa4/YsFTCbWwRpo/s416/1.jpg" width="416px" /></p>

<p>而物件建立了以後，並不是就說完全不能動他，你還是可以修改他，看是新增或移除裡面的屬性和方法都可以，再來要特別提到的是，有兩種主要的物件要認識一下</p>

<p>第一種叫做原生物件(Native)，也可以叫做內建物件，例如Array、Date或是使用者自行定義(後面會提到)</p>

<p>第二種叫做宿主物件(Host)，例如window物件和所有DOM物件</p>

<p>怎麼去分辨這兩種物件，只要看看物件能不能在瀏覽器底下執行就可以，如果只能在瀏覽器底下執行，就是Host物件，如果在非瀏覽器的地方也可以執行，那就是Native</p>

<p>什麼？你是不是覺得一直講物件物件的，是不是好像少一個東西？沒錯，JavaScript沒有Class，這對於熟悉其他語言來說是個新觀念，要試著去忘掉Class這個東西，當然，沒有了Class，也就沒有繼承，不過卻可以用其他方式來實現，最常見的就是使用原型(Prototype)，不過在往後的文章才會提到原型這個概念</p>

<h2>實字與建構式</h2>

<p>接下來我們就要開始講到如何建立物件，我們都知道物件簡單的來思考就是名值對(key-value pairs)的雜湊表，有點像是關聯式陣列(associative arrays)，而物件就包含了屬性和方法(函式)，建立物件有三種方式，不過本篇文章只會提到兩種，『自訂建構式函式』我們留到以後再說，我們先來談第一種物件實字(literal notation)</p>

<pre><code>//首先建立一個空物件
var cat = {};

//增加一個屬性
cat.name = "kitty";

//增加一個方法
cat.getName = function() {
    return cat.name;
}
</code></pre>

<p>以上就是一個物件實字模式的建立方式，除了以上的寫法，你還可以這樣寫</p>

<pre><code>var cat = {
    name : "kitty",
    getName : function() {
        return this.name;
    }
};
</code></pre>

<p>可能一開始會不太習慣這種寫法，但用久了，你會慢慢喜歡這種寫法，而外面大部份的寫法也都是用實字模式，也是比較推薦的寫法，後面也會提到為什麼推薦，而以下是物件實字的特點</p>

<p>1.將物件用大括號包起來{ }</p>

<p>2.逗號分隔每個屬性和物件，而最後可以不用逗號</p>

<p>3.用分號分隔屬性名稱和屬性值</p>

<p>4.最後別忘了要在最後面的}加上分號</p>

<p>第二個要來談的是用<strong>建構式</strong>來建立物件</p>

<p>雖然JavaScript沒有class，但他卻有一個很相似class的語法，叫做建構式函式(constructor functions)，你可以用建構式函式來建立物件，或著，使用內建的建構式(例如:Object()、Date()、String())，用法如下</p>

<pre><code>var cat = new Object();
cat.name = "kitty";
</code></pre>

<p>從以上程式碼你就可以看到，很明顯的實字程式碼比較短，建構式會比較長，而且實字比較像單純的雜湊表，不用像建構式一樣還要new一個東西出來，感覺上就來的複雜，除了這些以外，建構式其實背後還隱藏了陷阱存在，例如建立物件時有傳遞參數是動態，會導致以下情況發生</p>

<pre><code>//記住, 以下寫法都不好
//這是一個空物件
var o = new Object();
console.log(o.constructor === Object); // true

//突然變成Number
var o = new Object(1);
console.log(o.constructor === Number); // true  

//又變成字串
var o = new Object("I am a string");
console.log(o.constructor === String); // true      
</code></pre>

<p>從以上可以看出，依照參數的不同，會得到來自不同的建構式物件，造成非預期的結果產生，所以再次強調強烈建議使用<strong>實字模式</strong></p>

<p>如有錯誤，歡迎指正</p>
]]></content>
  </entry>
  
</feed>
