<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[apa]]></title>
  <link href="http://rx836.github.com/atom.xml" rel="self"/>
  <link href="http://rx836.github.com/"/>
  <updated>2012-10-30T16:39:49+08:00</updated>
  <id>http://rx836.github.com/</id>
  <author>
    <name><![CDATA[阿帕]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[[學習筆記] 免費玩Amazon Web Service(AWS) EC2]]></title>
    <link href="http://rx836.github.com/blog/first-amazon-web-services/"/>
    <updated>2012-10-30T11:25:00+08:00</updated>
    <id>http://rx836.github.com/blog/first-amazon-web-services</id>
    <content type="html"><![CDATA[<p>Amazon Web Service(AWS)從2006年開始就提供一些雲端服務，但我也是直到近期才開始真正的使用雲端帶來的方便，使用方式說起來也蠻簡單的，不過其實有很多細節設定還要再多摸索學習，這次就先筆記怎麼開始使用AWS的EC2服務</p>

<!--more-->


<p>先來簡單介紹一下什麼是EC2(Elastic ComputeCloud，彈性雲端運算)，其實他就是一台虛擬主機，只要你會架站技術，就可以用遠端連線的方式，選擇安裝Linux或Windows Server 2008，不想使用的話也可以在後台直接關機或刪除虛擬主機，而且AWS最讓人著迷的就是使用多少才算多少錢，如果這個月服務想停止，那這個月就不會跟你算錢！這麼好的服務要怎麼申請呢？直接來看下面步驟</p>

<p>首先到<a href="http://aws.amazon.com/" target="_blank">AWS</a>首頁，選擇Sign up now</p>

<p><img src="https://lh4.googleusercontent.com/-xqNCJQspknM/UI-FGSVVMGI/AAAAAAAABxo/HnD7qU0Zmvc/s1038/2012-10-30_114058.jpg" /></p>

<p>假如沒有Amazon的帳號，必須選擇 <strong> I am a new user</strong> ，然後進行申請的步驟，如果已經擁有帳號，就直接選擇 <strong>I am a returning userand my password is</strong> ，並且輸入密碼，注意要使用AWS的服務必須要有信用卡，因為當你超過免費的使用上限才能直接收錢(無誤)</p>

<p><img src="https://lh5.googleusercontent.com/-HyaQ3OppxQQ/UI-FGY4NJXI/AAAAAAAABxs/RWZ0aOeO_AQ/s915/2012-10-30_113758.jpg" /></p>

<p>申請帳號的過程都是填一些基本資料，和進行一些驗證，過程中就不多加說明了</p>

<p>OK，進來以後你就會看到這個畫面</p>

<p><img src="https://lh3.googleusercontent.com/-HewOX42mZ4k/UI-FHoeHdXI/AAAAAAAABx4/3jnReVoz0ZM/s916/2012-10-30_115202.jpg" /></p>

<p>恩&#8230;琳瑯滿目的英文選項，但沒關係，我們只要挑選我們要的去了解，選擇左邊的 <strong>AWS Management Console</strong></p>

<p><img src="https://lh6.googleusercontent.com/-xDKUaMI1kp0/UI-FLs8jlSI/AAAAAAAAByE/hONoGXerkO0/s885/2012-10-30_115611.jpg" /></p>

<p>接著按下 <strong>Sign in to the AWS Console</strong></p>

<p><img src="https://lh3.googleusercontent.com/-ePuWgaQtyIs/UI-FL3IykXI/AAAAAAAAByM/Unm4rUDg308/s938/2012-10-30_115843.jpg" /></p>

<p>挑選 <strong>EC2</strong></p>

<p><img src="https://lh5.googleusercontent.com/-VlYPIrLzYgk/UI-FLlQrk7I/AAAAAAAAByA/Dhh-5voV3d0/s1137/2012-10-30_120015.jpg" /></p>

<p>這裡要注意的一點是，右上角在名稱的右邊，可以選擇主機的所在位置，鄉民是推薦日本，但如果你想架在別的地方也可以</p>

<p><img src="https://lh3.googleusercontent.com/-L4HVl_bkCg0/UI-F7rDExDI/AAAAAAAAB0g/0Wi1AEjKEas/s344/2012-10-30_154605.jpg" /></p>

<p>接著點選 <strong>Launch Instance</strong></p>

<p><img src="https://lh5.googleusercontent.com/-F0dPwprEHwk/UI-FP_x-OvI/AAAAAAAAByY/9kTJDlGQ_jk/s1223/2012-10-30_144418.jpg" /></p>

<p>選擇 <strong>Classic Wizard</strong>，接著按下 <strong>Continue</strong></p>

<p><img src="https://lh5.googleusercontent.com/-k0dIMHJwYMc/UI-FQ320qmI/AAAAAAAAByg/sLJFd9FLEl0/s1223/2012-10-30_144558.jpg" /></p>

<p>如果要用free的話，記得要挑選 <strong>Root Device Size</strong> 在10G以內的服務，這裡我們選擇的是 <strong>Ubuntu Server 11.10</strong></p>

<p><img src="https://lh5.googleusercontent.com/-wmx8zWDjMBU/UI-FQzGdbkI/AAAAAAAAByk/903ECWkyYVc/s1082/2012-10-30_144823.jpg" /></p>

<p>選完要的系統以後，接著會看到下頁裡有個選項是 <strong>Number of Instances</strong> 代表的是你要建立的主機數量，因為免費的計畫每個月只有提供750小時，所以如果是開兩台的話，則是兩台的時數相加計算，這裡我們建立一台即可</p>

<p>另外因為是免付費，所以能選擇的 <strong>Instance Type</strong> 只有 <strong>Micro(t1.micro, 613Mib)</strong>，其他都要花錢</p>

<p><img src="https://lh5.googleusercontent.com/-8EtQOn5sYIU/UI-FUrXpQZI/AAAAAAAAByw/JU14oyBEQTg/s923/2012-10-30_145517.jpg" /></p>

<p>再來 <strong>INSTANCE DETAILS</strong> 都用預設</p>

<p><img src="https://lh5.googleusercontent.com/-wdMLzfYkYYs/UI-FUntOkpI/AAAAAAAABy0/0i_6vntxIXQ/s928/2012-10-30_145536.jpg" /></p>

<p>設定主機的標籤，在 <strong>Value</strong> 打上你取的名字即可</p>

<p><img src="https://lh4.googleusercontent.com/-MbOIYyJvqEc/UI-FU4x1toI/AAAAAAAABy4/0J1YjC84FAE/s925/2012-10-30_145722.jpg" /></p>

<p>接下來這個步驟相當相當的重要，因為要建立等下登入的金鑰，自訂一個名稱，按下 <strong>Create &amp; Download you key Pair</strong> ，就會下載一個金鑰檔(*.pem)，請妥善保管這個檔案，有這個檔案等下你才能透過SSH登入EC2主機</p>

<p><img src="https://lh6.googleusercontent.com/-1cB05WAXDTc/UI-FWrGmNII/AAAAAAAABzI/3SldjtxLwH8/s925/2012-10-30_145856.jpg" /></p>

<p>防火牆群組沒有特別需求就選擇預設 <strong>quick-start-1</strong></p>

<p><img src="https://lh5.googleusercontent.com/-m-sDdpaLk88/UI-HR5UGR7I/AAAAAAAAB0o/HmQm9N64pqU/s873/2012-10-30_155203.jpg" /></p>

<p>列出一個結果清單，沒問題就按下Launch</p>

<p><img src="https://lh5.googleusercontent.com/-ERYFFX--ARs/UI-FXp1zUYI/AAAAAAAABzY/9tcXui8NhvY/s914/2012-10-30_150423.jpg" /></p>

<p>回到AWS後台，點選左邊的Instance，你會看到主機的狀態</p>

<p><img src="https://lh4.googleusercontent.com/-4tlmBtCA4XQ/UI-FYCQUe0I/AAAAAAAABzg/BzOz1XOpx8Y/s873/2012-10-30_150714.jpg" /></p>

<p>底下有個Public DNS，稍後建立連線時會用到Public DNS</p>

<p><img src="https://lh5.googleusercontent.com/-Q7z3TcmKTvw/UI-FZXjHSTI/AAAAAAAABzo/WC8BPmzR13A/s1222/2012-10-30_151020.jpg" /></p>

<p>接下來就要開始連到我們的EC2虛擬機器，必須透過SSH軟體來遠端登入，Windows大部分都是使用 <strong>Putty</strong> ， 不過因為因為EC2的金鑰是以.pem檔來儲存，Putty無法直接使用，所以要用一個叫做 <strong>Puttygen</strong> 來做金鑰的轉檔</p>

<p><a href="http://the.earth.li/~sgtatham/putty/latest/x86/putty.exe" target="_blank">Putty 下載點</a></p>

<p><a href="http://the.earth.li/~sgtatham/putty/latest/x86/puttygen.exe" target="_blank">Puttygen 下載點</a></p>

<p>執行 <strong>puttygen.exe</strong> 且無需安裝，打開後按下 <strong>Load</strong>，選擇剛才下載的.pem檔</p>

<p><img src="https://lh3.googleusercontent.com/-pdtYelILnZo/UI-FbRF5hQI/AAAAAAAABzw/BAS6tI_xdEk/s496/2012-10-30_152801.jpg" /></p>

<p>選擇 <strong>Sace private key</strong>，存成一個 .ppk檔</p>

<p><img src="https://lh6.googleusercontent.com/-1UG_P7Wqw-g/UI-FdpNAfRI/AAAAAAAABz8/T0TRFtxMVVY/s495/2012-10-30_152856.jpg" /></p>

<p>接著執行剛剛下載的 <strong>Putty.exe</strong> ， 左方選擇 <strong>Connection</strong> → <strong>SSH</strong> → <strong>Auth</strong> ，然後按下 <strong>Browse</strong> 選擇剛剛儲存的.ppk檔</p>

<p><img src="https://lh4.googleusercontent.com/-sQRc74011W4/UI-FdcvHmrI/AAAAAAAABz4/f8ySGHCBkWY/s466/2012-10-30_153144.jpg" /></p>

<p>按下左方的 <strong>Session</strong> ，在Host Name欄位輸入你剛才的 <strong>Public DNS</strong> ，連線類型(Connection type)選擇 <strong>SSH</strong>，按下 <strong>Open</strong> 就可以開始連線囉~</p>

<p><img src="https://lh5.googleusercontent.com/-_Pi8UR1wsNQ/UI-FeJmaw0I/AAAAAAAAB0I/zLQMYgYx1ng/s467/2012-10-30_153603.jpg" /></p>

<p>在 <strong>login as</strong> 後面輸入 <strong>ubuntu</strong> 按下Enter</p>

<p><img src="https://lh6.googleusercontent.com/-hLdma4Q0mBQ/UI-FefgvVOI/AAAAAAAAB0M/J11ZpqvsRjs/s675/2012-10-30_153633.jpg" /></p>

<p>過一會，出現輸入指令的畫面，代表成功連線到EC2主機啦~</p>

<p><img src="https://lh4.googleusercontent.com/-F1v2Uh5v0CI/UI-FfPGHXQI/AAAAAAAAB0Y/sYuU9veEA-o/s676/2012-10-30_153720.jpg" /></p>

<p>那要怎麼把主機關掉不用呢?</p>

<p>回到剛剛的EC2後台，在主機的那一欄的狀態列按下右鍵，會看到四個狀態</p>

<p><img src="https://lh5.googleusercontent.com/-qyQ7NRYxMjg/UI-MfJ_bKoI/AAAAAAAAB1M/xHplgqf1hhQ/s538/2012-10-30_161427.jpg" /></p>

<p><strong>Terminate:</strong> 代表終止，會將主機刪除</p>

<p><strong>Reboot:</strong> 重新開機</p>

<p><strong>Stop:</strong> 代表關機</p>

<p><strong>Start:</strong> 代表開機</p>

<p>記住，只要一開機就會開始用一小時來計算，免費的只有一個月750小時，超過要收錢喔！</p>

<p>那如果想看目前總共花了多少錢，該去哪看呢?</p>

<p>在右上角點擊名稱，點選 <strong>Account Activity</strong></p>

<p><img src="https://lh4.googleusercontent.com/-4ZmMEDZjsE4/UI-Nm_7PFfI/AAAAAAAAB1U/RZEJGKYuGoU/s363/2012-10-30_161809.jpg" /></p>

<p>拉到最下面就可以看到囉~</p>

<p><img src="https://lh3.googleusercontent.com/-zwSmA7ZkDew/UI-NnYpkmpI/AAAAAAAAB1c/_Bnh80-i0Ds/s778/2012-10-30_161909.jpg" /></p>

<p>接下來如果還有玩出甚麼心得，再跟大家分享~</p>

<p>參考資料:</p>

<p><a href="http://blog.soft.idv.tw/?p=823" target="_blank">什麼是雲端服務？阿正老師教你免費玩Amazon EC2雲端主機！(上篇)</a></p>

<p><a href="http://blog.soft.idv.tw/?p=824" target="_blank">阿正老師教你免費玩Amazon EC2雲端主機(下篇)：主機實戰篇</a></p>

<p>很多大大的指導</p>

<p>內容如有錯誤，歡迎指正</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[學習筆記] 如何停止浪費時間在舊版IE的相容性]]></title>
    <link href="http://rx836.github.com/blog/stop-wasting-time-for-ie/"/>
    <updated>2012-10-26T12:25:00+08:00</updated>
    <id>http://rx836.github.com/blog/stop-wasting-time-for-ie</id>
    <content type="html"><![CDATA[<p>IE的痛&#8230;，只有遇過才可以體會到，我相信絕大多數的開發者都曾經有過這個痛，在許多開發者聚會的場合裡面，IE也是最常被拿出來開玩笑，但如何停止浪費你的時間去為了IE做開發上的調整？Mandy Barrington所寫的<a href="http://www.sitepoint.com/how-to-stop-wasting-time-developing-for-internet-explorer/" target="_blank">How to Stop Wasting Time Developing for Internet Explorer</a>或許可以供大家參考</p>

<!--more-->


<h3>1.使用分析工具</h3>

<p>使用分析工具來分析網站的訪客都用哪一個瀏覽器，如果發現只有很少數的人使用舊版IE，就別花費時間去為了那些訪客做修改，在這裡推薦很多網站都使用的<a href="http://www.google.com/analytics/" target="_blank">Google Analytics</a>，最重要的是它還是免費</p>

<h3>2.提醒用戶升級</h3>

<p>假設有些時候某些功能沒辦法在舊版的IE上執行，那善意的提醒也是不錯的效果，可以在這邊下載<a href="http://code.google.com/p/ie6-upgrade-warning/" target="_blank">IE6 Upgrade Warning</a>，這個由Google寫的Project可以幫助你在訪客是使用IE6時，跳出提醒升級的視窗，使用方式就是先下載整包Project，放進你的網站裡面，並且加入以下程式碼</p>

<pre><code>&lt;!--[if lte IE 6]&gt;&lt;script src="js/ie6/warning.js"&gt;&lt;/script&gt;&lt;script&gt;window.onload=function(){e("js/ie6/")}&lt;/script&gt;&lt;![endif]--&gt;
</code></pre>

<p><strong>warning.js</strong>這支檔案可以隨著擺放路徑而調整，假如偵測到訪客是使用IE6就會跳出以下畫面</p>

<p><img src="https://lh5.googleusercontent.com/-rsWJFxHcHAs/UIoszY9MeOI/AAAAAAAABvg/KV_7bbdkMEg/s700/upgrade.jpg" /></p>

<p>當然你也可以換成繁體中文版，只要打開warning.js這支檔案，將前三行的code換成以下的程式碼即可</p>

<pre><code>var msg1 = "你知道你的 Internet Explorer 瀏覽器已經過時了嗎？";
var msg2 = "建議你升級到較新的版本，或是改用其他的瀏覽器，以獲得更好的使用體驗。下面是一份目前廣受歡迎的瀏覽器列表。";
var msg3 = "只要點選圖示，就可以連到各自的下載頁面。";
</code></pre>

<p>記得注意UTF-8的編碼問題</p>

<h3>3.整理問題</h3>

<p>有時候好不容易處理過的BUG，記得要記錄起來，不僅造福將來也有可能碰到問題的自己，也可以幫助團隊的其他人，甚至是社群上同樣遇到相同問題的開發者</p>

<h3>4.提高預算</h3>

<p>假如真的遇到客戶要求一定要支援所有瀏覽器&#8230;.，那就大膽的開口要求提高預算吧！</p>

<p>以上就是作者建議大家的解決方式</p>

<p>IE的相容性問題我想也不是一時可以解決，但至少幾個大型的入口網站(例如Google)已經開始不再支援老舊的IE，而IE6老實說也慢慢的逐漸消失中，微軟似乎也聽見的大家的心聲，至少IE10目前看起來是中規中矩，讓我們還是用樂觀的心情來迎接未來:)</p>

<p>參考資料:</p>

<p><a href="http://www.sitepoint.com/how-to-stop-wasting-time-developing-for-internet-explorer/" target="_blank">How to Stop Wasting Time Developing for Internet Explorer</a></p>

<p><a href="http://code.google.com/p/ie6-upgrade-warning/" target="_blank">ie6-upgrade-warning</a></p>

<p>內容如有錯誤，歡迎指正</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[好書分享] 為什麼搜尋將被淘汰]]></title>
    <link href="http://rx836.github.com/blog/book-review-5/"/>
    <updated>2012-10-25T22:33:00+08:00</updated>
    <id>http://rx836.github.com/blog/book-review-5</id>
    <content type="html"><![CDATA[<p><img src="https://lh4.googleusercontent.com/-_xeoCp7o0h4/UIlc6lVxgCI/AAAAAAAABvI/aIdvp8E_NHU/s360/DJAP00-A60993607000_4f18e070e0a07.jpeg" /></p>

<p>作者:史蒂芬．羅森鮑姆（Steven Rosenbaum）</p>

<p>出版者:美商麥格羅希爾國際股</p>

<!--more-->


<p>身處於資訊爆炸的時代，尤其是近幾年的Facebook崛起，每天早上我打開臉書，塗鴉牆上來自各式各樣的訊息，扣除掉一些個人的心情感想，大部分都是新聞轉貼，科技新知，或是國際大事，也因為這樣，幾乎每一則相關訊息文章，我都會看過一遍，等於是餵我多少訊息，我就會吃下多少訊息，近似強迫症的症狀&#8230;</p>

<p>但這幾個月來，我喜歡針對某些主題去訂閱文章，例如JavaScript或是HTML5，甚至是創業、行銷、科技，而不再是漫無目的的去接受大量的資訊，原因在於其實大部分的資訊對我來說都是雜訊，但因為個性關係不想漏掉任何訊息(就跟常常會盯著通訊軟體看有沒有miss訊息一樣)，不過人的一天時間其實有限，在這資訊大海中不可能每一篇都看過，所以訂閱特定主題的BLOG或文章對我來說特別有幫助</p>

<h3>關於策展(curation)</h3>

<p>這本『為什麼搜尋將被淘汰』內容其實主要講的就是關於<strong>策展(curation)</strong>這件事情，策展就是蒐集某個主題的事情，並將它整理給有需求的人接收，在之前我可能為了想知道關於<strong>社群行銷</strong>這件事，我必須去Google相關的關鍵字，而跳出來的往往都是好幾萬筆的資料文章，在一個一個的點開消化、過濾，得出我想要的東西，但這不會是很好的方式，相反的，如果這時候有個專門在講關於社群行銷的Blog，是不是就省卻了很多時間尋找這方面的資訊?</p>

<p>本書也提到每個人都可以成為一個策展人，還有描述許多正反兩面的意見，例如有些人覺得策展是一件盜取別人的創作內容，應該給予譴責，但另外一派人卻覺得，如果沒有策展人，一篇文章只會在茫茫的資訊大海中被雜訊給淹沒</p>

<p>我個人是覺得，電腦可以利用優秀的演算法去找出『可能』適合我們的資訊，但很多關於『人』的事情電腦反而沒辦法做到像策展者如此出色，書本也提到，假如今天你去吃一家餐廳，發現主廚的手藝不是很好，回到家以後立刻寫了一篇文章告訴大家，但有可能那天主廚因為身體不適或是幾個月後主廚換人了，但這篇文章會從網路消失嗎？並不會，而且會在大家搜尋的時候一次又一次的跑出來</p>

<p>流行銷的作者Jamie，也有針對Curator寫了一篇文章，叫做<a href="http://mrjamie.cc/2012/03/09/curator/" target="_blank">為你的消費者，當一個盡責的「Curator」</a>，有興趣的人也可以去看看</p>

<p>最後我想筆記的重點是:資訊越多，策展者越重要，電腦還尚未可以取代人類</p>

<p>參考資料:</p>

<p>為什麼搜尋將被淘汰</p>

<p>如有想法，歡迎一起提出討論</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[jQuery] jQuery你一定要知道的八件事]]></title>
    <link href="http://rx836.github.com/blog/jquery-8-skill/"/>
    <updated>2012-10-24T23:18:00+08:00</updated>
    <id>http://rx836.github.com/blog/jquery-8-skill</id>
    <content type="html"><![CDATA[<p>jQuery這項技能在面試的時候，已經從&#8221;加分&#8221;變成&#8221;必備&#8221;，由此可知，如果想走web開發，jQuery已經是不可或缺的技術，但jQuery雖然好上手，網路上的教學資源也很多，但有幾件事情是在使用jQuery你一定要知道的</p>

<!--more-->


<h2>1.使用Google CDN-hosted並且保持最新版本</h2>

<p>使用Google CDN的好處是，有許多網站都有使用CDN，所以訪客在拜訪你的網站之前，可能已經先下載過jQuery，之後拜訪你的網站就可以直接從快取中使用，而不用重新下載，增加網站讀取速度，至於保持jQuery最新的版本，除了可以修復一些bug，還可以增加performance</p>

<pre><code>&lt;script type="text/javascript" src="http://rx836.github.com//ajax.googleapis.com/ajax/libs/jquery/1.8.1/jquery.min.js"&gt;&lt;/script&gt;
</code></pre>

<p>有些人可能會發現，為什麼少了<strong>http:</strong>，原因是假如網站遊走在http和https之間，使用這種忽略 <strong>scheme</strong> 的部分，就可以避免因為開啟了https的網頁，但jQuery是http所產生的安全性問題</p>

<h2>2.在開發時搭配Cheat Sheet</h2>

<p>其實不只是初學者，對於資深的開發者也建議使用cheat sheets，可以方便直接查詢，也省去google的麻煩</p>

<p><a href="http://oscarotero.com/jquery/" target="_blank">http://oscarotero.com/jquery/</a></p>

<p><a href="http://www.javascripttoolbox.com/jquery/cheatsheet/" target="_blank">http://www.javascripttoolbox.com/jquery/cheatsheet/</a></p>

<p><a href="http://devcheatsheet.com/tag/jquery/" target="_blank">http://devcheatsheet.com/tag/jquery/</a></p>

<h2>3.不能單純只使用CDN</h2>

<p>剛剛第一點講到建議使用Google CDN，但有一點必須要注意的是，CDN有時候會有失效的問題，像某些地區會連不到Google CDN，這時候就要有locally的jQuery可以備用，判別的JavaScript語法可以這樣寫</p>

<pre><code>&lt;script src="http://rx836.github.com//ajax.googleapis.com/ajax/libs/jquery/1.8.1/jquery.min.js"&gt;&lt;/script&gt;
&lt;script&gt;window.jQuery || document.write('&lt;script src="js/jquery-1.8.1.min.js"&gt;&lt;\/script&gt;')&lt;/script&gt;
</code></pre>

<p>這段程式碼會在抓不到Google CDN時，去抓取自家主機上的jQuery，讓網站不至於因為這樣而掛掉</p>

<h2>4.重複使用jQuery selector</h2>

<p>為了優化jQuery，千萬不要這樣寫</p>

<pre><code>$("#mySmashingID").css("color", "pink");
$("#mySmashingID").css("font", "Verdana");
$("#mySmashingID").text("Some error message goes here!");
</code></pre>

<p>假如要針對同個selectors做操作，不應該重複呼叫自己，而是要利用jQuery鏈結的特性串起來</p>

<pre><code>$("#mySmashingID").css({ "color": "pink", "font": "Verdana"}).text("Some error message goes here!!");
</code></pre>

<h2>5.將重複使用的selector宣告一個變數存起來</h2>

<p>假如你會針對一個selector在很多地方使用到</p>

<pre><code>$(‘#mySmashingGag’).appendTo(‘#mysidebar’);
$(‘#mySmashingGag’).addClass(‘widget’);
$(‘#mySmashingGag’).hide();
$(‘#mySmashingGag’).fadeIn(‘fast’);
</code></pre>

<p>你應該將他存入一個變數，並且使用變數來操作，這樣也可以增加效能，而不會一直去做selector</p>

<pre><code>var mySmashingGag = $(‘#mySmashingGag’);
mySmashingGag.appendTo(‘#mysidebar’);
mySmashingGag.addClass(‘widget’);
mySmashingGag.hide();
mySmashingGag.fadeIn(‘fast’);
</code></pre>

<h2>6.使用ID而不要使用class</h2>

<p>jQuery骨子裡其實還是JavaScript，所以不管如何速度再快也比不上原生的JavaScript快，所以如果使用ID來選取元素的話，就會使用JavaScript的原生方法 <strong>getElementByID</strong>，效能就會比較快，相反的不是使用原生方法的class效能就會比較慢</p>

<p>不要使用class</p>

<pre><code>// Selecting each item at once
for (i = 0; i &lt; 900; i++) {
    var selectedItem = $('.mySmashingItem' + i);
}
</code></pre>

<p>使用ID</p>

<pre><code>// Selecting each item at once
for (i = 0; i &lt; 900; i++) {
    var selectedItem = $('#mySmashingItem' + i);
}
</code></pre>

<h2>7.使用縮寫</h2>

<p>正常來說會這樣寫</p>

<pre><code>$(document).ready(function (){
    // your awesome code here
});
</code></pre>

<p>但其實可以這樣寫</p>

<pre><code>$(function (){
    // your awesome code here
});
</code></pre>

<h2>8.使用context</h2>

<p>當你再使用選取器(selectors)的時候，jQuery會針對整個頁面去做搜索直到找到為止，可是其實我們可以縮小範圍</p>

<p>例如原本的寫法</p>

<pre><code>$(‘.mySmashingGag’).on(‘click’, showMenu);
</code></pre>

<p>但我們可以這樣寫</p>

<pre><code>$(‘.mySmashingGag’, ‘#mySidebar’).on(‘click’, showMenu);
</code></pre>

<p>這樣他就會在ID為mySidebar去搜尋class為mySmashingGag的元素</p>

<p>這些其實不難，但都是養成正確寫jQuery的好習慣:)</p>

<p>參考資料:</p>

<p><a href="http://smashinghub.com/8-jquery-crimes-you-really-shouldnt-commit.htm" target="_blank">8 jQuery Crimes You Really Shouldn’t Commit</a></p>

<p><a href="http://blog.miniasp.com/post/2008/10/19/URL-URI-Description-and-usage-tips.aspx" target="_blank">講解 URL 結構與分享幾個相對路徑與絕對路徑的開發技巧 </a></p>

<p>內容如有錯誤，歡迎指正</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Win8] 動態磚初體驗]]></title>
    <link href="http://rx836.github.com/blog/windows8-notifications/"/>
    <updated>2012-10-23T15:27:00+08:00</updated>
    <id>http://rx836.github.com/blog/windows8-notifications</id>
    <content type="html"><![CDATA[<p>最近正參加<a href="http://www.microsoft.com/taiwan/promo/Win8AppFest/detailedRule.htm" target="_blank">Idea × Quality × Speed – Apps 開發者聯盟</a>，想爭取快手獎前100名名額，活動辦法中有提到需符合10項建議中的其中兩項(詳情看活動辦法)，我覺得動態磚是Win8 APP很有特色的一項功能，所以決定把他加入到我的APP，順便學習如何操作動態磚:)</p>

<!--more-->


<p>如果還不太了解Win8 APP的朋友，可以參考之前的<a href="http://blog.rx836.tw/blog/first-win8-app/" target="_blank">[Win8] 入門要學說Hello World</a></p>

<p>在Win8 APP一開始可以從<strong>資訊清單</strong>裡面設定<strong>預設磚</strong>，預設磚會在應用程式第一次安裝時顯示</p>

<p>點擊package.appxmanifest兩下開啟資訊清單編輯器</p>

<p><img src="https://lh5.googleusercontent.com/-op8a6QflCRY/UIZeWzVBBTI/AAAAAAAABt4/5HGif4Mh8hY/s813/A.png" /></p>

<p><strong>標誌:</strong> 是正方形磚的圖檔設定</p>

<p><strong>寬標誌:</strong> 是寬型磚的圖檔設定</p>

<p><strong>小標誌:</strong> 是提供搜尋結果的小圖</p>

<p><img src="https://lh3.googleusercontent.com/-PxTwOp3yqSo/UIZeXz4taNI/AAAAAAAABuA/_61SB2q6UtI/s518/B.png" /></p>

<p>上面的顯示圖1為方形磚，2為寬型磚</p>

<h3>注意事項</h3>

<p>這邊有一點要<strong>特別特別注意</strong>的是，對Win8 APP來說，假如沒有在資訊清單裡面設定<strong>寬標誌</strong>，應用程式將無法切換成寬型磚，所以寬型通知將也無法顯示，小弟我就是在這邊卡了很久，想說程式都沒有錯，為什麼一直無法顯示寬型通知&#8230;</p>

<p>假設你的應用程式有提供寬標誌，對應用程式按下右鍵，就會有選項可以選擇放大或縮小</p>

<p><img src="https://lh3.googleusercontent.com/-1rzB4IyyrZI/UIZeYR6tFBI/AAAAAAAABuI/6aKtLu5S_pA/s570/C.png" /></p>

<p>OK，對動態磚有基本的認識以後，接下來就是JavaScript部份</p>

<p>先宣告一個notifications變數，這裡宣告的目的是取代完整的命名空間，省去每次都要打很長一串程式碼</p>

<pre><code>var notifications = Windows.UI.Notifications;
</code></pre>

<p>接下來就是為你的寬型磚挑選一個範本，並且抓取他的XML內容</p>

<pre><code>var template = notifications.TileTemplateType.tileWideImageAndText01;                      
var tileXml = notifications.TileUpdateManager.getTemplateContent(template);
</code></pre>

<p>動態磚裡面的顯示內容其實就是一個XML的格式，所以我們利用<strong>GetTemplateContent</strong> 方法傳回 <strong>XmlDocument</strong>，也就是下列的XML基本架構</p>

<pre><code>&lt;tile&gt;
    &lt;visual&gt;
        &lt;binding template="TileWideImageAndText01"&gt;
            &lt;image id="1" src=""/&gt;
            &lt;text id="1"&gt;&lt;/text&gt;
        &lt;/binding&gt;
    &lt;/visual&gt;
&lt;/tile&gt;
</code></pre>

<p>後續我們就是透過標準DOM函式來修改這個XML的內容，例如新增文字和新增圖片</p>

<p>新增文字</p>

<pre><code>var tileTextAttributes = tileXml.getElementsByTagName("text");   
tileTextAttributes[0].appendChild(tileXml.createTextNode("我是寬型磚通知"));
</code></pre>

<p>新增圖片</p>

<pre><code>var tileImageAttributes = tileXml.getElementsByTagName("image");
tileImageAttributes[0].setAttribute("src", "http://i.msdn.microsoft.com/dynimg/IC612768.png");
tileImageAttributes[0].setAttribute("alt", "red graphic");  
</code></pre>

<p>以上設定完寬磚型通知以後，接下來是方形磚通知</p>

<pre><code>var squareTemplate = notifications.TileTemplateType.tileSquareText04;
var squareTileXml = notifications.TileUpdateManager.getTemplateContent(squareTemplate);
var squareTileTextAttributes = squareTileXml.getElementsByTagName("text");   
squareTileTextAttributes[0].appendChild(squareTileXml.createTextNode("我是方型磚通知"));
</code></pre>

<p>然後將方型磚通知加到XML節點裡面</p>

<pre><code>var node = tileXml.importNode(squareTileXml.getElementsByTagName("binding").item(0), true);
tileXml.getElementsByTagName("visual").item(0).appendChild(node);
</code></pre>

<p>最後就是利用XML來建立新的通知</p>

<pre><code>var tileNotification = new notifications.TileNotification(tileXml);
</code></pre>

<p>按下Ctrl+F5來看看效果吧</p>

<p><img src="https://lh6.googleusercontent.com/-qKWHXg0ND0Y/UIZeZSVxekI/AAAAAAAABuQ/xU26ZDJgRIA/s771/D.png" /></p>

<p><img src="https://lh3.googleusercontent.com/-1hIF3GPJNp4/UIZeZngTBII/AAAAAAAABuU/T3AO20DhkAI/s771/E.png" /></p>

<p>另外微軟建議通知的內容需要有時效性，所以建議磚的內容不應該超過通知訊息的時效性，也就是說太老舊的訊息就不要再通知囉~，記得幫通知加個時效性，以下程式碼是指10分鐘後將會把通知從磚移除</p>

<pre><code>var currentTime = new Date();
tileNotification.expirationTime = new Date(currentTime.getTime() + 600 * 1000);

notifications.TileUpdateManager.createTileUpdaterForApplication().update(tileNotification);
</code></pre>

<p>參考資料:</p>

<p><a href="http://msdn.microsoft.com/zh-tw/library/windows/apps/hh465439.aspx" target="_blank">傳送磚更新 (使用 JavaScript 和 HTML 的 Metro 樣式應用程式)</a></p>

<p><a href="http://msdn.microsoft.com/zh-tw/library/windows/apps/hh779724.aspx" target="_blank">磚與磚通知概觀 (Metro 樣式應用程式)</a></p>

<p>內容如有錯誤，歡迎指正</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[CSS3] 認識CSS3 transitions]]></title>
    <link href="http://rx836.github.com/blog/css3-transitions-guide/"/>
    <updated>2012-10-20T23:24:00+08:00</updated>
    <id>http://rx836.github.com/blog/css3-transitions-guide</id>
    <content type="html"><![CDATA[<p>一直沒有找個時間好好的了解一下CSS3 transitions，趁著看到<a href="http://www.adobe.com/devnet/html5/articles/using-css3-transitions-a-comprehensive-guide.html" target="_blank">這篇</a>文章，就來筆記一下用法，扎實一下基本功</p>

<!--more-->


<p>CSS3 transitions可以改變css屬性的值，在某個期間內做出變化，類似<a href="http://api.jquery.com/animate/" target="_blank">jQuery.animate()</a>，語法結構如下</p>

<pre><code>.example {     
    transition-property: background-color;     
    transition-duration: 2s;     
    transition-timing-function: ease-in;            
    transition-delay: 1s; 
}
</code></pre>

<p>這裡沒有特別加上prefixes，在真正使用的時候要自行加上，接著是分別講解每個屬性的用途</p>

<p><strong>transition-property:</strong> 指定你要變化的CSS屬性，至於哪些屬性是擁有transition效果可以查看<a href="http://www.w3.org/TR/css3-transitions/#animatable-properties" target="_blank">這張表</a></p>

<p><strong>transition-duration:</strong> 指定transition從開始到結束的變化時間，在數字後面加上s就是以秒計算，用ms就是微秒</p>

<p><strong>transition-timing-function:</strong> 根據時間的進行去改變屬性值的變化速率，也就是貝茲曲線，詳細的介紹可以參考<a href="http://www.w3.org/TR/css3-transitions/#transition-timing-function-property" target="_blank">這篇</a>，基本的有linear, ease-in, ease-out和ease-in-out這些值可以使用</p>

<p><strong>transition-delay:</strong> 可以指定秒或微秒來延遲transition觸發的時間</p>

<h3>Transition shorthand</h3>

<p>為了簡潔也可以這樣寫</p>

<pre><code>.example {     
    transition: background-color 2s ease-in 1s; 
} 
</code></pre>

<p>要特別注意的是，順序的重要性，另外第一個時間代表是<strong>transition-duration</strong>，第二個時間是<strong>transition-delay</strong>，如果你要定義<strong>transition-delay</strong>一定要先定義<strong>transition-duration</strong>才行</p>

<h3>Multiple transitions</h3>

<p>如果想在同個元素上定義複數個transitions，可以用下面寫法</p>

<pre><code>.example {     
    transition:  background-color  2s ease-in 1s,      
    width  2s ease-in-out,      
    height 3s ease-out; 
}
</code></pre>

<p>記得要用<strong>逗號</strong>隔開</p>

<h3>Triggering a transition</h3>

<p>但其實光寫上面那些語法並不能實現transitions，原因在於沒有<strong>觸發</strong>這個動作，所以我們可能要加些&#8221;動作&#8221;，例如比較常見的是<strong>:hover</strong></p>

<pre><code>.example {     
    background-color: green;     
    transition: background-color  2s ease-in 1s; 
    width:100px;
    height:100px;  
} 
.example:hover {     
    background-color: blue 
}
</code></pre>

<p><a href="http://jsfiddle.net/Pa5Uk/1/" target="_blank">範例</a></p>

<p>會看到如果將滑鼠移到div .example上面，會先等待一秒，接著再花兩秒的時間從綠色轉換成藍色</p>

<h3>Transitions triggered by JavaScript</h3>

<p>假如要搭配JavaScript呢？我們可以使用jQuery來示範一下</p>

<p>css</p>

<pre><code>.example {     
    background-color: green;     
    transition: background-color  2s ease-in 1s;
    width:100px;
    height:100px;  
}
.style-change {     
    background-color: blue
}
</code></pre>

<p>html</p>

<pre><code>&lt;div id="a" class="example"&gt;&lt;/div&gt;
</code></pre>

<p>js</p>

<pre><code>$("#a").click(function() {         
    $(".example").toggleClass("style-change");    
}); 
</code></pre>

<p><a href="http://jsfiddle.net/Rnebd/" target="_blank">範例</a></p>

<p>這樣就可以搭配著js來使用transition的效果</p>

<h3>Transition tricks and techniques</h3>

<p>有了前面的一些基本用法以外，接下來介紹的是一些小技巧，前面的<strong>:hover</strong>例子不管是從綠色切換成藍色，還是藍色切換回綠色，都是同樣的效果和速度，但其實可以針對這兩者去做變化，例如</p>

<pre><code>.example {     
    background-color: green;     
    transition: background-color  1s ease-out;
    width:100px;
    height:100px;    
}
.example:hover {     
    background-color: blue;
    transition: background-color  5s linear;
}
</code></pre>

<p>這段意思是從綠色到藍色要花一秒的時間，但從藍色變回綠色要花五秒，就可以做出比較不一樣的效果</p>

<pre><code>.example {     
    width: 100px;     
    height: 100px;     
    background-color: blue;     
    transition: width 0s ease-out 999999s,                 
    height 0s ease-out 999999s; } 

.example:active {     
    width: 200px;     
    height: 200px;     
    transition: width 2s,                 
    height 2s; 
}
</code></pre>

<p>當然也可以把transition-delay設為999999s，這樣就可以將效果一直保存</p>

<p>只是我目前還不知道這樣的保存可以用來做啥就是了&#8230;</p>

<p>參考資料:</p>

<p><a href="http://www.adobe.com/devnet/html5/articles/using-css3-transitions-a-comprehensive-guide.html" target="_blank">Using CSS3 transitions: A comprehensive guide</a></p>

<p><a href="http://www.w3cplus.com/content/css3-transition" target="_blank">CSS3 Transition</a></p>

<p>內容如有錯誤，歡迎指正</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[JavaScript] 如何保留重複參數的函式，不必每次傳遞-Currying]]></title>
    <link href="http://rx836.github.com/blog/javascript-currying/"/>
    <updated>2012-10-18T00:01:00+08:00</updated>
    <id>http://rx836.github.com/blog/javascript-currying</id>
    <content type="html"><![CDATA[<p>有時候我們呼叫某個函式，傳入的參數大多數都是一樣，那我們就可以嘗試保留那些重複的參數，而這個過程就是Currying(Curry化)</p>

<!--more-->


<p>Curry這個命名是一個來自<a href="http://en.wikipedia.org/wiki/Haskell_Curry" target="_blank">Haskell Curry</a>的數學家的名字所命名，Currying是一種轉換過程，至於該怎麼轉換，後面會跟著介紹，我們先來看看以下這段程式碼</p>

<pre><code>function m(x, y){
    return x * y;
}
</code></pre>

<p>這是一段很普通的函式，傳入參數x和y以後做相乘，並且將結果回傳，可是假如有一個情況是，x參數是固定的，y值是動態的，那我們每次呼叫會怎麼做呢？</p>

<pre><code>m(2,1);
m(2,2);
m(2,3);
m(2,4);
...
</code></pre>

<p>這樣看起來雖然不太好，但尚且還可以接受，但如果函式的參數不止兩個呢？</p>

<pre><code>function m(x, y, z, p, k, l){
    return x * y * z * p * k * l;
}
</code></pre>

<p>然後呼叫的時候，只有l參數變動，其他參數每次都固定&#8230;</p>

<pre><code>m(2,3,4,5,6,1);
m(2,3,4,5,6,2);
m(2,3,4,5,6,3);
m(2,3,4,5,6,4);
...
</code></pre>

<p>這時候就會覺得，一定有什麼方法可以更簡化，少打更多的code，這時候就要將函式進行Currying，首先我們要先寫一個泛用的Currying函式</p>

<pre><code>function currying(fn){
    var slice = Array.prototype.slice,
        stored_args = slice.call(arguments, 1);
    return function(){
        var new_args = slice.call(arguments),
            args = stored_args.concat(new_args);
        return fn.apply(null, args);
    };
}
</code></pre>

<p>然後接著寫</p>

<pre><code>function m(x, y){
    return x * y;
}

var new_m = currying(m, 5)​;
new_m(4);
new_m(5);
new_m(6);
</code></pre>

<p>這樣y值不管傳什麼，x值一樣都保持固定的5，程式有點複雜，現在我們就來看看吧，首先來看看變數slice和stored_args分別是什麼</p>

<pre><code>function currying(fn){
    var slice = Array.prototype.slice,
        stored_args = slice.call(arguments, 1);
    console.log(slice); //function slice() { [native code] }        
    console.log(stored_args); // [5]        
}

function m(x, y){
    return x * y;
}

currying(m, 5);​
</code></pre>

<p>我們可以看到，變數slice存放<a href="http://www.w3school.com.cn/js/jsref_slice_string.asp" target="_blank">slice()</a>方法，因為我們想要將傳進來的參數轉換成陣列，並且將第一個參數去掉(這裡指的第一個參數就是m())，所以最後只剩下一個5的陣列</p>

<pre><code>console.log(stored_args); // [5]
</code></pre>

<p>接著後面會return一個函式，函式將會重複的參數存在裡面，等於回傳一個新的函式讓User使用，從console.log可以看到變數new_args和args</p>

<pre><code>function currying(fn){
    var slice = Array.prototype.slice,
        stored_args = slice.call(arguments, 1);
    return function(){
        var new_args = slice.call(arguments),
            args = stored_args.concat(new_args);
        console.log(new_args);//[4] 
        console.log(args);//[5, 4] 
        return fn.apply(null, args);
    };
}

function m(x, y){
    return x * y;
}

var new_m = currying(m, 5);
new_m(4)
</code></pre>

<p>​
回傳的函式會放在變數new_m，而這個函式到底在做些甚麼呢？其實就是將新得到的參數(也就是從new_m(4)傳進來的那個4)取出，接著利用concat將新參數和舊參數合在一起，再將合在一起後的參數([5, 4])丟進當初m()這個函式裡面，達成原本要相乘的任務，這樣當函式的參數一多，重複性高時，就可以做優化，例如就如同類似之前提到的y、z、k皆為重覆值，x值為動態</p>

<pre><code>function currying(fn){
    var slice = Array.prototype.slice,
        stored_args = slice.call(arguments, 1);
    return function(){
        var new_args = slice.call(arguments),
            args = stored_args.concat(new_args);
        return fn.apply(null, args);
    };
}

function m(x, y, z, k){
    return x * y * z * k;
}

var new_m = currying(m, 5, 6, 7)​;
new_m(4);
new_m(5);
new_m(6);
</code></pre>

<p>重複的事情被取代了，這樣程式碼是不是看起來優化了呢？</p>

<p>參考資料:</p>

<p><a href="http://www.books.com.tw/exep/prod/booksfile.php?item=0010538538" target="_blank">JavaScript 設計模式</a></p>

<p>內容如有錯誤，歡迎指正</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[PhoneGap] 第一次開發PhoneGap教學筆記]]></title>
    <link href="http://rx836.github.com/blog/phonegap-first/"/>
    <updated>2012-10-10T22:39:00+08:00</updated>
    <id>http://rx836.github.com/blog/phonegap-first</id>
    <content type="html"><![CDATA[<p>很早很早以前曾經摸過一下Android，還曾想過要走開發手機這條路，但最後還是繼續寫著網頁，不知道選擇對不對，不過至少現在可以用寫網頁的方式做出APP，那就是利用已經出很久的PhoneGap，但到今天才真正的開始學習他，在這邊也會開始慢慢記錄一些有關於PhoneGap的心得</p>

<!--more-->


<p>網路上已經有很多很多的觀念與介紹，所以這邊就不在多述，要開始之前請先安裝<a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html" target="_blank">Java 開發工具包( Java Development Kit , JDK )</a>，建議大家下載JDK6</p>

<p><img src="https://lh3.googleusercontent.com/-O98JK3DRzHM/UHWWC5uq4QI/AAAAAAAABtY/ABoTETFnIJo/s538/1.png" /></p>

<p>安裝好以後接著就下載並安裝<a href="http://www.eclipse.org/downloads/" target="_blanl">Eclipse</a>，Eclipse是一個IDE，一個整合開發環境，類似Microsoft Visual Studio，因為Android官方並沒有推出專屬的手機應用程式開發軟體，但有支援 Eclipse 的官方外掛開發套件</p>

<p><img src="https://lh6.googleusercontent.com/-vDbyAlgXX8M/UHWWDDRPM3I/AAAAAAAABtg/nsLxVsp43L0/s731/2.png" /></p>

<p>以上的安裝和設定過程，都可以參考<a href="http://blog.chinatimes.com/tomsun/archive/2011/11/08/1029787.html" target="_blank">[Android 教學] Android 4.0 SDK 下載安裝中文教學課程講義</a></p>

<p>接著就是下載本篇主角<a href="http://www.phonegap.com/download" target="_blank">PhoneGap</a>，下載以後進行解壓縮</p>

<p>但其實PhoneGap官方網站有詳細的<a href="http://docs.phonegap.com/en/2.1.0/guide_getting-started_android_index.md.html#Getting%20Started%20with%20Android" target="_blank">入門教學</a>，這裏我就直接按照他的步驟敘述</p>

<p>1.首先開啟Eclipse，選擇<strong>New Project</strong></p>

<p>2.選擇new一個<strong>Android Application Project</strong></p>

<p>3.輸入<strong>Application Name</strong>、<strong>Project Name</strong>和<strong>Package Name</strong></p>

<p>4.設定應用程式icon</p>

<p>5.建立一個<strong>Blank Activity</strong></p>

<p>6.在你的Android專案裡面建立新的目錄，分別是</p>

<pre><code>/libs
assets/www
</code></pre>

<p>7.從剛剛下載的PhoneGap的資料夾裡面，找到<strong>lib/android/</strong>，並且複製<strong>cordova-2.0.0.js</strong>到<strong>assets/www</strong>資料夾底下</p>

<p>8.複製<strong>cordova-2.0.0.jar</strong>到<strong>/libs</strong>底下</p>

<p>9.複製整個<strong>xml</strong>這個資料夾到Android專案底下的<strong>/res</strong>資料夾</p>

<p>10.針對剛剛的<strong>cordova-2.0.0.jar</strong>檔案按下右鍵，選擇<strong>Build Paths/ > Configure Build Path</strong>，切換到Libraries這個頁籤，將<strong>cordova-2.0.0.jar</strong>加入到裡面</p>

<p>11.找到<strong>src</strong>資料夾底下，副檔名為java的檔案並且開啟編輯他</p>

<p>增加<strong>import org.apache.cordova.*;</strong>這行程式</p>

<p>修改class&#8217;s extend從Activity改成DroidGap</p>

<p>將<strong>setContentView()</strong>這行取代成<strong>super.loadUrl(&#8220;file:///android_asset/www/index.html&#8221;);</strong></p>

<p>12.接著點擊<strong>AndroidManifest.xml</strong>選擇<strong>Open With > Text Editor</strong></p>

<p>13.將以下程式加到<strong>&lt;uses-sdk&#8230;/></strong>和<strong>&lt;application&#8230;/></strong>tags之間</p>

<pre><code>&lt;supports-screens 
android:largeScreens="true" 
android:normalScreens="true" 
android:smallScreens="true" 
android:resizeable="true" 
android:anyDensity="true" /&gt;
&lt;uses-permission android:name="android.permission.VIBRATE" /&gt;
&lt;uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" /&gt;
&lt;uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" /&gt;
&lt;uses-permission android:name="android.permission.ACCESS_LOCATION_EXTRA_COMMANDS" /&gt;
&lt;uses-permission android:name="android.permission.READ_PHONE_STATE" /&gt;
&lt;uses-permission android:name="android.permission.INTERNET" /&gt;
&lt;uses-permission android:name="android.permission.RECEIVE_SMS" /&gt;
&lt;uses-permission android:name="android.permission.RECORD_AUDIO" /&gt;
&lt;uses-permission android:name="android.permission.MODIFY_AUDIO_SETTINGS" /&gt;
&lt;uses-permission android:name="android.permission.READ_CONTACTS" /&gt;
&lt;uses-permission android:name="android.permission.WRITE_CONTACTS" /&gt;
&lt;uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" /&gt;
&lt;uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" /&gt; 
&lt;uses-permission android:name="android.permission.GET_ACCOUNTS" /&gt;
&lt;uses-permission android:name="android.permission.BROADCAST_STICKY" /&gt;
</code></pre>

<p>14.將以下程式加到<strong>&lt;activity../></strong>這個tag裡面</p>

<pre><code>android:configChanges="orientation|keyboardHidden|keyboard|screenSize|locale"
</code></pre>

<p>15.新增一個<strong>index.html</strong>到<strong>assets/www</strong>資料夾底下，裡面的html碼為</p>

<pre><code>&lt;!DOCTYPE HTML&gt;
&lt;html&gt;
&lt;head&gt;
&lt;title&gt;Cordova&lt;/title&gt;
&lt;script type="text/javascript" charset="utf-8" src="cordova-1.9.0.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;h1&gt;Hello World&lt;/h1&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>接下來就可以點擊專案名稱右鍵，選擇<strong>Run As > Android Application</strong>，開始看結果囉！</p>

<p>假如你沒有AVD可以看<a href="http://blog.chinatimes.com/tomsun/archive/2011/11/24/1054452.html" target="_blank">這篇</a>教學怎麼設定AVD</p>

<p>這樣index.html裡面就是你的Android應用程式的內容了，可以用你熟悉的html+css+js來開發手機應用程式</p>

<p>參考資料:</p>

<p><a href="http://cire.pixnet.net/blog/post/37927775-%5B%E7%AD%86%E8%A8%98%5D--%E7%AC%AC%E4%B8%80%E6%AC%A1%E9%96%8B%E7%99%BC-android-%E7%89%88%E6%9C%AC-phonegap--%2B-jquery-" target="_blank">[筆記] 第一次開發 Android 版本 PhoneGap + JQuery Mobile 就上手</a></p>

<p><a href="http://docs.phonegap.com/en/2.1.0/guide_getting-started_android_index.md.html#Getting%20Started%20with%20Android" target="_blank">Getting Started with Android</a></p>

<p><a href="http://www.eclipse.org/" target="_blank">eclipse</a></p>

<p><a href="http://blog.chinatimes.com/tomsun/archive/2011/11/08/1029787.html" target="_blank">[Android 教學] Android 4.0 SDK 下載安裝中文教學課程講義</a></p>

<p><a href="http://blog.chinatimes.com/tomsun/archive/2011/11/24/1054452.html" target="_blank">[Android 教學] Android 4.0 模擬器安裝設定教學課程講義</a></p>

<p>內容如有錯誤，歡迎指正</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Win8] 入門要學說Hello world]]></title>
    <link href="http://rx836.github.com/blog/first-win8-app/"/>
    <updated>2012-10-08T17:06:00+08:00</updated>
    <id>http://rx836.github.com/blog/first-win8-app</id>
    <content type="html"><![CDATA[<p>最近正在練習開發Win8 App，雖然微軟提供的開發途徑很多，例如C#、C++等，但因為自己對JavaScript比較有興趣，而且微軟也提供利用HTML+JavaScript+CSS就可以開發出Win8 APP，所以就決定朝這個方向前進，因為是第一次開發Win8 APP，想當然要先做出一個Hello world來試試看</p>

<!--more-->


<p>要開發Win8 APP，必須先下載工具，直接到微軟官網下載<a href="http://www.microsoft.com/visualstudio/cht/downloads" target="_blank">Visual Studio Express 2012 for Windows 8</a>，安裝完以後，打開就會問你是否需要開發人員授權，輸入帳號密碼，就可以擁有開發人員的帳號</p>

<p>打開Visual Studio Express 2012(以下簡稱VS 2012)，就會看到以下畫面</p>

<p><img src="https://lh4.googleusercontent.com/-iLMiTXNLEaM/UHKuEKHOTHI/AAAAAAAABsY/DLqeu2umA-M/s786/p1.png" /></p>

<p>接著選【檔案】-> 【新增專案】，就會出現以下的畫面</p>

<p><img src="https://lh4.googleusercontent.com/-SeFZ08v5dSo/UHKuEndFXlI/AAAAAAAABsc/OKsOpJp0zic/s787/p2.png" /></p>

<p>然後選擇【已安裝的】->【範本】->【JavaScript】->【Windows市集】->【空白應用程式】，接著在專案名稱裡面取名為MyHelloWorld，按下確定</p>

<p><img src="https://lh5.googleusercontent.com/-EdDsceusOP8/UHKuEz1w-iI/AAAAAAAABsg/49aDvnhF7Ug/s786/p3.png" /></p>

<p>建立好專案以後，會看到VS 2012已經預設建立好一些檔案，例如像package.appxmanifest資訊清單檔案，主要描述應用程式名稱、介紹、啟動顯示畫面，還有logo.png 和 smalllogo.png分別為大的和小的標誌影像，還有代表市集中的影像storelogo.png，和應用程式啟動時顯示的畫面splashscreen.png</p>

<p>其他就是預設的css和js和應用程式啟動時執行的起始頁default.html</p>

<p>按下ctrl+F5啟動應用程式</p>

<p><img src="https://lh3.googleusercontent.com/-T-_lt_kQehI/UHKuFtbyMpI/AAAAAAAABso/zTQWUiOUyWg/s745/p4.png" /></p>

<p>上面那張圖就是剛剛所提到的啟動顯示畫面圖splashscreen.png</p>

<p>顯示畫面完以後就是主要的APP內容</p>

<p><img src="https://lh3.googleusercontent.com/-7d-UacNm56o/UHKuF2WBmYI/AAAAAAAABss/xQwqzgpJwVI/s745/p5.png" /></p>

<p>default.html長這樣</p>

<pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta charset="utf-8" /&gt;
&lt;title&gt;HelloWorld&lt;/title&gt;

&lt;!-- WinJS 參考 --&gt;
&lt;link href="http://rx836.github.com//Microsoft.WinJS.1.0.RC/css/ui-dark.css" rel="stylesheet" /&gt;
&lt;script src="http://rx836.github.com//Microsoft.WinJS.1.0.RC/js/base.js"&gt;&lt;/script&gt;
&lt;script src="http://rx836.github.com//Microsoft.WinJS.1.0.RC/js/ui.js"&gt;&lt;/script&gt;

&lt;!-- HelloWorld 參考 --&gt;
&lt;link href="http://rx836.github.com/css/default.css" rel="stylesheet" /&gt;
&lt;script src="http://rx836.github.com/js/default.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;p&gt;內容在此處出現&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>對於網頁開發者來說一點都不陌生，這也是Win8 APP主打的賣點，接著我們開始來修改一下內容</p>

<pre><code>&lt;body&gt;
&lt;h1&gt;Hello, world!&lt;/h1&gt;
&lt;p&gt;What's your name?&lt;/p&gt;
&lt;input id="nameInput" type="text" /&gt;
&lt;button id="helloButton"&gt;Say "Hello"&lt;/button&gt;
&lt;div id="greetingOutput"&gt;&lt;/div&gt;
&lt;/body&gt;
</code></pre>

<p>在body裡面加上這些html，按下ctrl+f5執行，會發現有文字有按鈕，但還沒有反應，所以接下來就是重頭戲部分，建立事件處理常式，不過建立之前先來看看default.js裡面有些甚麼</p>

<pre><code>(function () {
    "use strict";

     // Omitted code 

 })(); 
</code></pre>

<p>預設是將js程式碼包裝在自我執行的匿名函式，有用jQuery的人應該不陌生，主要避免命名衝突或避免意外修改到不想修改的值，use strict代表開啟<a href="http://msdn.microsoft.com/zh-tw/library/windows/apps/br230269.aspx" target="_blank">strict 模式</a></p>

<p>其餘的程式碼就是APP的事件監控，但目前還用不到，現在我們會看到default.js裡面有個<em>app.start</em>，首先在他前面先建立一個click事件</p>

<pre><code>function buttonClickHandler(eventInfo) {
    var userName = document.getElementById("nameInput").value;
    var greetingString = "Hello, " + userName + "!";
    document.getElementById("greetingOutput").innerText = greetingString; 
}
</code></pre>

<p>看起來都跟平常寫網頁的方式都一樣，但建立好事件以後要在哪個時間點註冊這個事件呢？答案就是應用程式啟動時</p>

<pre><code>var app = WinJS.Application;
var activation = Windows.ApplicationModel.Activation;
WinJS.strictProcessing();

app.onactivated = function (args) {
    if (args.detail.kind === activation.ActivationKind.launch) {
        if (args.detail.previousExecutionState !== activation.ApplicationExecutionState.terminated) {
            // TODO: This application has been newly launched. Initialize
            // your application here.
        } else {
            // TODO: This application has been reactivated from suspension.
            // Restore application state here.
        }
        args.setPromise(WinJS.UI.processAll());           
    }
};
</code></pre>

<p>微軟都已經把Win8 APP許多的事件都已經處理好，我們只要用他的事件處理常式即可，像<strong>app.onactivated </strong>就是應用程式啟動時會觸發的事件，不過裡面其實還有分<strong>第一次啟用</strong>還是<strong>已經啟動但因為擱置而重新啟用</strong>，不過在這裡我們也先暫時不用管是甚麼時候啟用，因為不管如何我們都要註冊點擊這個事件</p>

<pre><code>    app.onactivated = function (args) {
    if (args.detail.kind === activation.ActivationKind.launch) {
        if (args.detail.previousExecutionState !== activation.ApplicationExecutionState.terminated) {
            // TODO: This application has been newly launched. Initialize
            // your application here.
        } else {
            // TODO: This application has been reactivated from suspension.
            // Restore application state here.
        }
        args.setPromise(WinJS.UI.processAll());

        // Retrieve the button and register our event handler. 
        var helloButton = document.getElementById("helloButton");
        helloButton.addEventListener("click", buttonClickHandler, false);

    }
};
</code></pre>

<p>所以會看到我將點擊事件寫在<strong>args.setPromise(WinJS.UI.processAll())</strong>後面，接著一樣按下ctrl+f5，在對話框中輸入名字，就會出現問候語了</p>

<p><img src="https://lh4.googleusercontent.com/-_NE7vhIsN-w/UHKuGaUHX-I/AAAAAAAABs8/K9SVwBzKgFo/s744/p6.png" /></p>

<p>完成囉！等等，為什麼你的畫面看起來是白色的？大家回去看看default.html有先引用一個CSS檔案進來</p>

<pre><code>&lt;link href="http://rx836.github.com//Microsoft.WinJS.1.0.RC/css/ui-dark.css" rel="stylesheet" /&gt;
</code></pre>

<p>只要將它改成</p>

<pre><code>&lt;link href="http://rx836.github.com//Microsoft.WinJS.1.0.RC/css/ui-light.css" rel="stylesheet" /&gt;
</code></pre>

<p>背景就會變成白色的囉！當然這個是官方提供的預設樣式表，文件上是建議用預設的樣式表為基礎去做客製化修改，至於怎麼修改就看大家的APP風格了</p>

<p>官方建議如果是大量的影像或圖片，建議用深色系的css，如果是文字居多，建議用淺色系的css</p>

<p>參考資料:</p>

<p><a href="http://msdn.microsoft.com/zh-tw/library/windows/apps/hh986964.aspx" target="_blank">建立 &#8220;Hello, world&#8221; 應用程式</a></p>

<p>內容如有錯誤，歡迎指正</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[學習筆記] 創意與提案]]></title>
    <link href="http://rx836.github.com/blog/note-marketing/"/>
    <updated>2012-10-04T18:47:00+08:00</updated>
    <id>http://rx836.github.com/blog/note-marketing</id>
    <content type="html"><![CDATA[<p>前天公司內部教育訓練，請來Migo的行銷總監<a href="http://rexismtw.blogspot.tw/" target="_blank">Rex Pai</a>講師為我們上課，談從創意、到提案還有談行銷習慣，希望能整理自己的思緒，讓自己吸收更多</p>

<!--more-->


<p>再開始之前，先問自己兩個問題</p>

<h3>你現在提案的架構是甚麼？</h3>

<h3>你覺得甚麼地方最難？</h3>

<p>Rex提到，一個頂尖的行銷人永遠都不會忘記<strong>問自己的問題</strong>，然而一份好的提案，該從甚麼地方開始？</p>

<h2>客戶需求</h2>

<p>什麼樣的標準叫做了解客戶需求？ Rex覺得，真正的了解客戶需求就是</p>

<h3>你是不是能看到客戶沒想到的但又該做的事情？</h3>

<p>或是</p>

<h3>你是不是能用提案帶著客戶了解市場趨勢？</h3>

<p>已故蘋果電腦創辦人-Steve Jobs 曾經說過</p>

<h3>「站起來，站在客戶的頭上，看看他還需要什麼？看到了，你就不必卑躬屈膝，你就能好好把事情做好。」</h3>

<p>現今大部分的行銷人員，多半站在客戶的同一條水平上看事情，甚至有時候比客戶還低一些，但如果能站在客戶的頭上看事情，看的更多更遠，展現出專業的能力讓客戶信服，我想提案一定可以更順利</p>

<h2>提案架構</h2>

<p>早期的提案架構為AIDMA</p>

<p><img src="https://lh5.googleusercontent.com/-9nljFVfaAH8/UG6Ex6Hnk3I/AAAAAAAABqw/FOqIxscE4AU/s420/%E5%9C%96%E7%89%871.png" /></p>

<p>分別是引起興趣(Attention)、產生興趣(Interest)、激發慾望(Desire)、強化記憶(Memory)、促使行動(Action)</p>

<p>到了中期，因為網路的快速成長，包括Web site、SEOLPO、SEM、EC、Blog 、Forum、WOM大量的興起，所以提案架構紛紛朝向AISAS</p>

<p><img src="https://lh4.googleusercontent.com/-UmJNJlEC4Q0/UG6F1U2oxWI/AAAAAAAABq4/oZgt0ZBPaJM/s404/%E5%9C%96%E7%89%872.png" /></p>

<p>可以看到網路興起以後，利用廣告吸引消費者注意，消費者都會先去網路上google商品，來決定要不要購買此商品，買了以後有些消費者會更進一步做分享(例如開箱文)，這些分享的資訊又回到網路上供大眾搜尋，達到循環的效果</p>

<p>但到了現在，新的行銷架構則稍微複雜了些</p>

<p><img src="https://lh6.googleusercontent.com/-GlyIWk9SsB4/UG6G-PyXnhI/AAAAAAAABrA/3RIiuJbF0VE/s480/%E5%9C%96%E7%89%873.png" /></p>

<p>最主要多了<strong>體驗</strong>和<strong>熱情</strong>，Rex就舉了海尼根的測字活動，讓網友體驗並且激發熱情，而不是只單單強調海尼根有多好喝，有了熱情，就會激發消費者與身邊的人分享，就如下圖所示</p>

<p><img src="https://lh3.googleusercontent.com/--wJ4Piz76FI/UG6H02CTjII/AAAAAAAABrI/926sAJJIBQk/s648/%E5%9C%96%E7%89%874.png" /></p>

<h2>產業現況</h2>

<p>當然，身為一個行銷人員，一定要很清楚的了解自身的產業狀況，才能給客戶最好的策略和建議，以下是一些數據圖表分析</p>

<p><img src="https://lh4.googleusercontent.com/-BVEbyfs4NT4/UG6IoS9X5eI/AAAAAAAABrQ/Hv4Cl3zORQg/s885/%E5%9C%96%E7%89%875.png" /></p>

<p>從圖表中可知Internet的崛起，影響最深的是紙本媒體，例如雜誌或報紙，有趣的是TV和Radio反而不受什麼影響，從這裡可以知道現代人的生活習慣，還是脫離不了電視和收音機</p>

<p><img src="https://lh6.googleusercontent.com/-rkQZb0Y0su8/UG6IpiylywI/AAAAAAAABrc/d0MYEKGOezs/s1021/%E5%9C%96%E7%89%876.jpg" /></p>

<p>這張圖表對廣告媒體來說，可說是個好消息，一般認為台灣的經濟一年比一年惡劣，但企業對於廣告的預算卻不減反增，這裡值得注意的是，<strong>口碑行銷</strong>正逐年成長當中</p>

<p><img src="https://lh4.googleusercontent.com/-1FCtMXkR_Ig/UG6IqLz1huI/AAAAAAAABrs/-JTRuY4tdX8/s1021/%E5%9C%96%E7%89%877.jpg" /></p>

<p>上圖看到，口碑行銷的興起，壓縮到的是關鍵字廣告，至於網站廣告反而沒甚麼影響</p>

<p><img src="https://lh5.googleusercontent.com/-QNHFlVdPtjc/UG6IqaiEvvI/AAAAAAAABro/Ns-bX9Jp-Sk/s1020/%E5%9C%96%E7%89%879.jpg" /></p>

<p>最有趣的大概就是這張圖了，粉紅色的圓柱代表是2010企業預估要花費的廣告預算金額，黃色是2010真正花的金額，有發現為什麼關鍵字廣告反而比預估的少嗎？Rex說多數企業面臨到的問題是，台灣目前的關鍵字廣告成效都不怎麼好，目前能提出好的關鍵字策略公司並不多，但這也代表著進步空間更大</p>

<h2>案例分享</h2>

<iframe width="560" height="315" src="http://www.youtube.com/embed/WMWu1h_6OfE" frameborder="0" allowfullscreen></iframe>


<p>上面那段影片是BMW的廣告，活動一開始在城市的中間會擺一台虛擬的Mini，參賽者必須先下載專屬的APP，然後持著手機去接近那台Mini，靠近50公尺以內就會收到你的手機裡面，這時候你就必須不停的跑不停的移動，持續一個禮拜，一個禮拜過後，誰能掌握這台Mini，就可以贏得一台車，但如果有人靠近你在50公尺內，很抱歉，車子就被人家收走啦，而重點是，要是網路斷電或手機沒電，車子就會留在原地等著別人拿走，具優勝者表示，他為了這台車過了一個禮拜無法想像的生活，他再也不參加了XD</p>

<p>而這個活動也吸引了將近兩萬多人參與，並且為BMW帶來了高達25%的銷售成長！</p>

<p>參考資料:</p>

<p><a href="http://rexismtw.blogspot.tw/" target="_blank">Rex Pai</a></p>

<p>內容如有錯誤，歡迎指正</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[jQuery] Facebook XXX hours ago的時間生成]]></title>
    <link href="http://rx836.github.com/blog/jquery-plugin-timeago/"/>
    <updated>2012-10-03T01:36:00+08:00</updated>
    <id>http://rx836.github.com/blog/jquery-plugin-timeago</id>
    <content type="html"><![CDATA[<p><a href="http://timeago.yarp.com/" target="_blank">timeago</a>是一套可以快速生成過去發生時間的jQuery plugin，大家應該對於Facebook文字框下方的『xxx hours ago』不會陌生，留言訊息不再只是單純的『x年x月x日 x時x分x秒』，而是可以很貼心的將時間換算給使用者知道，『喔~ 原來這則留言在幾分鐘之前』，這種對User experience來說其實是相當的加分，要實作其實也不難，網路上也有plugin可以方便使用，就趕快來看看如何做出這種效果吧！</p>

<p><img src="https://lh6.googleusercontent.com/-8eJHMArd3w0/UGxqjpAcHYI/AAAAAAAABqY/Z8lDGoeU_58/s409/1.jpg" /></p>

<!--more-->


<p>首先<a href="http://timeago.yarp.com/jquery.timeago.js" target="_blank">下載</a>timeago，和jQuery一起引用到html裡面</p>

<pre><code>&lt;script type="text/javascript" src="http://code.jquery.com/jquery-1.8.2.js"&gt;&lt;/script&gt;
&lt;script type="text/javascript" src="http://timeago.yarp.com/jquery.timeago.js"&gt;&lt;/script&gt;
</code></pre>

<p>接著是html部分</p>

<pre><code>&lt;abbr class="loaded timeago" title="when you opened the page"&gt;&lt;/abbr&gt;
</code></pre>

<p>這個plugin預設是用abbr這個元素，要搭配裡面的title，title屬性待會會存放時間資訊在裡面，接著是js部分</p>

<pre><code>$(function(){
    prepareDynamicDates();      
    $("abbr.timeago").timeago();        

    function prepareDynamicDates() {
        $('abbr.loaded').attr("title", ISODateString(new Date()));                      
    }

    function ISODateString(d){
        function pad(n){return n&lt;10 ? '0'+n : n}
         return d.getUTCFullYear()+'-'
              + pad(d.getUTCMonth()+1)+'-'
              + pad(d.getUTCDate())+'T'
              + pad(d.getUTCHours())+':'
              + pad(d.getUTCMinutes())+':'
              + pad(d.getUTCSeconds())+'Z'
    }       

});
</code></pre>

<p>要注意的一點是，要先將時間轉換成<a href="http://zh.wikipedia.org/wiki/ISO_8601" target="_blank">ISO 8601</a>，ISO 8601是一種國際標準化組織所訂的日期時間表示法，至於要怎麼轉換，網路上已經都有人寫好了，或是直接看上面範例的函式<strong>ISODateString()</strong></p>

<p>接著將轉換後的時間放到abbr這個元素的title屬性，然後使用.timeago()這個方法即可，這樣一打開網頁，就會顯示</p>

<pre><code>less than a minute ago
</code></pre>

<p>過幾分鐘後 就會顯示，</p>

<pre><code>2 minutes ago
</code></pre>

<p>代表已經過了兩分鐘，因為timeago不用重整會自動刷新時間</p>

<p>或是你可以直接看我網頁上的DEMO結果如下</p>

<p>『你開始看這篇文章在<abbr class="loaded timeago" title="when you opened the page"></abbr>』</p>

<script type="text/javascript" src="http://code.jquery.com/jquery-1.8.2.js"></script>


<script type="text/javascript" src="http://timeago.yarp.com/jquery.timeago.js"></script>


<script>
    $(function(){
        prepareDynamicDates();      
        $("abbr.timeago").timeago();        

        function prepareDynamicDates() {
            $('abbr.loaded').attr("title", ISODateString(new Date()));                      
        }

        function ISODateString(d){
            function pad(n){return n<10 ? '0'+n : n}
             return d.getUTCFullYear()+'-'
                  + pad(d.getUTCMonth()+1)+'-'
                  + pad(d.getUTCDate())+'T'
                  + pad(d.getUTCHours())+':'
                  + pad(d.getUTCMinutes())+':'
                  + pad(d.getUTCSeconds())+'Z'
        }       
        
    });
</script>


<p>假如你按F5重整就會發現又回到less than a minute ago (除非js的檔案掛掉，才不會顯示)</p>

<p>但如果是不想用現在時間開始計算，而是希望每則發文的時間開始計算呢？一樣html的部分如下</p>

<pre><code>&lt;abbr class="modified timeago" title="xxx"&gt;&lt;/abbr&gt;
</code></pre>

<p>接著是js部分</p>

<pre><code>$(function(){

    $('abbr.modified').attr("title", "2012-10-02T17:30:33Z");
    $("abbr.timeago").timeago();            

});
</code></pre>

<p>一樣就直接把當初那則發文的ISO 8601的時間丟到title，然後使用.timeago()就可以了</p>

<p>如果你想用更靈活或擴充性更大的plugin，也可以選擇另一款<a href="http://pragmaticly.github.com/smart-time-ago/" target="_blank">Smart Time Ago</a>，靈感就來自於timeago，只是功能更強大</p>

<p>參考資料:</p>

<p><a href="http://pragmaticly.github.com/smart-time-ago/" target="_blank">Smart Time Ago</a></p>

<p><a href="http://timeago.yarp.com/" target="_blank">timeago</a></p>

<p>如有錯誤，歡迎指正</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[CSS] 做網站非學不可的Twitter Bootstrap]]></title>
    <link href="http://rx836.github.com/blog/twitter-bootstrap/"/>
    <updated>2012-10-01T18:41:00+08:00</updated>
    <id>http://rx836.github.com/blog/twitter-bootstrap</id>
    <content type="html"><![CDATA[<p><a href="http://twitter.github.com/bootstrap/" target="_blank">Twitter Bootstrap</a>越來越多人在用了，當然最主要的原因就是他可以幫助網頁開發者快速的開發出，有不錯外觀的web或是mobile apps，這對於許多不擅長外觀設計的網頁工程師們(包括我)，可以說是省下不少煩惱Layout的麻煩，不僅如此，針對按鈕、表格、或是排版，Bootstrap都幫你處理的好好，只要簡單幾個步驟引入即可</p>

<!--more-->


<p>首先要先下載<a href="http://twitter.github.com/bootstrap/getting-started.html" target="_blank">Bootstrap</a>，你可以選擇compil過後的，或是選擇source版本，Bootstrap的css是用Less寫的，所以如果你想修改細節部分，可以下載source版本，一般來說直接用compiled版本即可</p>

<p>接著就會看到有三個資料夾(css &amp; js &amp; img)</p>

<p><img src="https://lh3.googleusercontent.com/-RHqEXjgftnI/UGl5vs7qyaI/AAAAAAAABoU/tKc440KDt5Y/s872/a.jpg" /></p>

<p>可以把他們全部放入你的專案裡面，但引入到html時，css和js就只要選擇有沒有壓縮過的版本就好</p>

<pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
    &lt;head&gt;  
        &lt;meta charset="UTF-8" /&gt;
        &lt;title&gt;example&lt;/title&gt;
        &lt;link href="css/bootstrap.min.css" rel="stylesheet" type="text/css"&gt;        
    &lt;/head&gt;
    &lt;body&gt;
        &lt;script src="http://code.jquery.com/jquery-latest.js"&gt;&lt;/script&gt;
        &lt;script src="js/bootstrap.min.js"&gt;&lt;/script&gt;     
    &lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>然後接下來就可以開始使用了！但請注意還是要引入jQuery喔，接下來就是介紹一些使用範例</p>

<h2>Base CSS examples</h2>

<h3>Buttons</h3>

<p>加上相對應的class以後，就可以秀出相對應的外觀，例如紅色的按鈕class預設為<strong>btn-danger</strong>，Bootstrap很貼心的讓我們不再只有單調的按鈕顏色</p>

<pre><code>&lt;button class="btn dropdown-toggle" data-toggle="dropdown"&gt;Action &lt;span class="caret"&gt;&lt;/span&gt;&lt;/button&gt; 
&lt;button class="btn btn-primary dropdown-toggle" data-toggle="dropdown"&gt;Action &lt;span class="caret"&gt;&lt;/span&gt;&lt;/button&gt; 
&lt;button class="btn btn-danger dropdown-toggle" data-toggle="dropdown"&gt;Danger &lt;span class="caret"&gt;&lt;/span&gt;&lt;/button&gt; 
&lt;button class="btn btn-warning dropdown-toggle" data-toggle="dropdown"&gt;Warning &lt;span class="caret"&gt;&lt;/span&gt;&lt;/button&gt; 
&lt;button class="btn btn-success dropdown-toggle" data-toggle="dropdown"&gt;Success &lt;span class="caret"&gt;&lt;/span&gt;&lt;/button&gt; 
&lt;button class="btn btn-info dropdown-toggle" data-toggle="dropdown"&gt;Info &lt;span class="caret"&gt;&lt;/span&gt;&lt;/button&gt; 
&lt;button class="btn btn-inverse dropdown-toggle" data-toggle="dropdown"&gt;Inverse &lt;span class="caret"&gt;&lt;/span&gt;&lt;/button&gt;
</code></pre>

<p><img src="https://lh4.googleusercontent.com/-phDQRFC7UXQ/UGnPIeFHgVI/AAAAAAAABoo/VL2VekJjEVA/s617/123.jpg" /></p>

<p>特別注意的是，按鈕旁邊有個倒三角形是用css做出來的，也同樣只要在span加一個class為caret即可</p>

<h3>Progress bars</h3>

<p>進度條只要外面包一層div給予相對的class，裡面再加一個div並且命名class為<strong>bar</strong>，<strong>width</strong>就是進度條的長度，這樣就可以用js來修改width顯示目前的進度狀況</p>

<pre><code>&lt;div class="progress progress-info" style="margin-bottom: 9px;"&gt; &lt;div class="bar" style="width: 10%"&gt;&lt;/div&gt; &lt;/div&gt; 
&lt;div class="progress progress-success" style="margin-bottom: 9px;"&gt; &lt;div class="bar" style="width: 20%"&gt;&lt;/div&gt; &lt;/div&gt; 
&lt;div class="progress progress-warning" style="margin-bottom: 9px;"&gt; &lt;div class="bar" style="width: 30%"&gt;&lt;/div&gt; &lt;/div&gt; 
&lt;div class="progress progress-danger" style="margin-bottom: 9px;"&gt; &lt;div class="bar" style="width: 40%"&gt;&lt;/div&gt; &lt;/div&gt;
</code></pre>

<p><img src="https://lh6.googleusercontent.com/-CWMKYBHmiBk/UGpPoPagCQI/AAAAAAAABo8/o7uycvmJotE/s926/123.jpg" /></p>

<p>更酷的是，bar的樣式也可以更改，而不是只有醜醜的實心bar</p>

<pre><code>&lt;div class="progress progress-striped active"&gt; 
&lt;div class="bar" style="width: 40%;"&gt;&lt;/div&gt; 
&lt;/div&gt;
</code></pre>

<p>只要修改class為<strong>progress progress-striped active</strong>，就會有條紋的進度條，而且還加上css3的animation動畫</p>

<h3>Button groups</h3>

<p>也可以將button設為一組群組，就會有群組的樣式</p>

<pre><code>&lt;div class="btn-group" style="margin: 9px 0;"&gt; 
&lt;button class="btn"&gt;Left&lt;/button&gt; 
&lt;button class="btn"&gt;Middle&lt;/button&gt; 
&lt;button class="btn"&gt;Right&lt;/button&gt; 
&lt;/div&gt;
</code></pre>

<p><img src="https://lh4.googleusercontent.com/-iCtFSRwd7UU/UGpYAp2xh6I/AAAAAAAABpQ/BVql_Jk9oto/s187/4.jpg" /></p>

<p>用一個class名為<strong>btn-group</strong>的div包住button就可以</p>

<h3>Horizontal and vertical tabs (with dropdown menus)</h3>

<p>還在煩惱下拉選單嗎?</p>

<pre><code>&lt;ul class="nav nav-tabs"&gt; 
&lt;li class="active"&gt;&lt;a href="#"&gt;Home&lt;/a&gt;&lt;/li&gt; 
&lt;li&gt;&lt;a href="#"&gt;Portfolio&lt;/a&gt;&lt;/li&gt; 
&lt;li class="dropdown"&gt; &lt;a class="dropdown-toggle" data-toggle="dropdown" href="#"&gt;Services &lt;b class="caret"&gt;&lt;/b&gt;&lt;/a&gt; 
&lt;ul class="dropdown-menu"&gt; &lt;li&gt;&lt;a href="#"&gt;Link 1&lt;/a&gt;&lt;/li&gt; 
&lt;li&gt;&lt;a href="#"&gt;Link 2&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt;
</code></pre>

<p>只要用ul li包好，並且加上相對應的class，就可以輕鬆做tab+下拉選單</p>

<p><img src="https://lh5.googleusercontent.com/-ix3_DDLLdWg/UGpZ2cBhygI/AAAAAAAABpY/wzbaSwCDMb8/s303/5.jpg" /></p>

<h3>Navigation bar component</h3>

<p>看到這邊就覺得實在太強大了&#8230;</p>

<pre><code>&lt;div class="navbar"&gt; 
    &lt;div class="navbar-inner"&gt; 
        &lt;div class="container"&gt; &lt;!-- brand class is from bootstrap.css --&gt; 
            &lt;a class="brand" href="#"&gt;My Brand&lt;/a&gt; 
            &lt;div class="nav-collapse"&gt; 
                &lt;ul class="nav"&gt; 
                    &lt;li class="active"&gt;&lt;a href="#"&gt;Home&lt;/a&gt;&lt;/li&gt; 
                    &lt;li&gt;&lt;a href="#"&gt;Services&lt;/a&gt;&lt;/li&gt; 
                    &lt;li class="dropdown"&gt; &lt;a href="#" class="dropdown-toggle" data-toggle="dropdown"&gt;Dropdown &lt;b class="caret"&gt;&lt;/b&gt;&lt;/a&gt; 
                        &lt;ul class="dropdown-menu"&gt; 
                            &lt;li&gt;&lt;a href="#"&gt;Action 1&lt;/a&gt;&lt;/li&gt; 
                            &lt;li&gt;&lt;a href="#"&gt;Action 2&lt;/a&gt;&lt;/li&gt; 
                            &lt;li class="divider"&gt;&lt;/li&gt; 
                            &lt;li class="nav-header"&gt;Header&lt;/li&gt; 
                            &lt;li&gt;&lt;a href="#"&gt;Separated action&lt;/a&gt;&lt;/li&gt; 
                        &lt;/ul&gt; 
                    &lt;/li&gt; 
                &lt;/ul&gt; 
                &lt;form class="navbar-search pull-left"&gt; 
                &lt;input type="text" class="search-query" placeholder="Search"&gt; 
                &lt;/form&gt; 
            &lt;/div&gt;&lt;!-- /.nav-collapse --&gt; 
        &lt;/div&gt; 
    &lt;/div&gt;&lt;!-- /navbar-inner --&gt; 
&lt;/div&gt;&lt;!-- /navbar --&gt;
</code></pre>

<p><img src="https://lh5.googleusercontent.com/-VBBWEKhYfzk/UGpba2H2VSI/AAAAAAAABpg/2KVa_kC0xX0/s647/6.jpg" /></p>

<h3>Using the layout and built-in grid system</h3>

<p>你也可以用他們的grid system</p>

<pre><code>&lt;div class="container"&gt; 
    &lt;div class="row"&gt; 
        &lt;div class="span4"&gt; &lt;!--content--&gt; &lt;/div&gt; 
        &lt;div class="span4"&gt; &lt;!--content--&gt; &lt;/div&gt; 
        &lt;div class="span4"&gt; &lt;!--content--&gt; &lt;/div&gt; 
    &lt;/div&gt; 
&lt;/div&gt;
</code></pre>

<p>預設是 12-column，940 pixel-centered layout</p>

<h3>Responsive design</h3>

<p>連最近很紅的responsive design也有，只要引入他們的<strong>bootstrap-responsive.css</strong>這個css檔案</p>

<h3>Typeahead example</h3>

<p>裡面也有plugin可以使用，例如下拉提示選單</p>

<pre><code>&lt;input type="text" class="span3" style="margin: 0 auto;" 
data-provide="typeahead" 
data-items="4" 
data-source='["Apples","Bananas","Cherries","Dates","Eggplants","Figs","Grapes", "Honeydew","Kiwi","Mango","Peaches","Plums","Raspberries","Strawberries","Watermelon","Zucchini"]'&gt;
</code></pre>

<p><img src="https://lh6.googleusercontent.com/-y8ELDPfXQp4/UGpdfcl99uI/AAAAAAAABpo/A_l1HiZDL2I/s223/7.jpg" /></p>

<p>還有很多使用範例，可以直接去<a href="http://twitter.github.com/bootstrap/index.html" target="_blank">官網看</a>，這樣大概看了一下教學範例，一個網站可能需要的元素，Bootstrap幾乎通通都有，網頁開發人員可以更專注在開發網頁這個事情上面</p>

<p>只是不知道，會不會到後來，大家的網站都長得很像:)</p>

<p>參考資料:</p>

<p><a href="http://www.adobe.com/devnet/html5/articles/twitter-bootstrap.html" target="_blank">Styling your apps with Twitter Bootstrap </a></p>

<p><a href="http://www.w3resource.com/twitter-bootstrap/tutorial.php" target="_blank">Twitter Bootstrap tutorial</a></p>

<p><a href="http://twitter.github.com/bootstrap/index.html" target="_blank">Twitter Bootstrap</a></p>

<p>如有錯誤，歡迎指正</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[學習筆記] 透過實體活動來學習《設計與思考》]]></title>
    <link href="http://rx836.github.com/blog/design-thinking/"/>
    <updated>2012-09-26T00:50:00+08:00</updated>
    <id>http://rx836.github.com/blog/design-thinking</id>
    <content type="html"><![CDATA[<p><strong>Design Thinking</strong>算是我今年才接觸到的新觀念，起初我認為這是一個在探討如何讓外觀看起來更棒，讓使用者的體驗更佳的做法，但直到看過影片之後，我才知道原來並不是這麼一回事，整個想傳達的理念也不如我想的那樣</p>

<!--more-->


<p>下面的影片是《設計與思考》的前導預告片</p>

<iframe width="853" height="480" src="http://www.youtube.com/embed/fR9wMJXFIE8?rel=0" frameborder="0" allowfullscreen></iframe>


<p>看完影片可以知道，強調《設計與思考》的設計並不是一個外觀，他是一種工具，要讓我們先思考問題，去探索問題，並且利用設計去解決問題</p>

<p>他是一種循環，必須不斷的重複尋找問題，了解需求，並且重複的修正，這讓不管是從行銷，設計，甚至是創業也好，都可以運用這個精神來面對</p>

<p>今天剛好也很幸運的，有這個機會參加《精實創業》讀書會，讓Leo老師帶來的Workshop，使我體驗了所謂的設計與思考，讓我收穫非常的多，以下記錄整個過程</p>

<h3>1.訪談</h3>

<p>首先必須透過訪談，先挖掘對方的需求，要多問<strong>為什麼</strong>，嘗試挖掘出自己不曾想過的問題</p>

<h3>2.再更深入訪談</h3>

<p>透過剛剛的訪談，再針對雙方有興趣的主題，繼續深入問下去，試圖找出心裡最深處的聲音</p>

<h3>3.整理筆記</h3>

<p>先整理需求，並且將需求重新解讀為洞見，這個洞見就是一個很深層的需求，或是以前從沒想過的</p>

<h3>4.界定題目</h3>

<p>利用剛剛整理出來的洞見，再去除掉其他雜音(想法)，將它化做一句完整的句子</p>

<p>例如xxx需要一個方法來XXXX(需求)，因為在他的世界裡，XXXXXXX(洞見)</p>

<p>所以舉例來說，老人需要一個方法來<strong>解決孤單</strong>((需求)，因為在他的世界裡，<strong>是沒有人可以一直陪伴著他講話</strong>(洞見)</p>

<h3>5.提出不一樣的點子</h3>

<p>提出不一樣的點子，來解決這個問題，提越多越好，越瘋狂越好，並且必須要用繪畫的方式呈現</p>

<h3>6.分享你的點子&amp;收集回饋</h3>

<p>找個人分享你的點子，但千萬別銷售點子，只做分享，但要記錄對方給你的回饋意見</p>

<h3>7.你的新點子</h3>

<p>根據剛剛回饋的意見，修正自己的點子，讓它更好！</p>

<h3>8.估價點子建置預算</h3>

<p>用認知估算，粗估這個點子大概要花多少錢，不用算很精準</p>

<p>大概的流程圖如下:
<img src="https://lh4.googleusercontent.com/-ZQqVXZv7LAQ/UGMwK7zdK_I/AAAAAAAABoA/0mbOMtNzTo8/s505/a.jpg"  /></p>

<p>整個流程做下來，其實我們就是在做<strong>設計與思考</strong>這件事情，透過訪談去了解需求，並且針對需求去整理出真正的問題，再依據這個問題去想解決的<strong>點子</strong>，然後分享得到<strong>回饋</strong>，再進一步的<strong>修正</strong>，而最後估價的部分，是為了要可以對照第二個階段，也就是<strong>實驗設計假設</strong>而先做的部分，以下是第二階段</p>

<h2>實驗設計假設</h2>

<h3>1.重新定義實驗設計假設</h3>

<p>請將剛剛的點子，重新寫下來，並且用一句話來表達，句子的內容必須是:</p>

<p>『點子xxxx可以解決xxxxx(使用者)的問題是xxxxxx』</p>

<p>所以例如說:</p>

<p>點子【竹蜻蜓】可以解決【上班族】的問題是【塞車通勤】</p>

<h3>2.使用者是誰</h3>

<p>將使用者畫出來，越具體越好</p>

<h3>3.甚麼時候會發生這個問題</h3>

<p>一樣畫出剛剛那個問題發生時使用者會遇到的問題，例如剛剛是【塞車通勤】</p>

<h3>4.發生問題時使用者可能會做些甚麼</h3>

<p>畫出假如發生剛剛描述的問題時，使用者可能會做出什麼，畫越多越好，可以畫成一個連續故事，例如【塞車通勤】發生時，使用者可能改搭【捷運】，就畫一個捷運</p>

<h3>5.規劃一個簡單的活動與故事中的使用者互動</h3>

<p>先規劃一個活動，讓使用者怎麼去體驗剛剛所想的點子，怎麼引起使用者的注意？並且要規畫如何收及使用者的反應？</p>

<h3>6.評估你的實驗</h3>

<p>最後，假設如果這個活動要十個人來實驗，要花多少錢？粗估就好</p>

<p>算算看，透過<strong>實驗設計假設</strong>以後，你所花的實驗費是多少？有發現跟剛剛在第一階段發想點子時，所預估花的錢差很多嗎？</p>

<p>透過這樣的第一階段的思考發想，然後設計點子，一直到第二階段的實驗假設，來了解其實可以不用很快的投入過多的成本，因為我們所想的不一定是對的，也可以避免浪費的狀況發生，造成不必要的失敗和損失，這跟《精實創業》想表達的精神其實是一樣的，透過這次學習，我了解了更多</p>

<p>參考資料:</p>

<p>Leo的Workshop</p>

<p><a href="http://www.designthinkingmovie.com/index_ch.html" target="_blank">《設計與思考》</a></p>

<p><a href="http://www.books.com.tw/exep/prod/booksfile.php?item=0010547374" target="_blank">《精實創業》</a></p>

<p>如有錯誤，歡迎指正</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[JavaScript] 當函式需要傳遞很多參數時]]></title>
    <link href="http://rx836.github.com/blog/javascript-simple-object/"/>
    <updated>2012-09-25T00:06:00+08:00</updated>
    <id>http://rx836.github.com/blog/javascript-simple-object</id>
    <content type="html"><![CDATA[<p>有時候我們可能寫了一個函式，但裡面需要傳遞的參數非常的多，這時候除了要小心哪些是必要的哪些是不必要的參數以外，還要注意參數列的順序不能搞混，這真的是會讓人頭昏眼花&#8230;</p>

<!--more-->


<p>不過，有個方法可以解決這個困擾，就是<strong>設定值物件</strong>，平常我們使用函式可能會這樣寫</p>

<pre><code>function add(parameter1, parameter2, parameter3, parameter4, parameter5) {...}
</code></pre>

<p>可是參數一堆真的會又臭又長，還要注意先後順序，但如果改成這樣寫</p>

<pre><code>var conf = {
    parameter1: "a",
    parameter2: "b",
    parameter3: "c"
}

add(conf)
</code></pre>

<p>將參數全部包成一個物件，再傳給函式，不僅可以不用記住先後順序，還可以安全的略過選用參數，也更容易閱讀和維護，當然新增和移除也比較方便</p>

<p>不過缺點就是要特別去知道參數的名稱，而且物件的屬性名稱並無法做最小化處理</p>

<p>不過當你要設定一堆CSS樣式的時候，或是個人資料很多很繁雜的時候，這個方法倒是很好用的:)</p>

<p>參考資料:</p>

<p>JavaScript 設計模式</p>

<p>如有錯誤，歡迎指正</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[學習筆記] 簡單容易，如何在VM裝Windows 8來玩玩[二]]]></title>
    <link href="http://rx836.github.com/blog/2-vmware-windows-8/"/>
    <updated>2012-09-22T14:33:00+08:00</updated>
    <id>http://rx836.github.com/blog/2-vmware-windows-8</id>
    <content type="html"><![CDATA[<p>延續上一篇<a href="http://blog.rx836.tw/blog/vmware-windows-8/" target="_blank">簡單容易，如何在VM裝Windows 8來玩玩[二]</a>，已經在VM裡面建立一個Windows 8的虛擬機器，現在就來開始安裝系統部分</p>

<!--more-->


<h3>2012/09/25 補充</h3>

<p>更正一下，如果是要開發Windows 8的應用程式，應該要安裝<a href="http://msdn.microsoft.com/zh-TW/evalcenter/jj554510.aspx" target="_blank">Windows 8 evaluation for developers</a>，這裡的Windows 8版本才對，不然會沒辦法安裝VS 2012開發工具&#8230;，而且還有中文版本，因為安裝程序都一樣，所以文章內容一樣可以參考</p>

<p>按下『Play virtual machine』以後，就會出現啟動畫面</p>

<p><img src="https://lh5.googleusercontent.com/-81H0bQbP8eA/UFyf5ev3TRI/AAAAAAAABko/QD4Y-GM2JIk/s903/12.jpg"  /></p>

<p>接著選擇時區『Chinese(Traditional, Taiwan)』，語言只有英文可以選擇</p>

<p><img src="https://lh5.googleusercontent.com/-fBKS1fGZlDk/UFyf5xfRyCI/AAAAAAAABk0/G6XGhTOasN0/s903/13.jpg"  /></p>

<p>按下『Install now』</p>

<p><img src="https://lh6.googleusercontent.com/-Ax-DPQyxZbc/UFyf57uCRkI/AAAAAAAABk4/rU9T-QxMrro/s903/14.jpg"  /></p>

<p>接著會要你輸入產品序號，這時候去之前的<a href="http://windows.microsoft.com/en-US/windows-8/iso" target="_blank">Windows 8 Consumer Preview(消費者預覽版)</a>下載頁，裡面有產品序號(Product key)</p>

<p><img src="https://lh3.googleusercontent.com/-_d98Gtqnc3c/UFyf6UuvMiI/AAAAAAAABlA/p7N_61eQRGI/s860/15.jpg"  /></p>

<p>貼到序號框裡面</p>

<p><img src="https://lh4.googleusercontent.com/-oAOyYz0Eokg/UFyf7GrLx5I/AAAAAAAABlU/y3q_YM9AnO8/s903/16.jpg"  /></p>

<p>勾選『I accept the license terms』，再點『Next』</p>

<p><img src="https://lh6.googleusercontent.com/-NfbwsgksSwI/UFyf7X8MNPI/AAAAAAAABlQ/6-uWUpfp9xc/s903/17.jpg"  /></p>

<p>點選『Custom: Install Windows only』</p>

<p><img src="https://lh6.googleusercontent.com/-Qkt-zeuyf_8/UFyf7r9zNMI/AAAAAAAABlY/bY8Szlo-ibA/s903/18.jpg"  /></p>

<p>直接點『Next』</p>

<p><img src="https://lh3.googleusercontent.com/-kCW-XYnx_SI/UFyf8Qalj0I/AAAAAAAABl0/9LZ4DNqWYeQ/s903/19.jpg"  /></p>

<p>開始安裝囉！</p>

<p><img src="https://lh6.googleusercontent.com/-JFPiO0_vHPo/UFyf8jljh2I/AAAAAAAABlo/X-ZpEfFo5_0/s903/20.jpg"  /></p>

<p>安裝好後進入設定畫面，這裡可以選擇電腦名稱和背景顏色，設定好後一樣按『Next』</p>

<p><img src="https://lh4.googleusercontent.com/-J08q-P3IoD0/UFyf9qrlE9I/AAAAAAAABl8/ZslAPvFNBmg/s903/21.jpg"  /></p>

<p>直接選預設值吧！</p>

<p><img src="https://lh4.googleusercontent.com/-bZOZ2SRntoc/UFyf-HMrfOI/AAAAAAAABmE/a0fcU4Ir3WY/s903/22.jpg"  /></p>

<p>Windows 8可以整合Windows Live Messenger或MSN帳號</p>

<p><img src="https://lh5.googleusercontent.com/-YjC4_qJCucU/UFyf_MjclJI/AAAAAAAABmc/B7zdknpEmD8/s903/23.jpg"  /></p>

<p>輸入密碼</p>

<p><img src="https://lh5.googleusercontent.com/-e7oYsxfVAaM/UFyf_E60dPI/AAAAAAAABmU/pa5aoZVvM_4/s903/24.jpg"  /></p>

<p>確認一些基本資訊，直接點選『Next』</p>

<p><img src="https://lh5.googleusercontent.com/-pZErLzdxSCY/UFyf_4S1FmI/AAAAAAAABmk/cYWchJUWOaU/s903/25.jpg"  /></p>

<p>大功告成！趕快玩玩看吧！</p>

<p><img src="https://lh3.googleusercontent.com/-62nz20DXDUM/UFygAq0QQ6I/AAAAAAAABmw/wkowZ3oShG8/s903/26.jpg"  /></p>

<p>試玩了一下發現真的蠻多東西要重新適應的，包括操作介面和使用習慣，至於好不好用就是見仁見智了:)</p>

<h2>後記</h2>

<p>一定會有人疑惑要怎麼關機，請將滑鼠移到右下角會出現『Settings』，裡面有個『Power』再點『Shut down』即可</p>

<p>其他還有IE10大家也可以玩玩看</p>

<p>參考資料:</p>

<p><a href="http://blog.xuite.net/yh96301/blog/58184430" target="_blank">VMware Player 4.0安裝Windows 8消費者預覽版本(二)</a></p>

<p>如有錯誤，歡迎指正</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[學習筆記] 簡單容易，如何在VM裝Windows 8來玩玩[一]]]></title>
    <link href="http://rx836.github.com/blog/vmware-windows-8/"/>
    <updated>2012-09-21T17:37:00+08:00</updated>
    <id>http://rx836.github.com/blog/vmware-windows-8</id>
    <content type="html"><![CDATA[<p>因為想參加Microsoft的<a href="http://www.microsoft.com/taiwan/promo/Win8AppFest/">Apps開發者聯盟</a>，但其實是想拼前100名就可以得到快手獎XD，獎品是Windows 8 專業版軟體乙套，所以想來挑戰看看，但要先把windows 8安裝起來，所以這篇紀錄一下安裝過程，用的是VM</p>

<!--more-->


<p>當然前提你必須先把VM給裝起來，網路上<a href="http://blog.xuite.net/yh96301/blog/53120472" target="_blank">教學還蠻多的</a>，這篇就不多加闡述</p>

<p>一開始首先要去下載微軟所推出的<a href="http://windows.microsoft.com/en-US/windows-8/iso" target="_blank">Windows 8 Consumer Preview(消費者預覽版)</a>，直接下載32-bit (x86)這個版本就可以，但只有English版本，下載完後開啟VM</p>

<h3>2012/09/25 補充</h3>

<p>更正一下，如果是要開發Windows 8的應用程式，應該要安裝<a href="http://msdn.microsoft.com/zh-TW/evalcenter/jj554510.aspx" target="_blank">Windows 8 evaluation for developers</a>，這裡的Windows 8版本才對，不然會沒辦法安裝VS 2012開發工具&#8230;，而且還有中文版本，因為安裝程序都一樣，所以文章內容一樣可以參考</p>

<p>點選『Create a New Virtual Machine』</p>

<p><img src="https://lh5.googleusercontent.com/-otZSLwijQ0U/UFyf4XwFSyI/AAAAAAAABkc/FNIph_J7JHs/s657/1.jpg"  /></p>

<p>接著點選『I will Install the operating system later』</p>

<p><img src="https://lh5.googleusercontent.com/-xeiYkr8fudM/UFyf8en7F3I/AAAAAAAABls/swewFIyCkmE/s659/2.jpg"  /></p>

<p>作業系統選擇『Microsoft Windows』，接著再選擇『Windows 7』，因為VM沒有Windows 8可以選</p>

<p><img src="https://lh3.googleusercontent.com/-_Co3ZTLZ3bA/UFygAqiA5CI/AAAAAAAABm0/UixQmOxkxiU/s657/3.jpg"  /></p>

<p>輸入虛擬機器的名稱，這邊取名『Windows 8』，再選擇要存放的路徑，然後點選『Next』</p>

<p><img src="https://lh4.googleusercontent.com/-KRAurNJRvLk/UFygBDKQoII/AAAAAAAABm8/YwQLP43AyUQ/s658/4.jpg"  /></p>

<p>接著設定虛擬硬碟的大小，並且設定『Store virtual disk as a single files』，將虛擬硬碟存成一個資料夾，按下『Next』</p>

<p><img src="https://lh3.googleusercontent.com/-EO-2MBYjcEc/UFygBr6bmvI/AAAAAAAABnI/5JjNmotkvEw/s656/5.jpg"  /></p>

<p>再來準備要來設定記憶體和掛載Windows 8映像檔，選擇『Customize Hardware…』</p>

<p><img src="https://lh4.googleusercontent.com/-nbky8ASN0ck/UFygBw-01wI/AAAAAAAABnE/dxdanwgZcjg/s660/6.jpg"  /></p>

<p>調整記憶體，一般來說建議為實體記憶體的3分之1至2分之1之間，官方網站是說至少要1G</p>

<p><img src="https://lh5.googleusercontent.com/-btOEe35_ToI/UFygCdtCjwI/AAAAAAAABnY/P6JM4vBI9Nc/s656/7.jpg"  /></p>

<p>接著選擇『New CD/DVD』的選項，再點『Use ISO image file:』，再按「Browse…」來選擇映像檔</p>

<p><img src="https://lh6.googleusercontent.com/-WxOQRqu4nF8/UFygCyaFR9I/AAAAAAAABng/uQc30JVd0Oo/s658/8.jpg"  /></p>

<p>選擇好映像檔以後就按下『Close』</p>

<p><img src="https://lh4.googleusercontent.com/-v5ICos8qLUQ/UFygC-8bVNI/AAAAAAAABnc/9rp1LeXOO8I/s661/9.jpg"  /></p>

<p>最後按下『Finish』就新增了一個虛擬機器</p>

<p><img src="https://lh6.googleusercontent.com/-5QYBPsTQNwA/UFyf4pX33AI/AAAAAAAABkg/5rhtXII6H1s/s657/10.jpg"  /></p>

<p>按下『Play virtual machine』，開始來進行安裝囉！</p>

<p><img src="https://lh5.googleusercontent.com/-G0VcZ28gqbA/UFyf4laUtKI/AAAAAAAABkk/jvgPOqPFaOE/s659/11.jpg"  /></p>

<p>因為篇幅有點過長，為了方便閱讀，所以分成兩篇來記錄</p>

<p>參考資料:</p>

<p><a href="http://blog.xuite.net/yh96301/blog/58183942" target="_blank">VMware Player 4.0安裝Windows 8消費者預覽版本(一)</a></p>

<p>如有錯誤，歡迎指正</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[jQuery] hoverpulse 滑鼠移入，圖片縮放]]></title>
    <link href="http://rx836.github.com/blog/jquery-hoverpulse/"/>
    <updated>2012-09-20T23:42:00+08:00</updated>
    <id>http://rx836.github.com/blog/jquery-hoverpulse</id>
    <content type="html"><![CDATA[<p>jQuery寫了一陣子，直到最近有個需求，想要做到滑鼠移到圖片上，會微微的放大，才發現這個很常看到的效果，我到今天都還沒實做過</p>

<!--more-->


<p>幸運的是&#8230;，就因為這麼晚才實做，所以早就有人把plugin寫好了，我所用的是<a href="http://www.malsup.com/jquery/hoverpulse/" target="_blank">hoverpulse</a>，用法相當相當的簡單</p>

<p>首先是HTML部份</p>

<pre><code>&lt;div&gt;&lt;img src="a.jpg" /&gt;&lt;/div&gt;
&lt;div&gt;&lt;img src="b.jpg" /&gt;&lt;/div&gt;
&lt;div&gt;&lt;img src="c.jpg" /&gt;&lt;/div&gt;
</code></pre>

<p>再來是jQuery部份</p>

<pre><code>$(document).ready(function() {
    $('div img').hoverpulse();
});
</code></pre>

<p>這樣就完成了！當然什麼值都沒有給的情況下是用default，但如果想要設定放大的幅度和變化的速度，可以這樣寫</p>

<pre><code>$(document).ready(function() {
    $('div img').hoverpulse({
        size: 40,  // number of pixels to pulse element (in each direction)
        speed: 400 // speed of the animation 
    });
});
</code></pre>

<p>真的簡單又明瞭&#8230;</p>

<p>那如果你想加入點擊的事件，你可以這樣寫</p>

<pre><code>$(document).ready(function() {
    $('div img').hoverpulse().each(function() {
        var $img = $(this);                 
        $img.click(function() {

            //點每張圖的事件

            return false;
        });
    });
});
</code></pre>

<p>接下來是我個人好奇去看他的source code，可以看到他先將每個圖片的width和height存到$.data裡面</p>

<pre><code>this.each(function() {
    var $this = $(this);
    var w = $this.width(), h = $this.height();
    $this.data('hoverpulse.size', { w: parseInt(w), h: parseInt(h) });
});
</code></pre>

<p>接著利用到<strong>.hover()</strong>的方法去做出滑鼠移到圖片和移出圖片的效果</p>

<pre><code>// bind hover event for behavior
return this.hover(
    // hover over
    function() {
        var $this = $(this);
        $this.parent().css('z-index', opts.zIndexActive);

        var size = $this.data('hoverpulse.size');
        var w = size.w, h = size.h;
        $this.stop().animate({ 
            top:  ('-'+opts.size+'px'), 
            left: ('-'+opts.size+'px'), 
            height: (h+2*opts.size)+'px', 
            width:  (w+2*opts.size)+'px' 
        }, opts.speed);
    },
    // hover out
    function() {
        var $this = $(this);
        var size = $this.data('hoverpulse.size');
        var w = size.w, h = size.h;

        $this.stop().animate({ 
            top:  0, 
            left: 0, 
            height: (h+'px'), 
            width:  (w+'px') 
        }, opts.speed, function() {
            $this.parent().css('z-index', opts.zIndexNormal);
        });
    }
);
</code></pre>

<p>在移入部份會先將包覆img的div z-index值設到100</p>

<pre><code>$this.parent().css('z-index', opts.zIndexActive);
</code></pre>

<p>然後從data取出之前放入的圖片width和height，接著用<strong>.animate()</strong>來執行放大效果</p>

<pre><code>$this.stop().animate({ 
            top:  ('-'+opts.size+'px'), 
            left: ('-'+opts.size+'px'), 
            height: (h+2*opts.size)+'px', 
            width:  (w+2*opts.size)+'px' 
        }, opts.speed);
</code></pre>

<p>這段code其實就是把你設定的size放大兩倍，並且為了有感覺從圖片中間點開始放大的效果，所以把位置top和left給予負值，等於整張圖片往左上角移動，速度是<strong>opts.speed</strong>，而圖片的position:absolute在整個plugin一開始就已經設定了</p>

<pre><code>// parent must be relatively positioned
this.parent().css({ position: 'relative' });
// pulsing element must be absolutely positioned
this.css({ position: 'absolute', top: 0, left: 0 });
</code></pre>

<p>可以看到包覆img的div是relatively，img是absolute</p>

<p>而滑鼠移開之後只是把值恢復成原來的設定</p>

<pre><code>var $this = $(this);
var size = $this.data('hoverpulse.size');
var w = size.w, h = size.h;

$this.stop().animate({ 
    top:  0, 
    left: 0, 
    height: (h+'px'), 
    width:  (w+'px') 
}, opts.speed, function() {
    $this.parent().css('z-index', opts.zIndexNormal);
});
</code></pre>

<p>將top和left歸為0，height和width恢復成原來的大小，z-index也設回預設值1</p>

<p>當然預設值在plugin的最下面可以自己修改</p>

<pre><code>$.fn.hoverpulse.defaults = {
    size:  20,
    speed: 200,
    zIndexActive: 100,
    zIndexNormal: 1
};
</code></pre>

<p>這樣plugin整個看起來就很清楚明瞭，也可以自己嘗試動手寫寫看喔！</p>

<h2>後記</h2>

<p>Aaron大大說plugin寫法有點舊，而且有點囉嗦XD，他建議我新的寫法，在此特別筆記下來</p>

<p>HTML</p>

<pre><code>&lt;img src="a.jpg" class="resize" width="250"/&gt;
</code></pre>

<p>jQuery</p>

<pre><code>var current_h = null;
var current_w = null;

$('.resize').hover(
    function(){
        current_h = $(this, 'img').height;
        current_w = $(this, 'img').width;
        $(this).stop(true, false).animate({width: (current_w * 1.3), height: (current_h * 1.3)}, 300);
    },
    function(){
        $(this).stop(true, false).animate({width: current_w + 'px', height: current_h + 'px'}, 300);
    }
);
</code></pre>

<p>不要用plugin，直接寫，至於top和left在自己加上就好，跟前面的plugin道理一樣</p>

<p>參考資料:</p>

<p><a href="http://www.malsup.com/jquery/hoverpulse/" target="_blank">hoverpulse</a></p>

<p>如有錯誤，歡迎指正</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Facebook] 如何讓Page Tab的Scroll bar消失以及使用錨點?]]></title>
    <link href="http://rx836.github.com/blog/facebook-page-tab-scroll/"/>
    <updated>2012-09-19T23:53:00+08:00</updated>
    <id>http://rx836.github.com/blog/facebook-page-tab-scroll</id>
    <content type="html"><![CDATA[<p>常常會看到粉絲團裡面的頁籤活動(Page Tab)，都會出現scroll bar，老實說其實有點醜，所以這邊記錄一下怎樣讓Page Tab消失，讓你的頁籤內容有多長，整個Page Tab就有多長，另外順便記錄一下Facebook錨點的問題</p>

<!--more-->


<p>要如何讓Facebook不再出現scroll bar</p>

<p><img src="https://lh5.googleusercontent.com/-UTpcRBt6434/UFntIvLIR-I/AAAAAAAABhU/QxBuOx2nspc/s803/1.jpg" width="800px"  /></p>

<p>這是某個粉絲團裡面的頁籤活動，可以看到有一個scroll bar在右側，消失的方法就是在body裡面加上overflow</p>

<pre><code>&lt;body style="overflow:hidden"&gt;
</code></pre>

<p>但這樣其實有個問題，就是scroll bar雖然消失了，但Page Tab被切到了，也就是說下半部的內容會顯示不出來，所以要在加上JavaScript的code上去</p>

<pre><code>var _app_id = 'xxxx';
var _api_key = '';
//初始化
FB.init({
    appId: _app_id,
    status: true, // check login status
    cookie: true, // enable cookies to allow the server to access the session
    xfbml: true, // parse XFBML        
    oauth: true // enable OAuth 2.0
});
</code></pre>

<p>一般來說這是初始化Facebook的JavaScript SDK，緊接著在後面加上</p>

<pre><code>    FB.Canvas.setAutoGrow();
</code></pre>

<p>這樣就可以讓你Page Tab可以整個顯示出來，而且也不會再出現scroll bar，要注意的是，以前會用<strong>FB.Canvas.setAutoResize</strong>，不過現在不要再用這個語法囉，因為Facebook已經要刪除，不再支援這種寫法</p>

<h2>Facebook 錨點無效</h2>

<p>我們平常寫網頁，我們會這樣設錨點</p>

<pre><code>&lt;a name="h"&gt;我是錨點&lt;/a&gt;
</code></pre>

<p>接著會下這樣的超連結</p>

<pre><code>&lt;a href="#h"&gt;點我跳到我是錨點&lt;/a&gt;
</code></pre>

<p>這樣就可以到達網頁設定好的錨點，但是這樣在Facebook是無效的！因為Facebook Page Tab其實是一個iframe，所以Facebook自己有出SDK可以控制scroll的移動，寫法如下</p>

<pre><code>FB.Canvas.scrollTo(0, 0);
</code></pre>

<p>等於說你可以寫click某個HTML讓他移動到你設定好的座標位置，例如</p>

<pre><code>$('a').click(function(){
    FB.Canvas.scrollTo(0, 300);
});
</code></pre>

<p>這樣意思代表點擊a移動到Page Tab坐標(0, 300)的地方，這樣就可以取代錨點失效的問題了</p>

<p>參考資料:</p>

<p><a href="https://developers.facebook.com/docs/reference/javascript/FB.Canvas.scrollTo/" target="_blank">FB.Canvas.scrollTo</a></p>

<p><a href="https://developers.facebook.com/docs/reference/javascript/FB.Canvas.setAutoGrow/" target="_blank">FB.Canvas.setAutoGrow</a></p>

<p>如有錯誤，歡迎指正</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[學習筆記] 全世界最會說故事的平台-TED]]></title>
    <link href="http://rx836.github.com/blog/introduce-ted/"/>
    <updated>2012-09-15T16:00:00+08:00</updated>
    <id>http://rx836.github.com/blog/introduce-ted</id>
    <content type="html"><![CDATA[<p>如果這是人生最後的十八分鐘，我想講什麼？這是去年受邀擔任TEDxTaipei講者-倒立先生黃明正，為了克服緊張，問自己的問題，同時也是為了講一個清楚重大的人生經驗，所需要準備的心境</p>

<!--more-->


<p><a href="http://www.ted.com/" target="_blank">TED</a>是在1984年於美國矽谷成立，是科技(technology)、娛樂(entertainment)、設計(design)的簡稱，也是一個非營利組織，每年會舉辦一次會議，一開始原本是一個私人聚會，由『資訊建築』的先驅沃曼(Richard Wurman)發想邀請最頂尖的人物來說他們的創意故事，後來TED的影響力持續發酵到今日，已經成為每年一場四天三夜的論壇</p>

<p>因為在商週上看到關於TED的敘述，裡面有提到說故事的方式，因為最近剛好準備一些快講資料，所以這邊做一些心得記錄</p>

<h2>在舞台上做好自己</h2>

<p>要用自己的風格表達，並且熱情的和大家分享自己的故事、工作和心得，要盡量用自己的角度去分享故事，例如『我經歷過最酷的事情』，而不是『我所知道最酷的事情』，像其中一名講者泰勒(Jill Bolte Taylor)所分享的『我腦內的兩個世界』，就是非常好的例子，講者用本身所經歷的中風經驗，來分享對於這個世界的感受，甚至為了讓觀眾更了解腦的構造，還當場秀出真的人腦！</p>

<object width="526" height="374">
<param name="movie" value="http://video.ted.com/assets/player/swf/EmbedPlayer.swf"></param>
<param name="allowFullScreen" value="true" />
<param name="allowScriptAccess" value="always"/>
<param name="wmode" value="transparent"></param>
<param name="bgColor" value="#ffffff"></param>
<param name="flashvars" value="vu=http://video.ted.com/talk/stream/2008/Blank/JillBolteTaylor_2008-320k.mp4&su=http://images.ted.com/images/ted/tedindex/embed-posters/JillBolteTaylor-2008.embed_thumbnail.jpg&vw=512&vh=288&ap=0&ti=229&lang=en&introDuration=15330&adDuration=4000&postAdDuration=830&adKeys=talk=jill_bolte_taylor_s_powerful_stroke_of_insight;year=2008;theme=how_the_mind_works;theme=medicine_without_borders;theme=master_storytellers;event=TED2008;tag=biology;tag=brain;tag=consciousness;tag=global+issues;tag=illness;tag=science;&preAdTag=tconf.ted/embed;tile=1;sz=512x288;" />
<embed src="http://video.ted.com/assets/player/swf/EmbedPlayer.swf" pluginspace="http://www.macromedia.com/go/getflashplayer" type="application/x-shockwave-flash" wmode="transparent" bgColor="#ffffff" width="526" height="374" allowFullScreen="true" allowScriptAccess="always" flashvars="vu=http://video.ted.com/talk/stream/2008/Blank/JillBolteTaylor_2008-320k.mp4&su=http://images.ted.com/images/ted/tedindex/embed-posters/JillBolteTaylor-2008.embed_thumbnail.jpg&vw=512&vh=288&ap=0&ti=229&lang=en&introDuration=15330&adDuration=4000&postAdDuration=830&adKeys=talk=jill_bolte_taylor_s_powerful_stroke_of_insight;year=2008;theme=how_the_mind_works;theme=medicine_without_borders;theme=master_storytellers;event=TED2008;tag=biology;tag=brain;tag=consciousness;tag=global+issues;tag=illness;tag=science;&preAdTag=tconf.ted/embed;tile=1;sz=512x288;"></embed>
</object>


<p>(可以選擇中文字幕)</p>

<p>如此的震撼讓人印象不深刻都很難</p>

<h2>當作人生最後十八分鐘</h2>

<p>將演講想成你的人生剩下十八分鐘，你會怎麼去表達一個人生經驗？重點不是表達從小到大的精華故事，而是怎麼去分享具有意義的人生體驗</p>

<h2>用上台動機取代緊張</h2>

<p>我相信每個人對於上台分享，不管是第一次還是經驗豐富者，都還是會有緊張時刻，把注意力集中在演講動機，或是釐清演講目的，比將注意力其中在令人恐懼的緊張來的好</p>

<h2>畫面比口說更夠力</h2>

<p>讓大家親身感受吧！例如比爾‧蓋茲為了讓大家重視瘧疾，當場秀出了瘧蚊的罐子擺在大家面前，英國名廚奧利佛(Jamie Oliver)為了讓聽眾注意兒童的糖分攝取，將一車的糖推倒在大家面前</p>

<object width="526" height="374"><param name="movie" value="http://video.ted.com/assets/player/swf/EmbedPlayer.swf"></param><param name="allowFullScreen" value="true" /><param name="allowScriptAccess" value="always"/><param name="wmode" value="transparent"></param><param name="bgColor" value="#ffffff"></param><param name="flashvars" value="vu=http://video.ted.com/talk/stream/2010/Blank/JamieOliver_2010-320k.mp4&su=http://images.ted.com/images/ted/tedindex/embed-posters/JamieOliver-2010.embed_thumbnail.jpg&vw=512&vh=288&ap=0&ti=765&lang=en&introDuration=15330&adDuration=4000&postAdDuration=830&adKeys=talk=jamie_oliver;year=2010;theme=food_matters;theme=ted_prize_winners;theme=listening_to_teachers;event=TED2010;tag=business;tag=education;tag=food;tag=global+issues;tag=health;&preAdTag=tconf.ted/embed;tile=1;sz=512x288;" /><embed src="http://video.ted.com/assets/player/swf/EmbedPlayer.swf" pluginspace="http://www.macromedia.com/go/getflashplayer" type="application/x-shockwave-flash" wmode="transparent" bgColor="#ffffff" width="526" height="374" allowFullScreen="true" allowScriptAccess="always" flashvars="vu=http://video.ted.com/talk/stream/2010/Blank/JamieOliver_2010-320k.mp4&su=http://images.ted.com/images/ted/tedindex/embed-posters/JamieOliver-2010.embed_thumbnail.jpg&vw=512&vh=288&ap=0&ti=765&lang=en&introDuration=15330&adDuration=4000&postAdDuration=830&adKeys=talk=jamie_oliver;year=2010;theme=food_matters;theme=ted_prize_winners;theme=listening_to_teachers;event=TED2010;tag=business;tag=education;tag=food;tag=global+issues;tag=health;&preAdTag=tconf.ted/embed;tile=1;sz=512x288;"></embed></object>


<p>影片13:20秒開始，可以選擇中文字幕</p>

<h2>說理占10%就好</h2>

<p>說故事都有目的，有些是拿來激勵人，有些是警告某些事物，但不管如何，90%的時間都是拿來說故事，最後10%才是來說道理，做結論</p>

<p>我個人認為TED是個很棒的組織，因為他是個跨領域的論壇，集合來自不同背景的人意見，來激發每個人的想法，和衝擊你的思維，很慶幸的是，在2009年TED開放品牌授權，讓全世界有心有能力的人用TED的模式去經營TED大會，而這種TED授權的就叫做TEDx。以城市為名，用在地的故事，而台灣也有一個TED就叫做<a href="http://tedxtaipei.com/" target="_blank">TEDx Taipei</a></p>

<p>文章最後，我放上我個人最喜歡的TED演講片段『定時攝影下冰河急遽流失的證據』(Time-lapse proof of extreme ice loss)，是一個叫做James Balog的攝影家，用定時攝影的方式來呈現地球暖化的證據，影片內容讓我相當的震撼，因為那些場景是我一輩子沒看過也無法想像的畫面</p>

<object width="526" height="374"><param name="movie" value="http://video.ted.com/assets/player/swf/EmbedPlayer.swf"></param><param name="allowFullScreen" value="true" /><param name="allowScriptAccess" value="always"/><param name="wmode" value="transparent"></param><param name="bgColor" value="#ffffff"></param><param name="flashvars" value="vu=http://video.ted.com/talk/stream/2009G/Blank/JamesBalog_2009G-320k.mp4&su=http://images.ted.com/images/ted/tedindex/embed-posters/JamesBalog-2009G.embed_thumbnail.jpg&vw=512&vh=288&ap=0&ti=628&lang=en&introDuration=15330&adDuration=4000&postAdDuration=830&adKeys=talk=james_balog_time_lapse_proof_of_extreme_ice_loss;year=2009;theme=a_greener_future;theme=media_that_matters;theme=to_boldly_go;event=TEDGlobal+2009;tag=climate+change;tag=global+issues;tag=photography;tag=science;tag=technology;&preAdTag=tconf.ted/embed;tile=1;sz=512x288;" /><embed src="http://video.ted.com/assets/player/swf/EmbedPlayer.swf" pluginspace="http://www.macromedia.com/go/getflashplayer" type="application/x-shockwave-flash" wmode="transparent" bgColor="#ffffff" width="526" height="374" allowFullScreen="true" allowScriptAccess="always" flashvars="vu=http://video.ted.com/talk/stream/2009G/Blank/JamesBalog_2009G-320k.mp4&su=http://images.ted.com/images/ted/tedindex/embed-posters/JamesBalog-2009G.embed_thumbnail.jpg&vw=512&vh=288&ap=0&ti=628&lang=en&introDuration=15330&adDuration=4000&postAdDuration=830&adKeys=talk=james_balog_time_lapse_proof_of_extreme_ice_loss;year=2009;theme=a_greener_future;theme=media_that_matters;theme=to_boldly_go;event=TEDGlobal+2009;tag=climate+change;tag=global+issues;tag=photography;tag=science;tag=technology;&preAdTag=tconf.ted/embed;tile=1;sz=512x288;"></embed></object>


<p>參考資料:</p>

<p>1295期商業周刊</p>

<p><a href="http://www.ted.com/" target="_blank">TED</a></p>

<p><a href="http://tedxtaipei.com/" target="_blank">TEDxTaipei</a></p>

<p><a href="https://www.facebook.com/TEDxTaipei" target="_blank">TEDxTaipei Facebook粉絲團</a></p>

<p>如有錯誤，歡迎指正</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[CSS] 用了就無法回頭的Compass]]></title>
    <link href="http://rx836.github.com/blog/introduce-compass/"/>
    <updated>2012-09-14T15:24:00+08:00</updated>
    <id>http://rx836.github.com/blog/introduce-compass</id>
    <content type="html"><![CDATA[<p><a href="http://compass-style.org/" target="_blank">Compass</a>這個CSS的framework已經有一陣子了，但我始終沒有去好好了解他，印象中只知道他可以很快的寫出CSS，但可以多快其實我一直無法感受，再加上還要用Ruby的環境，感覺學習曲線就很高，也覺得現在CSS寫的也好好的，就沒多加注意，直到&#8230;</p>

<!--more-->


<p>我在看<a href="http://webdesign.tutsplus.com/tutorials/htmlcss-tutorials/css-sprite-sheets-best-practices-tools-and-helpful-applications/">CSS Sprite Sheets: Best Practices, Tools and Helpful Applications</a>這篇文章時，文章尾巴的Tools to Help又提到了Compass，說可以自動生成Sprite，讓我好奇心作祟的打算真正看一下什麼是Compass</p>

<p>沒想到，一用之下，驚為天人！我想這是很多數剛開始接觸Compass的人共同心聲吧，直接來看看怎麼使用吧！</p>

<p>首先要先把Ruby的環境安裝起來，不過因為我是用windows，所以要特別下載<a href="http://www.ruby-lang.org/zh_TW/downloads/" target="_blank">for windows</a>用的，安裝好了以後你可以到Ruby的資料夾底下有個Start Command Prompt with Ruby，開啟命令列，接著安裝Compass</p>

<pre><code>gem update --system #先更新gem
gem install compass #安裝Compass
</code></pre>

<p>安裝完Compass以後，Sass也會自動安裝起來，這邊要稍微提一下甚麼是<a href="http://sass-lang.com/" target="_blank">Sass</a></p>

<p><strong>Sass(Syntactically Awesome Stylesheets)</strong>其實就是一個拿來寫CSS樣式表的程式語言，然而還有一個因為CSS3而延伸的語法叫做Scss，兩個寫法有些微的差異，同樣的效果，寫法如下</p>

<p>Scss:</p>

<pre><code>table.hl {
  margin: 2em 0;
  td.ln {
    text-align: right;
  }
}
</code></pre>

<p>Sass:</p>

<pre><code>table.hl
  margin: 2em 0
  td.ln
    text-align: right
</code></pre>

<p>可以看到Scss的寫法比較像我們一般看到的CSS，而Sass強調的是更精簡、快速的寫法，所以是利用縮排來呈現</p>

<p>Sass/Scss的特點有可以利用變數，巢狀或是函式和繼承等，至於用法可以參考<a href="http://sass-lang.com/" target="_blank">官網</a>的首頁有簡單的範例，這邊就不提太多</p>

<p>回到Compass，其實Compass也就是一個Sass的Framework，已經把原本要寫很多次的樣式都打包好，剛剛講到安裝完Compass以後現在就來開始使用他</p>

<p>首先建立一個Compass專案</p>

<pre><code>compass creat mycompass
</code></pre>

<p>執行成功以後，會看到底下有三個資料夾，一個檔案</p>

<pre><code>.sass-cache //快取檔案
sass // sass檔/scss檔
stylesheets //css檔
config.rb //設定檔
</code></pre>

<p>接著你就可以開始編寫Sass檔，除了剛剛說的Sass/Scss的寫法以外，還可以利用Compass強大的功能，例如要做一個reset檔案首先新建一個reset.scss，然後在裡面直接加上以下這段</p>

<pre><code>@import "compass/reset";
</code></pre>

<p>接著可以用compile的方式</p>

<pre><code>compass compile [資料夾名稱或路徑]
</code></pre>

<p>或是用監控的方式</p>

<pre><code>compass watch [資料夾名稱或路徑]
</code></pre>

<p>我比較喜歡用watch方式，因為這樣改完直接存檔就會自動compile，reset.scss compile以後，就會看到stylesheets資料夾底下就出現reset.css的檔案了！</p>

<p>其他還有像文章開頭提到的自動生成Sprite，到底有多神奇，來看看怎麼做</p>

<p>首先準備兩張圖，一張是facebook的icon，另一張是plurk的icon，如下圖</p>

<p><img src="https://lh6.googleusercontent.com/-fwPpZzFYl9I/UFL6CnNIZ1I/AAAAAAAABgE/t7FFyDSX-UU/s243/1.jpg" /></p>

<p>接著這邊就是要注意的地方了，一開始我將圖放到icons的資料夾裡面，並且跟sass和stylesheets資料夾都擺在同一層</p>

<p><img src="https://lh5.googleusercontent.com/-0AQioXIX4X8/UFL6qh2A2SI/AAAAAAAABgM/cuUTLF7UcOs/s660/2.jpg" /></p>

<p>接著我就建一個sprite.scss的檔案並且在裡面加上</p>

<pre><code>@import "icons/*.png";
@include all-icons-sprites;  
</code></pre>

<p>可是後來發現怎麼compile都沒有用，一直出現以下錯誤訊息</p>

<pre><code>No files were found in the load path matching "icons/*.png". Your current load
paths
</code></pre>

<p>後來我才發現原來在設定檔config.rb裡面有指定圖檔的擺放位置</p>

<pre><code>http_path = "/"
css_dir = "stylesheets"
sass_dir = "sass"
images_dir = "images" //&lt;--指定圖檔位置
javascripts_dir = "javascripts"
</code></pre>

<p>原來是要把icons的資料夾擺在images底下才行，重新指定好位置以後，再一次的compile，就會發現，Compass已經合好圖了！而且連CSS都寫好了！</p>

<pre><code>.icons-sprite, .icons-facebook, .icons-plurk {
  background: url('/images/icons-s78250ef0c5.png') no-repeat;
}

.icons-facebook {
  background-position: 0 0;
}

.icons-plurk {
  background-position: 0 -48px;
}
</code></pre>

<p>太強大了！難怪很多人用了都回不去了，因為小弟我也是剛學沒多久，所以還有很多更強大的功能就要請各位自己去發掘了</p>

<p>參考資料:</p>

<p><a href="http://blog.visioncan.com/2011/compass-sass-your-css/" target="_blank">用強大的compass+sass寫css</a></p>

<p><a href="http://kw0006667.wordpress.com/compass-%E2%80%93-%E4%BD%BF%E7%94%A8-ruby-compass-on-windows/" target="_blank">Compass – 使用 Ruby + compass on Windows</a></p>

<p>如有錯誤，歡迎指正</p>
]]></content>
  </entry>
  
</feed>
