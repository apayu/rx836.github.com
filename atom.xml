<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Rx836]]></title>
  <link href="http://rx836.github.com/atom.xml" rel="self"/>
  <link href="http://rx836.github.com/"/>
  <updated>2012-05-18T23:32:10+08:00</updated>
  <id>http://rx836.github.com/</id>
  <author>
    <name><![CDATA[阿帕]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[[Jquery]jquery使用筆記(一)]]></title>
    <link href="http://rx836.github.com/blog/jquery-notes-1/"/>
    <updated>2012-05-18T12:17:00+08:00</updated>
    <id>http://rx836.github.com/blog/jquery-notes-1</id>
    <content type="html"><![CDATA[<p>從08年那時候剛接觸到jquery，到現在每天都在使用他，總覺得好像不為自己寫一下筆記使用心得，也有點不踏實，重點是，我好像也沒什麼&#8221;材料&#8221;可以貢獻在廣大的技術社群裡面，只能從我會一點皮毛的地方開始寫起真正的程式筆記心得，希望能從這開始發芽&#8230;.，最後長成大樹(無尾熊?疑?)</p>

<!--more-->


<p>近一兩年所呈現的網頁，網站越來越重視所謂互動效果，隨著瀏覽器的執行速度越來越快，就有越來越多的特效與動畫，出現在網際網路世界裡，廢話不多，直接擺上例子</p>

<p><a href="http://jquery.malsup.com/cycle/" target="_blank">jQuery Cycle Plugin</a></p>

<p><a href="http://jquery.malsup.com/block/#page" target="_blank">jQuery BlockUI Plugin (v2)</a></p>

<p>在以前可能會覺得非常的酷炫，可是現在似乎沒有加幾個特效好像就不叫一個網頁(?)這些用原生的javascript都可以自己刻出來，但在現在凡事求快的情況下，一個案子可能沒那麼多時間慢慢寫這些東西，更何況還有令人聞之喪膽的跨瀏覽器問題</p>

<p>所以在這個情況下，用javascript所寫的一個library就這麼誕生了，不僅解決了跨瀏覽器的問題，更重要的是，他運用了很多HTML與CSS的原理，使的設計人員可以在會一點點的JS情況下，完成這些效果</p>

<p>而對於開發人員來說，強大的plugin社群，更是縮減了不少開發時間，就如同剛剛那兩個範例連結，當然，還有其他更多更好的優點如下</p>

<h4>強大的選擇器、輕鬆找到你要的元素 例:尋找class名稱為myName，底下所有的a標籤</h4>

<pre><code>$('.myName').find(a);
</code></pre>

<h4>改變頁面的呈現樣式 例:替所有div增加一個名為myStyle的class</h4>

<pre><code>$(div).addClass('myStyle');
</code></pre>

<h4>改變網頁內容 例:在body底下額外增加html標籤</h4>

<pre><code>$(body).append('&lt;div&gt;my html&lt;/div&gt;');
</code></pre>

<h4>與使用者做互動 例:點擊button後alert出一個視窗</h4>

<pre><code>$(button).click(function(){
    alert('good!');
});
</code></pre>

<h4>簡單的動畫增加良好的使用者經驗 例:簡單在div做fading效果</h4>

<pre><code>$(div).fadeIn();
</code></pre>

<h4>支援AJAX效果 例:載入article.html</h4>

<pre><code>$('#a').load('article.html');
</code></pre>

<h4>利用迭代的特性簡化javascript 例:分別alert出a,b,c</h4>

<pre><code>var a1=["a","b","c"];
$.each(a1,function(){
    alert(this);
});
</code></pre>

<p>可能有些人會覺得，現在市面上的library 這麼多，為什麼一定要選Jquery?當然，你也可以選擇別的library沒錯，那這篇筆記我們就到這邊吧&#8230;ㄟ!當然不是呀，為什麼Jquery能有這麼廣泛的使用者，一定是有他的原因的是吧?</p>

<h4>利用css的知識原理架構</h4>

<p>Jquery繼承了CSS強大的選擇器，這讓許多網頁設計者，可以利用自有本身的CSS知識來撰寫Jquery，而不用擔心因為程式的門檻關係，而降低使用特效的學習曲線</p>

<h4>支援擴充</h4>

<p>你可以修改別人的plugin，也可以自己撰寫一個plugin，甚至將好幾個plugin合在一起來個大雜燴也可以，減少重造輪子</p>

<h4>解決跨瀏覽器的問題</h4>

<p>我想這不用說了，一切都是IE造就了Jquery的蓬勃發展(誤)</p>

<h4>超方便的隱式迭代(implicit iteration)</h4>

<p>如果要將所有的div做隱藏，在以前我們可能要先將div都找出來，然後再用for迴圈一個一個隱藏，但Jquery說:不用! 只要這樣寫就好了!</p>

<pre><code>$(div).hide();
</code></pre>

<p>這裡的div其實是所有的div集合，利用這種特性，就可以減少很多程式碼的撰寫</p>

<h4>鍊式(Chaining)語法的魔力</h4>

<p>Jquery可以跟串香腸一樣，把許多動作串成一行程式，增加程式的效率，也不用再定義一堆變數</p>

<pre><code>$(div).show().addClass('a');
</code></pre>

<h4>富爸爸和全世界強大的社群力量</h4>

<p>這當然是最重要的一部份啦，除了微軟支援他以外，全世界有這麼多人使用，還怕找不到教學與範例可以複製貼上嗎?(誤)</p>

<p>好了，講了那麼概念，還是要動手開始實做一次</p>

<h3>首先下載Jquery</h3>

<p>你可以到<a href="http://docs.jquery.com/Downloading_jQuery" target="_bland">Jquery Download</a>下載Jquery回來，或是使用Google CDN或Microsoft CDN，他有分壓縮過後的版本和沒壓縮過後的版本，一般來說開發階段可以使用開發版本</p>

<h3>引入Jquery文件</h3>

<p>將jquery引入到你的web頁面，一般是放在head裡面，底下是引入Google  API CDN</p>

<pre><code>&lt;head&gt;
    &lt;script  src="http://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
</code></pre>

<p>接著在body裡面加上簡單的HTML</p>

<pre><code>&lt;div class="btnClass"&gt;點我&lt;/div&gt;
    &lt;div class="showClass"&gt;
        &lt;p&gt;one&lt;/p&gt;
        &lt;p&gt;two&lt;/p&gt;
        &lt;p&gt;there&lt;/p&gt;
&lt;/div&gt;
</code></pre>

<p>然後在script標籤裡面加上這段語法</p>

<pre><code>$(document).ready(function() {
        $('.btnClass').click(function(){
            $('.showClass&gt;p').eq(0).hide();
        });
});
</code></pre>

<p>這裡我們做簡單的程式解說，目的是想讓讀者了解如何使用Jquery，詳細的部分都會在未來的筆記多做介紹，首先是Jquery的選擇器$()，你可以在選擇器裡面利用CSS語法字串，來選取你想要的元素，例如選取class名稱為a的元素</p>

<pre><code>$('.a')
</code></pre>

<p>或是選取ID名為b底下的a標籤</p>

<pre><code>$('#b a')
</code></pre>

<p>這裡我們所選擇的是class名為btnClass的元素，接著$()會將選取的元素$(&#8216;.btnClass&#8217;)封裝成一個Jquery物件，並且回傳，這時候就利用剛剛所講的<strong>鍊式Chaining</strong>，給予他一個click事件，而我們這邊可以榜定一個函在這個click事件裡面，當點擊btnClass時可以執行這個<strong>函式(function)</strong>，我們在函式裡面加了$(&#8216;.showClass>p&#8217;).eq(0).hide();這行程式碼
，這裡會看到一個比較特別的方法<strong>eq()</strong>，我們前面曾經提過，$()裡面是包含所選取的元素集合，所以可以利用eq()方法來選取我們想要的元素，eq()裡面指定一個index，這裡我們想指定第一個，所以是eq(0)，接著在Chaining一個hide()的方法，我們就完成基本的程式語法結構</p>

<h1>等等!</h1>

<p>$(document).ready()是什麼東西?!</p>

<p>說到<strong>$(document).ready()</strong>這個語法常會拿<strong>window.onload</strong>這個語法一起比較，簡單的來說window.onload是JS的原生事件，觸發的時機是整個網頁都載下來(包含圖片)時，而$(document).ready是在DOM元素下載下來後就先觸發，他是使用DOM標準的DOMContentLoaded事件，意思就是不需要等圖片載完，好處就是觸發時間比較早，而DOMContentLoaded其實是firefox的DOM事件，IE其實是要用其他特殊處理才能達到一樣效果，但! Jquery的好處就在這裡，已經幫你把跨流覽器的問題處理好了!!</p>

<p>介紹完Jquery程式碼部分接著就可以開啟瀏覽器執行，當你點擊<strong>點我</strong>時，<strong>one</strong>就會消失不見</p>

<p>神奇吧!!只需要這幾行程式碼!</p>

<p><a href="http://jsfiddle.net/RNCVB/1/" target="_blank">線上範例</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Facebook]關於FB access tokens過期的處理]]></title>
    <link href="http://rx836.github.com/blog/facebook-expired-access-tokens/"/>
    <updated>2012-05-04T22:45:00+08:00</updated>
    <id>http://rx836.github.com/blog/facebook-expired-access-tokens</id>
    <content type="html"><![CDATA[<p>Facebook已經在5/1號移除offline_access的權限，也就是說之後將不再支援offline_access，小弟我英文不是很好，官方文件沒辦法翻譯完全，但我會將我的解法跟大家分享</p>

<!--more-->


<p>如果你的Facebook APP都是User在應用程式裡面<strong>立即</strong>完成動作的話，幾乎不用考慮access tokens時效性的問題，但如果你有一些不是當下立刻執行，而是可能過多久以後才執行動作，例如:<strong>幾小時後發一篇訊息到塗鴉牆</strong>，或是像我一樣，寫了一隻app可以<strong>預約上傳照片的APP</strong>，就有可能面臨到access tokens過期問題</p>

<p>依照Facebook他們的文件所寫，access tokens過期總共會有四種情況</p>

<h3>1.The token expires after expires time (2 hours is the default)</h3>

<p>因為太久沒更新access tokens而導致過期(預設是1-2小時之間)</p>

<h3>2.The user changes her password which invalidates the access token</h3>

<p>User改變登入時的密碼</p>

<h3>3.The user de-authorizes your app</h3>

<p>User移除掉你的APP驗證(在帳號設定->應用程式)</p>

<h3>4.The user logs out of Facebook.</h3>

<p>User登出Facebook</p>

<p>以上四種情況都會導致時效過期，但在新的整合之下，雖然預設只有1-2個小時的時效，但實際上可透過延長來達到60天的期限</p>

<p>首先用Javascript SDK用一般取得access tokens的方法</p>

<pre><code>FB.getLoginStatus(function(response) {
        if (response.authResponse) {
            //FB User ID
            var u_fbid = response.authResponse.userID;                
            //FB accessToken
            var access_token = response.authResponse.accessToken;                
        } else {
            login();
            // no user session available, someone you dont know
        }
    });
</code></pre>

<p>取得壽命較短的access tokens(short-lived)以後，再透過GET取得較長的access tokens(long-lived)，已擴展到60天的時效，這裡我用Jquery的$.ajax來取得</p>

<pre><code>save_u = [
                        { name: "client_id", value: APP_ID },
                        { name: "client_secret", value: APP_SECRET },
                        { name: "grant_type", value: 'fb_exchange_token' },
                        { name: "fb_exchange_token", value: EXISTING_ACCESS_TOKEN  }
                   ];
            $.ajax({
                type: "GET",
                url: "https://graph.facebook.com/oauth/access_token",
                data: save_u,
                success: function(data) {
                    console.log(data);
                    });
                }
            });
</code></pre>

<p>APP_ID和APP_SECRET從你設定APP的地方就可以看到，grant_type的值照抄就是fb_exchange_token，而參數fb_exchange_token要給的值就是你剛所取得較短的access tokens</p>

<p>接著Facebook就會回傳一串值回來</p>

<pre><code>access_token=xxxxxxxxxxxxxxxxx&amp;expires=5183914
</code></pre>

<p>xxx那些就代表著新的並且擁有60天期限的access tokens</p>

<p>而期限5183914就是秒數，算一算剛好差不多是60天的時間沒錯</p>

<p>雖然目前使用都是OK，但如果我有新的心得還是會再上來與大家分享，那如果文章裡有錯誤的話，也請不吝於指正，另外參考連結裡面有PHP的範例可以作為參考</p>

<p>參考:</p>

<p><a href="https://developers.facebook.com/blog/post/2011/05/13/how-to--handle-expired-access-tokens/">How-To: Handle expired access tokens</a></p>

<p><a href="https://developers.facebook.com/roadmap/offline-access-removal/">Removal of offline_access permission</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[讀後心得] 只剩下一個角落的繁華]]></title>
    <link href="http://rx836.github.com/blog/book-review-1/"/>
    <updated>2012-05-01T21:38:00+08:00</updated>
    <id>http://rx836.github.com/blog/book-review-1</id>
    <content type="html"><![CDATA[<p>作者:陳文茜</p>

<p>出版者:時報文化出版</p>

<!-- more  -->


<h2>地球上青春的眼淚</h2>

<p>這是這本書一開始的標題，從標題就可以看出，其實這是本想寫給這一代年輕人的書，一開始就直接講明說，這一代的年輕人所背負的時代命運，因為歐債危機，因為美國華爾街的那些肥貓，因為政治人物的總總行為，最終導致青年的失業率高漲，甚至可能連翻身的機會都沒有</p>

<p>整本書提到從美國的美元和帝國夢，德國的矛盾和歐洲的高傲，龐大的福利壓垮政府的財政(不敢相信 歐洲很多國家每周工時只有30小時&#8230;)，因為德國人的勤奮對比著希臘人的墮落，卻又因為歐元區的未來不得不救希臘，再對比中國人的血汗工廠與華爾街的肥貓和美國印鈔票來享樂，還有阿拉伯世界的革命&#8230;</p>

<p>或許我們很多人可能還是每天過著天亮起床工作，黃昏收工回家的日子，表面上一成不變的生活，但世界上卻到處充滿著暗潮洶湧的變化，2008年的金融海嘯，到今日的這段日子裡，我們到底學到了甚麼?又或著我們感受到了甚麼?</p>

<h2>政治人物應該憑藉著自己的專業從政，而不是一昧的聽取民意&#8230;</h2>

<p>印象最讓我深刻的就是德國總理梅克爾，正為了自己的政治前途和歐洲經濟的未來做抉擇，一方面背負著德國人民並不想要救那些每天不工作又好吃懶做的希臘人，而產生大量的民怨，一方面卻又背負著如果不救希臘，希臘債券一到期，大量的違約將造成德國與其他國家的銀行產生倒閉潮，甚至導致歐元區瓦解</p>

<p>如果你是梅克爾，你會怎麼做?</p>

<p>如果場景轉移到台灣來，台灣的領導人物會怎麼做?</p>

<p>對照今日台灣的油電問題，民生問題，有時候我不得不說，民意固然重要，但就如標題所寫的，政治人物應該憑藉著自己的專業從政，而不是一昧的聽取民意</p>

<p>如果那些政治人物，一昧的享受好處與特權，卻一投票就討好民眾，我們其實一點也不需要那些政治人物，我們要的是公投，公投，再公投</p>

<p>反正民意為大</p>

<h2>最後我想說的是&#8230;</h2>

<p>我們這一代的年輕人都應該勇敢的追尋自己內心與直覺</p>

<p>在這個混亂的時代裡</p>

<p>或許，把簡單的事情重複一直做，專注於你想專注的事</p>

<p>或許，這會是我們翻身的一個年代</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[如何開啟 Disqus與和常見的指令]]></title>
    <link href="http://rx836.github.com/blog/octopress-notes-1/"/>
    <updated>2012-04-27T02:12:00+08:00</updated>
    <id>http://rx836.github.com/blog/octopress-notes-1</id>
    <content type="html"><![CDATA[<p>經營Blog不是一件簡單的事情，尤其是還是自己架Blog的情況下，更是挫折連連，真的是憑藉著一股不知哪來的傻勁，遇到問題就找找資料，土法煉鋼好像也能做出一把堪用的武器出來</p>

<!-- more  -->


<h2>為什麼我沒有Comments..</h2>

<p>對呀&#8230;，為什麼我沒有Comments，沒想到第一個遇到的問題就是這麼看似平凡，但對於我這個新手來說，卻是不知如何是好的難題，好險網路上還是有很多人願意紀錄這一切</p>

<p><a href="http://gangmax.github.com/blog/2012/01/20/how-to-use-disqus-in-octopress/" target="_blank">Blog of GangMax : How to Use Disqus in Octopress</a></p>

<p>簡單來說就是需先申請<a href="www.disqus.com/" target="_blank">disqus</a>帳號，接著將你的disqus_short_name填在<strong>_config.yml</strong>裡面</p>

<pre><code>disqus_short_name: your_disqus_short_name
disqus_show_comment_count: true
</code></pre>

<h2>一些常用的指令</h2>

<p>說來可憐&#8230;，我到現在還不會在不同台電腦編寫我的Octopress，最近嘗試一次結果因為不熟git而把檔案搞得亂七八糟，但最近有找到一篇文章，我是還沒有親自嘗試過，但想要在這邊先記錄下來，以方便我回頭來看</p>

<p><a href="http://shanewfx.github.com/blog/2012/02/16/clone-blog-from-github/" target="_blankl">思考的轨迹 : 如何维护Github上博客</a></p>

<p>然後常用的指令有</p>

<p><strong>設置Octopress與Github做連結</strong></p>

<pre><code>rake setup_github_pages
</code></pre>

<p><strong>新增文章</strong></p>

<pre><code>rake new_post["title"]
</code></pre>

<p><strong>產生<em>deploy，也就是將你source裡面的檔案轉換成html放到</em>deploy</strong></p>

<pre><code>rake generate
</code></pre>

<p><strong>發佈_deploy到Github上</strong></p>

<pre><code>rake deploy
</code></pre>

<p><strong>假使用UTF-8編碼，必須先設定這兩行</strong></p>

<pre><code>set LC_ALL=zh_TW.UTF-8
set LANG=zh_TW.UTF-8
</code></pre>

<p><strong>將Octopress原始碼放到Github分支Source上(Master是放_deploy)</strong></p>

<pre><code>git add .
git commit -m "your message"
git push origin source  
</code></pre>

<p>這還真是一篇＂筆記＂的文章&#8230;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[出生以來第一次使用Octopress for windows]]></title>
    <link href="http://rx836.github.com/blog/first-octopress/"/>
    <updated>2012-04-27T01:55:00+08:00</updated>
    <id>http://rx836.github.com/blog/first-octopress</id>
    <content type="html"><![CDATA[<p>終於&#8230;</p>

<p>在拼命的鬼打牆之下，我終於架好<a href="http://octopress.org/" target="_blank">Octopress</a>，之前原本就想用過Blogger想要當作工作上的筆記來用，久而久之除了介面不好用再加上懶惰的情況下，沒多久就放棄了，接下來換到點部落，剛好遇到他們貼程式碼的BUG，在等他們修復的情況下，我的耐心也隨著時間而流逝放棄</p>

<!-- more  -->


<p>但因為這篇是我第一次用Octopress寫文章，許多設定和細節都還沒掌握，所以我簡單的貼上幾個從google上所找到的教學資源作為筆記與參考</p>

<p>1.因為我是用Octopress+github，所以首先必須先安裝好github</p>

<p><a href="http://itspg.github.com/blog/2012/02/29/github-on-windows-tutorial/" target="_blank">itsPG.org [教學] 在windows上使用github 新手教學 / 初學者指南</a></p>

<p>這是針對windows，至於其他作業系統例如Mac網路上資源頗多的，這裡就不多加闡述</p>

<p>2.再來是安裝Octopress</p>

<p><a href="http://itspg.github.com/blog/2012/02/29/octopress-on-windows-tutorial/" target="_blank">itsPG.org [教學] 在windows上安裝octopress 新手教學 / 初學者指南</a></p>

<p>3.因為Octopress是用Markdown編輯的，所以要了解到甚麼是Markdown</p>

<p><a href="http://markdown.tw/#link" target="_blank">Markdown</a></p>

<p>4.再來就是找一個好編輯Markdown的工具來編輯，當然用記事本也是可以，這邊我選擇的是MarkPad</p>

<p><a href="http://code52.org/DownmarkerWPF/" target="_blank">MarkPad</a></p>

<p>不過要注意的是要先安裝<a href="http://www.microsoft.com/downloads/zh-tw/details.aspx?FamilyID=0a391abd-25c1-4fc0-919f-b21f31ab88b7" target="_blank">Microsoft .NET Framework 4</a></p>

<p>接著就開開心心的使用Octopress</p>

<p>但接下來還有很多東西還要學習與克服，我也會將遭遇到的問題記錄成筆記來當作參考</p>
]]></content>
  </entry>
  
</feed>
